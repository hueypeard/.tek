{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/three-ammo/constants.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/ammo.js/builds/ammo.wasm.js","webpack:///./node_modules/ammo.js/builds/ammo.wasm.wasm","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/three/build/three.module.js","webpack:///./node_modules/ammo-debug-drawer/AmmoDebugDrawer.js","webpack:///./node_modules/three-ammo/src/world.js","webpack:///./node_modules/three-ammo/src/body.js","webpack:///./node_modules/three-ammo/src/constraint.js","webpack:///./node_modules/three-to-ammo/index.js","webpack:///./node_modules/three-ammo/src/ammo.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GRAVITY","MAX_INTERVAL","ITERATIONS","ACTIVATION_STATE","ACTIVE_TAG","ISLAND_SLEEPING","WANTS_DEACTIVATION","DISABLE_DEACTIVATION","DISABLE_SIMULATION","COLLISION_FLAG","STATIC_OBJECT","KINEMATIC_OBJECT","NO_CONTACT_RESPONSE","CUSTOM_MATERIAL_CALLBACK","CHARACTER_OBJECT","DISABLE_VISUALIZE_OBJECT","DISABLE_SPU_COLLISION_PROCESSING","TYPE","STATIC","DYNAMIC","KINEMATIC","SHAPE","BOX","CYLINDER","SPHERE","CAPSULE","CONE","HULL","HACD","VHACD","MESH","HEIGHTFIELD","FIT","ALL","MANUAL","CONSTRAINT","LOCK","FIXED","SPRING","SLIDER","HINGE","CONE_TWIST","POINT_TO_POINT","MESSAGE_TYPES","INIT","READY","ADD_BODY","BODY_READY","UPDATE_BODY","REMOVE_BODY","ADD_SHAPES","REMOVE_SHAPES","ADD_CONSTRAINT","REMOVE_CONSTRAINT","ENABLE_DEBUG","RESET_DYNAMIC_BODY","ACTIVATE_BODY","TRANSFER_DATA","BUFFER_CONFIG","HEADER_LENGTH","MAX_BODIES","MATRIX_OFFSET","LINEAR_VELOCITY_OFFSET","ANGULAR_VELOCITY_OFFSET","COLLISIONS_OFFSET","BODY_DATA_SIZE","BUFFER_STATE","UNINITIALIZED","CONSUMED","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_scriptDir","Ammo","document","currentScript","src","undefined","b","g","ca","aa","fa","ia","da","ea","window","importScripts","node","ka","la","ma","na","ja","__dirname","a","normalize","readFileSync","buffer","Uint8Array","assert","replace","slice","oa","inspect","read","readbuffer","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","pa","qa","sa","ra","f64-rem","debugger","wasmBinary","WebAssembly","ta","ua","Table","initial","maximum","element","wa","Ea","Aa","h","Fa","Ga","xa","TextDecoder","ya","subarray","decode","f","String","fromCharCode","za","Ba","charCodeAt","Ca","Da","Ha","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","Ja","TOTAL_MEMORY","Ka","shift","it","$s","dynCall_v","dynCall_vi","wasmMemory","Memory","byteLength","La","Ma","Na","Oa","Pa","Qa","preRun","unshift","Ra","Math","cos","Sa","sin","Ta","Ua","Va","onAbort","RuntimeError","Wa","Xa","startsWith","preloadedImages","preloadedAudios","Ya","locateFile","Za","asm","monitorRunDependencies","clearInterval","instance","fetch","Promise","credentials","then","ok","arrayBuffer","catch","instantiate","ab","wasi_unstable","global","NaN","Infinity","global.Math","asm2wasm","instantiateWasm","instantiateStreaming","bb","N","getCache","ConcreteContactResultCallback","addSingleResult","DebugDrawer","drawLine","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","db","___errno_location","cb","eb","fb","gb","hb","mb","nb","ob","sb","Ls","tb","ub","vb","wb","xb","yb","Date","getTime","getMonth","getFullYear","getDate","setDate","setMonth","setFullYear","Ab","hrtime","dateNow","performance","now","rb","Bb","Uv","Bu","$v","Yv","fd","Wv","flags","bw","Vv","qb","aw","gt","q","Zv","Xv","u","ba","Ia","va","Jb","__memory_base","__table_base","D","C","B","A","z","j","y","set","max","min","grow","k","pb","dt","x","w","splice","Cb","v","toString","getDay","Cs","Zs","Sv","Rv","Xs","Us","Ks","Ys","cw","Qv","Tv","%c","%D","%F","%h","%r","%R","%T","%x","%X","%Ec","%EC","%Ex","%EX","%Ey","%EY","%Od","%Oe","%OH","%OI","%Om","%OM","%OS","%Ou","%OU","%OV","%Ow","%OW","%Oy","RegExp","split","Ec","%a","substring","%A","%b","%B","%C","%d","%e","%g","%G","%H","%I","%j","%m","%M","%n","%p","%S","%t","%u","%U","ceil","%V","%w","%W","%y","%Y","%z","abs","%Z","%%","zb","memory","table","Db","Su","__ZSt18uncaught_exceptionv","E","Eb","_emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2","F","Fb","_emscripten_bind_AllHitsRayResultCallback___destroy___0","G","Gb","_emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0","H","Hb","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0","I","Ib","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0","J","Kb","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0","K","Lb","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0","L","Mb","_emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0","M","Nb","_emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0","Ob","_emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0","O","Pb","_emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0","P","Qb","_emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0","Q","Rb","_emscripten_bind_AllHitsRayResultCallback_hasHit_0","R","Sb","_emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1","S","Tb","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1","T","Ub","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1","U","Vb","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1","V","Wb","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1","W","Xb","_emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1","X","Yb","_emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1","Y","Zb","_emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1","Z","$b","_emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1","_","ac","_emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1","$","bc","_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2","cc","_emscripten_bind_ClosestConvexResultCallback___destroy___0","dc","_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0","ec","_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0","fc","_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0","hc","_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0","ic","_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0","ga","jc","_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0","ha","kc","_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0","lc","_emscripten_bind_ClosestConvexResultCallback_hasHit_0","mc","_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1","nc","_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1","oc","_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1","pc","_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1","qc","_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1","rc","_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1","sc","_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1","tc","_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2","uc","_emscripten_bind_ClosestRayResultCallback___destroy___0","vc","_emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0","wc","_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0","xc","_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0","yc","_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0","zc","_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0","Ac","_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0","Bc","_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0","Cc","_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0","Dc","_emscripten_bind_ClosestRayResultCallback_hasHit_0","Fc","_emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1","Gc","_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1","Hc","_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1","Ic","_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1","Jc","_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1","Kc","_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1","Lc","_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1","Mc","_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1","Nc","_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0","Oc","_emscripten_bind_ConcreteContactResultCallback___destroy___0","Pc","_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7","Qc","_emscripten_bind_ContactResultCallback___destroy___0","Rc","_emscripten_bind_ContactResultCallback_addSingleResult_7","Sc","_emscripten_bind_ConvexHull_ConvexHull_0","Tc","_emscripten_bind_ConvexHull___destroy___0","Uc","_emscripten_bind_ConvexHull_get_m_nPoints_0","Vc","_emscripten_bind_ConvexHull_get_m_nTriangles_0","Wc","_emscripten_bind_ConvexHull_get_m_points_1","Xc","_emscripten_bind_ConvexHull_get_m_triangles_1","Yc","_emscripten_bind_ConvexResultCallback___destroy___0","Zc","_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0","$c","_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0","ad","_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0","bd","_emscripten_bind_ConvexResultCallback_hasHit_0","cd","_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1","_a","dd","_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1","$a","ed","_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1","_emscripten_bind_DebugDrawer_DebugDrawer_0","gd","_emscripten_bind_DebugDrawer___destroy___0","hd","_emscripten_bind_DebugDrawer_draw3dText_2","id","_emscripten_bind_DebugDrawer_drawContactPoint_5","jd","_emscripten_bind_DebugDrawer_drawLine_3","kd","_emscripten_bind_DebugDrawer_getDebugMode_0","ld","_emscripten_bind_DebugDrawer_reportErrorWarning_1","md","_emscripten_bind_DebugDrawer_setDebugMode_1","ib","nd","_emscripten_bind_HACD_Compute_0","jb","od","_emscripten_bind_HACD_GetCH_3","kb","pd","_emscripten_bind_HACD_GetNClusters_0","lb","qd","_emscripten_bind_HACD_GetNPointsCH_1","rd","_emscripten_bind_HACD_GetNTrianglesCH_1","sd","_emscripten_bind_HACD_HACD_0","td","_emscripten_bind_HACD_SetCompacityWeight_1","ud","_emscripten_bind_HACD_SetConcavity_1","vd","_emscripten_bind_HACD_SetNClusters_1","wd","_emscripten_bind_HACD_SetNPoints_1","xd","_emscripten_bind_HACD_SetNTriangles_1","yd","_emscripten_bind_HACD_SetNVerticesPerCH_1","zd","_emscripten_bind_HACD_SetPoints_1","Ad","_emscripten_bind_HACD_SetTriangles_1","Bd","_emscripten_bind_HACD_SetVolumeWeight_1","Cd","_emscripten_bind_HACD___destroy___0","Dd","_emscripten_bind_LocalConvexResult_LocalConvexResult_5","Ed","_emscripten_bind_LocalConvexResult___destroy___0","Fd","_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0","Gd","_emscripten_bind_LocalConvexResult_get_m_hitFraction_0","Hd","_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0","Id","_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0","Jd","_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0","Kd","_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1","Ld","_emscripten_bind_LocalConvexResult_set_m_hitFraction_1","Md","_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1","Nd","_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1","Od","_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1","Pd","_emscripten_bind_LocalShapeInfo___destroy___0","Qd","_emscripten_bind_LocalShapeInfo_get_m_shapePart_0","Rd","_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0","Sd","_emscripten_bind_LocalShapeInfo_set_m_shapePart_1","Td","_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1","Ud","_emscripten_bind_Parameters_Parameters_0","Vd","_emscripten_bind_Parameters___destroy___0","Wd","_emscripten_bind_Parameters_get_m_alpha_0","Xd","_emscripten_bind_Parameters_get_m_beta_0","Yd","_emscripten_bind_Parameters_get_m_concavity_0","Zd","_emscripten_bind_Parameters_get_m_convexhullApproximation_0","$d","_emscripten_bind_Parameters_get_m_convexhullDownsampling_0","ae","_emscripten_bind_Parameters_get_m_depth_0","be","_emscripten_bind_Parameters_get_m_gamma_0","ce","_emscripten_bind_Parameters_get_m_maxNumVerticesPerCH_0","de","_emscripten_bind_Parameters_get_m_minVolumePerCH_0","_b","ee","_emscripten_bind_Parameters_get_m_mode_0","fe","_emscripten_bind_Parameters_get_m_oclAcceleration_0","ge","_emscripten_bind_Parameters_get_m_pca_0","he","_emscripten_bind_Parameters_get_m_planeDownsampling_0","ie","_emscripten_bind_Parameters_get_m_resolution_0","je","_emscripten_bind_Parameters_set_m_alpha_1","ke","_emscripten_bind_Parameters_set_m_beta_1","le","_emscripten_bind_Parameters_set_m_concavity_1","gc","me","_emscripten_bind_Parameters_set_m_convexhullApproximation_1","ne","_emscripten_bind_Parameters_set_m_convexhullDownsampling_1","oe","_emscripten_bind_Parameters_set_m_depth_1","pe","_emscripten_bind_Parameters_set_m_gamma_1","qe","_emscripten_bind_Parameters_set_m_maxNumVerticesPerCH_1","re","_emscripten_bind_Parameters_set_m_minVolumePerCH_1","se","_emscripten_bind_Parameters_set_m_mode_1","te","_emscripten_bind_Parameters_set_m_oclAcceleration_1","ue","_emscripten_bind_Parameters_set_m_pca_1","ve","_emscripten_bind_Parameters_set_m_planeDownsampling_1","we","_emscripten_bind_Parameters_set_m_resolution_1","xe","_emscripten_bind_RayResultCallback___destroy___0","ye","_emscripten_bind_RayResultCallback_get_m_closestHitFraction_0","ze","_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0","Ae","_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0","Be","_emscripten_bind_RayResultCallback_get_m_collisionObject_0","Ce","_emscripten_bind_RayResultCallback_hasHit_0","De","_emscripten_bind_RayResultCallback_set_m_closestHitFraction_1","Ee","_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1","Fe","_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1","Ge","_emscripten_bind_RayResultCallback_set_m_collisionObject_1","He","_emscripten_bind_VHACD_Cancel_0","Ie","_emscripten_bind_VHACD_Clean_0","Je","_emscripten_bind_VHACD_Compute_7","Ke","_emscripten_bind_VHACD_GetConvexHull_2","Le","_emscripten_bind_VHACD_GetNConvexHulls_0","Me","_emscripten_bind_VHACD_Release_0","Ne","_emscripten_bind_VHACD_VHACD_0","Oe","_emscripten_bind_VHACD___destroy___0","Pe","_emscripten_bind_Vec3Long_Vec3Long_3","Qe","_emscripten_bind_Vec3Long_X_0","Re","_emscripten_bind_Vec3Long_Y_0","Se","_emscripten_bind_Vec3Long_Z_0","Te","_emscripten_bind_Vec3Long___destroy___0","Ue","_emscripten_bind_Vec3Real_Vec3Real_3","Ve","_emscripten_bind_Vec3Real_X_0","We","_emscripten_bind_Vec3Real_Y_0","Xe","_emscripten_bind_Vec3Real_Z_0","Ye","_emscripten_bind_Vec3Real___destroy___0","Ze","_emscripten_bind_VoidPtr___destroy___0","$e","_emscripten_bind_btActionInterface___destroy___0","af","_emscripten_bind_btActionInterface_updateAction_2","bf","_emscripten_bind_btAxisSweep3___destroy___0","cf","_emscripten_bind_btAxisSweep3_btAxisSweep3_2","df","_emscripten_bind_btAxisSweep3_btAxisSweep3_3","ef","_emscripten_bind_btAxisSweep3_btAxisSweep3_4","_c","ff","_emscripten_bind_btAxisSweep3_btAxisSweep3_5","gf","_emscripten_bind_btBoxShape___destroy___0","hf","_emscripten_bind_btBoxShape_btBoxShape_1","jf","_emscripten_bind_btBoxShape_calculateLocalInertia_2","kf","_emscripten_bind_btBoxShape_getLocalScaling_0","lf","_emscripten_bind_btBoxShape_getMargin_0","mf","_emscripten_bind_btBoxShape_setLocalScaling_1","nf","_emscripten_bind_btBoxShape_setMargin_1","of","_emscripten_bind_btBroadphaseInterface___destroy___0","pf","_emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0","qf","_emscripten_bind_btBroadphaseProxy___destroy___0","rf","_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0","sf","_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0","tf","_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1","uf","_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1","vf","_emscripten_bind_btBvhTriangleMeshShape___destroy___0","wf","_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2","xf","_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3","yf","_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2","zf","_emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0","Af","_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1","Bf","_emscripten_bind_btCapsuleShapeX___destroy___0","Cf","_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2","Df","_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2","Ef","_emscripten_bind_btCapsuleShapeX_getHalfHeight_0","Ff","_emscripten_bind_btCapsuleShapeX_getLocalScaling_0","Gf","_emscripten_bind_btCapsuleShapeX_getMargin_0","Hf","_emscripten_bind_btCapsuleShapeX_getRadius_0","If","_emscripten_bind_btCapsuleShapeX_getUpAxis_0","Jf","_emscripten_bind_btCapsuleShapeX_setLocalScaling_1","Kf","_emscripten_bind_btCapsuleShapeX_setMargin_1","Lf","_emscripten_bind_btCapsuleShapeZ___destroy___0","Mf","_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2","Nf","_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2","Of","_emscripten_bind_btCapsuleShapeZ_getHalfHeight_0","Pf","_emscripten_bind_btCapsuleShapeZ_getLocalScaling_0","Qf","_emscripten_bind_btCapsuleShapeZ_getMargin_0","Rf","_emscripten_bind_btCapsuleShapeZ_getRadius_0","Sf","_emscripten_bind_btCapsuleShapeZ_getUpAxis_0","Tf","_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1","Uf","_emscripten_bind_btCapsuleShapeZ_setMargin_1","Vf","_emscripten_bind_btCapsuleShape___destroy___0","Wf","_emscripten_bind_btCapsuleShape_btCapsuleShape_2","Xf","_emscripten_bind_btCapsuleShape_calculateLocalInertia_2","Yf","_emscripten_bind_btCapsuleShape_getHalfHeight_0","Zf","_emscripten_bind_btCapsuleShape_getLocalScaling_0","$f","_emscripten_bind_btCapsuleShape_getMargin_0","ag","_emscripten_bind_btCapsuleShape_getRadius_0","bg","_emscripten_bind_btCapsuleShape_getUpAxis_0","cg","_emscripten_bind_btCapsuleShape_setLocalScaling_1","dg","_emscripten_bind_btCapsuleShape_setMargin_1","eg","_emscripten_bind_btCollisionConfiguration___destroy___0","fg","_emscripten_bind_btCollisionDispatcher___destroy___0","gg","_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1","_d","hg","_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1","ig","_emscripten_bind_btCollisionDispatcher_getNumManifolds_0","jg","_emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0","kg","_emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0","lg","_emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0","mg","_emscripten_bind_btCollisionObject___destroy___0","ng","_emscripten_bind_btCollisionObject_activate_0","og","_emscripten_bind_btCollisionObject_activate_1","pg","_emscripten_bind_btCollisionObject_forceActivationState_1","qg","_emscripten_bind_btCollisionObject_getBroadphaseHandle_0","rg","_emscripten_bind_btCollisionObject_getCollisionFlags_0","sg","_emscripten_bind_btCollisionObject_getCollisionShape_0","tg","_emscripten_bind_btCollisionObject_getFriction_0","ug","_emscripten_bind_btCollisionObject_getRestitution_0","vg","_emscripten_bind_btCollisionObject_getRollingFriction_0","wg","_emscripten_bind_btCollisionObject_getUserIndex_0","xg","_emscripten_bind_btCollisionObject_getUserPointer_0","yg","_emscripten_bind_btCollisionObject_getWorldTransform_0","zg","_emscripten_bind_btCollisionObject_isActive_0","Ag","_emscripten_bind_btCollisionObject_isKinematicObject_0","Bg","_emscripten_bind_btCollisionObject_isStaticObject_0","Cg","_emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0","Dg","_emscripten_bind_btCollisionObject_setActivationState_1","Eg","_emscripten_bind_btCollisionObject_setAnisotropicFriction_2","Fg","_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1","Gg","_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1","Hg","_emscripten_bind_btCollisionObject_setCollisionFlags_1","Ig","_emscripten_bind_btCollisionObject_setCollisionShape_1","Jg","_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1","Kg","_emscripten_bind_btCollisionObject_setFriction_1","Lg","_emscripten_bind_btCollisionObject_setRestitution_1","Mg","_emscripten_bind_btCollisionObject_setRollingFriction_1","Ng","_emscripten_bind_btCollisionObject_setUserIndex_1","Og","_emscripten_bind_btCollisionObject_setUserPointer_1","Pg","_emscripten_bind_btCollisionObject_setWorldTransform_1","Qg","_emscripten_bind_btCollisionShape___destroy___0","Rg","_emscripten_bind_btCollisionShape_calculateLocalInertia_2","Sg","_emscripten_bind_btCollisionShape_getLocalScaling_0","Tg","_emscripten_bind_btCollisionShape_getMargin_0","Ug","_emscripten_bind_btCollisionShape_setLocalScaling_1","Vg","_emscripten_bind_btCollisionShape_setMargin_1","Wg","_emscripten_bind_btCollisionWorld___destroy___0","Xg","_emscripten_bind_btCollisionWorld_addCollisionObject_1","Yg","_emscripten_bind_btCollisionWorld_addCollisionObject_2","Zg","_emscripten_bind_btCollisionWorld_addCollisionObject_3","$g","_emscripten_bind_btCollisionWorld_contactPairTest_3","ah","_emscripten_bind_btCollisionWorld_contactTest_2","bh","_emscripten_bind_btCollisionWorld_convexSweepTest_5","ch","_emscripten_bind_btCollisionWorld_debugDrawObject_3","dh","_emscripten_bind_btCollisionWorld_debugDrawWorld_0","eh","_emscripten_bind_btCollisionWorld_getBroadphase_0","fh","_emscripten_bind_btCollisionWorld_getDebugDrawer_0","gh","_emscripten_bind_btCollisionWorld_getDispatchInfo_0","hh","_emscripten_bind_btCollisionWorld_getDispatcher_0","_e","ih","_emscripten_bind_btCollisionWorld_getPairCache_0","jh","_emscripten_bind_btCollisionWorld_rayTest_3","kh","_emscripten_bind_btCollisionWorld_removeCollisionObject_1","lh","_emscripten_bind_btCollisionWorld_setDebugDrawer_1","mh","_emscripten_bind_btCollisionWorld_setForceUpdateAllAabbs_1","nh","_emscripten_bind_btCollisionWorld_updateSingleAabb_1","oh","_emscripten_bind_btCompoundShape___destroy___0","ph","_emscripten_bind_btCompoundShape_addChildShape_2","qh","_emscripten_bind_btCompoundShape_btCompoundShape_0","rh","_emscripten_bind_btCompoundShape_btCompoundShape_1","sh","_emscripten_bind_btCompoundShape_calculateLocalInertia_2","th","_emscripten_bind_btCompoundShape_getChildShape_1","uh","_emscripten_bind_btCompoundShape_getLocalScaling_0","vh","_emscripten_bind_btCompoundShape_getMargin_0","wh","_emscripten_bind_btCompoundShape_getNumChildShapes_0","xh","_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1","yh","_emscripten_bind_btCompoundShape_removeChildShape_1","zh","_emscripten_bind_btCompoundShape_setLocalScaling_1","Ah","_emscripten_bind_btCompoundShape_setMargin_1","Bh","_emscripten_bind_btCompoundShape_updateChildTransform_2","Ch","_emscripten_bind_btCompoundShape_updateChildTransform_3","Dh","_emscripten_bind_btConcaveShape___destroy___0","Eh","_emscripten_bind_btConcaveShape_calculateLocalInertia_2","Fh","_emscripten_bind_btConcaveShape_getLocalScaling_0","Gh","_emscripten_bind_btConcaveShape_setLocalScaling_1","Hh","_emscripten_bind_btConeShapeX___destroy___0","Ih","_emscripten_bind_btConeShapeX_btConeShapeX_2","Jh","_emscripten_bind_btConeShapeX_calculateLocalInertia_2","Kh","_emscripten_bind_btConeShapeX_getLocalScaling_0","Lh","_emscripten_bind_btConeShapeX_setLocalScaling_1","Mh","_emscripten_bind_btConeShapeZ___destroy___0","Nh","_emscripten_bind_btConeShapeZ_btConeShapeZ_2","Oh","_emscripten_bind_btConeShapeZ_calculateLocalInertia_2","Ph","_emscripten_bind_btConeShapeZ_getLocalScaling_0","Qh","_emscripten_bind_btConeShapeZ_setLocalScaling_1","Rh","_emscripten_bind_btConeShape___destroy___0","Sh","_emscripten_bind_btConeShape_btConeShape_2","Th","_emscripten_bind_btConeShape_calculateLocalInertia_2","Uh","_emscripten_bind_btConeShape_getLocalScaling_0","Vh","_emscripten_bind_btConeShape_setLocalScaling_1","Wh","_emscripten_bind_btConeTwistConstraint___destroy___0","Xh","_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2","Yh","_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4","Zh","_emscripten_bind_btConeTwistConstraint_enableFeedback_1","$h","_emscripten_bind_btConeTwistConstraint_enableMotor_1","ai","_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0","bi","_emscripten_bind_btConeTwistConstraint_getParam_2","ci","_emscripten_bind_btConeTwistConstraint_setAngularOnly_1","di","_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1","ei","_emscripten_bind_btConeTwistConstraint_setDamping_1","fi","_emscripten_bind_btConeTwistConstraint_setLimit_2","gi","_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1","hi","_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1","_f","ii","_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1","ji","_emscripten_bind_btConeTwistConstraint_setMotorTarget_1","ki","_emscripten_bind_btConeTwistConstraint_setParam_3","li","_emscripten_bind_btConstCollisionObjectArray___destroy___0","mi","_emscripten_bind_btConstCollisionObjectArray_at_1","ni","_emscripten_bind_btConstCollisionObjectArray_size_0","oi","_emscripten_bind_btConstraintSetting___destroy___0","pi","_emscripten_bind_btConstraintSetting_btConstraintSetting_0","qi","_emscripten_bind_btConstraintSetting_get_m_damping_0","ri","_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0","si","_emscripten_bind_btConstraintSetting_get_m_tau_0","ti","_emscripten_bind_btConstraintSetting_set_m_damping_1","ui","_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1","vi","_emscripten_bind_btConstraintSetting_set_m_tau_1","wi","_emscripten_bind_btConstraintSolver___destroy___0","xi","_emscripten_bind_btContactSolverInfo___destroy___0","yi","_emscripten_bind_btContactSolverInfo_get_m_numIterations_0","zi","_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0","Ai","_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0","Bi","_emscripten_bind_btContactSolverInfo_set_m_numIterations_1","Ci","_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1","Di","_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1","Ei","_emscripten_bind_btConvexHullShape___destroy___0","Fi","_emscripten_bind_btConvexHullShape_addPoint_1","Gi","_emscripten_bind_btConvexHullShape_addPoint_2","Hi","_emscripten_bind_btConvexHullShape_btConvexHullShape_0","Ii","_emscripten_bind_btConvexHullShape_btConvexHullShape_1","Ji","_emscripten_bind_btConvexHullShape_btConvexHullShape_2","Ki","_emscripten_bind_btConvexHullShape_calculateLocalInertia_2","Li","_emscripten_bind_btConvexHullShape_getConvexPolyhedron_0","Mi","_emscripten_bind_btConvexHullShape_getLocalScaling_0","Ni","_emscripten_bind_btConvexHullShape_getMargin_0","Oi","_emscripten_bind_btConvexHullShape_getNumVertices_0","Pi","_emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1","Qi","_emscripten_bind_btConvexHullShape_recalcLocalAabb_0","Ri","_emscripten_bind_btConvexHullShape_setLocalScaling_1","Si","_emscripten_bind_btConvexHullShape_setMargin_1","Ti","_emscripten_bind_btConvexPolyhedron___destroy___0","Ui","_emscripten_bind_btConvexPolyhedron_get_m_faces_0","Vi","_emscripten_bind_btConvexPolyhedron_get_m_vertices_0","Wi","_emscripten_bind_btConvexPolyhedron_set_m_faces_1","Xi","_emscripten_bind_btConvexPolyhedron_set_m_vertices_1","Yi","_emscripten_bind_btConvexShape___destroy___0","Zi","_emscripten_bind_btConvexShape_calculateLocalInertia_2","$i","_emscripten_bind_btConvexShape_getLocalScaling_0","aj","_emscripten_bind_btConvexShape_getMargin_0","bj","_emscripten_bind_btConvexShape_setLocalScaling_1","cj","_emscripten_bind_btConvexShape_setMargin_1","dj","_emscripten_bind_btConvexTriangleMeshShape___destroy___0","ej","_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1","fj","_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2","gj","_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2","hj","_emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0","ij","_emscripten_bind_btConvexTriangleMeshShape_getMargin_0","_g","jj","_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1","kj","_emscripten_bind_btConvexTriangleMeshShape_setMargin_1","lj","_emscripten_bind_btCylinderShapeX___destroy___0","mj","_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1","nj","_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2","oj","_emscripten_bind_btCylinderShapeX_getLocalScaling_0","pj","_emscripten_bind_btCylinderShapeX_getMargin_0","qj","_emscripten_bind_btCylinderShapeX_setLocalScaling_1","rj","_emscripten_bind_btCylinderShapeX_setMargin_1","sj","_emscripten_bind_btCylinderShapeZ___destroy___0","tj","_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1","uj","_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2","vj","_emscripten_bind_btCylinderShapeZ_getLocalScaling_0","wj","_emscripten_bind_btCylinderShapeZ_getMargin_0","xj","_emscripten_bind_btCylinderShapeZ_setLocalScaling_1","yj","_emscripten_bind_btCylinderShapeZ_setMargin_1","zj","_emscripten_bind_btCylinderShape___destroy___0","Aj","_emscripten_bind_btCylinderShape_btCylinderShape_1","Bj","_emscripten_bind_btCylinderShape_calculateLocalInertia_2","Cj","_emscripten_bind_btCylinderShape_getLocalScaling_0","Dj","_emscripten_bind_btCylinderShape_getMargin_0","Ej","_emscripten_bind_btCylinderShape_setLocalScaling_1","Fj","_emscripten_bind_btCylinderShape_setMargin_1","Gj","_emscripten_bind_btDbvtBroadphase___destroy___0","Hj","_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0","Ij","_emscripten_bind_btDbvtBroadphase_getOverlappingPairCache_0","Jj","_emscripten_bind_btDefaultCollisionConfiguration___destroy___0","Kj","_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0","Lj","_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1","Mj","_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0","Nj","_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0","Oj","_emscripten_bind_btDefaultMotionState___destroy___0","Pj","_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0","Qj","_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1","Rj","_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2","Sj","_emscripten_bind_btDefaultMotionState_getWorldTransform_1","Tj","_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0","Uj","_emscripten_bind_btDefaultMotionState_setWorldTransform_1","Vj","_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1","Wj","_emscripten_bind_btDiscreteDynamicsWorld___destroy___0","Xj","_emscripten_bind_btDiscreteDynamicsWorld_addAction_1","Yj","_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1","Zj","_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2","ak","_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3","bk","_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1","ck","_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2","dk","_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1","ek","_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3","fk","_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4","gk","_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3","hk","_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2","ik","_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5","jk","_emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3","kk","_emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0","_h","lk","_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0","mk","_emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0","nk","_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0","_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0","pk","_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0","qk","_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0","rk","_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0","sk","_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3","tk","_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1","uk","_emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1","vk","_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1","wk","_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1","xk","_emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1","yk","_emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1","zk","_emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1","Ak","_emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1","Bk","_emscripten_bind_btDiscreteDynamicsWorld_setForceUpdateAllAabbs_1","Ck","_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1","Dk","_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1","Ek","_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2","Fk","_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3","Gk","_emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1","Hk","_emscripten_bind_btDispatcherInfo___destroy___0","Ik","_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0","Jk","_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0","Kk","_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0","Lk","_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0","Mk","_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0","Nk","_emscripten_bind_btDispatcherInfo_get_m_stepCount_0","Ok","_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0","Pk","_emscripten_bind_btDispatcherInfo_get_m_timeStep_0","Qk","_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0","Rk","_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0","Sk","_emscripten_bind_btDispatcherInfo_get_m_useEpa_0","Tk","_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1","Uk","_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1","Vk","_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1","Wk","_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1","Xk","_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1","Yk","_emscripten_bind_btDispatcherInfo_set_m_stepCount_1","Zk","_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1","$k","_emscripten_bind_btDispatcherInfo_set_m_timeStep_1","al","_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1","bl","_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1","cl","_emscripten_bind_btDispatcherInfo_set_m_useEpa_1","dl","_emscripten_bind_btDispatcher___destroy___0","el","_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1","fl","_emscripten_bind_btDispatcher_getNumManifolds_0","gl","_emscripten_bind_btDynamicsWorld___destroy___0","hl","_emscripten_bind_btDynamicsWorld_addAction_1","il","_emscripten_bind_btDynamicsWorld_addCollisionObject_1","jl","_emscripten_bind_btDynamicsWorld_addCollisionObject_2","kl","_emscripten_bind_btDynamicsWorld_addCollisionObject_3","ll","_emscripten_bind_btDynamicsWorld_contactPairTest_3","_i","ml","_emscripten_bind_btDynamicsWorld_contactTest_2","nl","_emscripten_bind_btDynamicsWorld_convexSweepTest_5","ol","_emscripten_bind_btDynamicsWorld_debugDrawObject_3","pl","_emscripten_bind_btDynamicsWorld_debugDrawWorld_0","ql","_emscripten_bind_btDynamicsWorld_getBroadphase_0","rl","_emscripten_bind_btDynamicsWorld_getDebugDrawer_0","sl","_emscripten_bind_btDynamicsWorld_getDispatchInfo_0","tl","_emscripten_bind_btDynamicsWorld_getDispatcher_0","ul","_emscripten_bind_btDynamicsWorld_getPairCache_0","vl","_emscripten_bind_btDynamicsWorld_getSolverInfo_0","wl","_emscripten_bind_btDynamicsWorld_rayTest_3","xl","_emscripten_bind_btDynamicsWorld_removeAction_1","yl","_emscripten_bind_btDynamicsWorld_removeCollisionObject_1","zl","_emscripten_bind_btDynamicsWorld_setDebugDrawer_1","Al","_emscripten_bind_btDynamicsWorld_setForceUpdateAllAabbs_1","Bl","_emscripten_bind_btDynamicsWorld_updateSingleAabb_1","Cl","_emscripten_bind_btEmptyShape___destroy___0","Dl","_emscripten_bind_btEmptyShape_btEmptyShape_0","El","_emscripten_bind_btEmptyShape_calculateLocalInertia_2","Fl","_emscripten_bind_btEmptyShape_getLocalScaling_0","Gl","_emscripten_bind_btEmptyShape_setLocalScaling_1","Hl","_emscripten_bind_btFaceArray___destroy___0","Il","_emscripten_bind_btFaceArray_at_1","Jl","_emscripten_bind_btFaceArray_size_0","Kl","_emscripten_bind_btFace___destroy___0","Ll","_emscripten_bind_btFace_get_m_indices_0","Ml","_emscripten_bind_btFace_get_m_plane_1","Nl","_emscripten_bind_btFace_set_m_indices_1","Ol","_emscripten_bind_btFace_set_m_plane_2","Pl","_emscripten_bind_btFixedConstraint___destroy___0","Ql","_emscripten_bind_btFixedConstraint_btFixedConstraint_4","Rl","_emscripten_bind_btFixedConstraint_enableFeedback_1","Sl","_emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0","Tl","_emscripten_bind_btFixedConstraint_getParam_2","Ul","_emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1","Vl","_emscripten_bind_btFixedConstraint_setParam_3","Wl","_emscripten_bind_btGeneric6DofConstraint___destroy___0","Xl","_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3","Yl","_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5","Zl","_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1","$l","_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0","am","_emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0","bm","_emscripten_bind_btGeneric6DofConstraint_getParam_2","cm","_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1","dm","_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1","em","_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1","fm","_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1","gm","_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1","hm","_emscripten_bind_btGeneric6DofConstraint_setParam_3","im","_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0","jm","_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3","km","_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5","lm","_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1","mm","_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2","_j","nm","_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0","$j","om","_emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0","pm","_emscripten_bind_btGeneric6DofSpringConstraint_getParam_2","qm","_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1","rm","_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1","sm","_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1","tm","_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2","um","_emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0","wm","_emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1","xm","_emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2","ym","_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1","zm","_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1","Am","_emscripten_bind_btGeneric6DofSpringConstraint_setParam_3","Bm","_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2","Cm","_emscripten_bind_btGhostObject___destroy___0","Dm","_emscripten_bind_btGhostObject_activate_0","Em","_emscripten_bind_btGhostObject_activate_1","Fm","_emscripten_bind_btGhostObject_btGhostObject_0","Gm","_emscripten_bind_btGhostObject_forceActivationState_1","Hm","_emscripten_bind_btGhostObject_getBroadphaseHandle_0","Im","_emscripten_bind_btGhostObject_getCollisionFlags_0","Jm","_emscripten_bind_btGhostObject_getCollisionShape_0","Km","_emscripten_bind_btGhostObject_getFriction_0","Lm","_emscripten_bind_btGhostObject_getNumOverlappingObjects_0","Mm","_emscripten_bind_btGhostObject_getOverlappingObject_1","Nm","_emscripten_bind_btGhostObject_getRestitution_0","Om","_emscripten_bind_btGhostObject_getRollingFriction_0","Pm","_emscripten_bind_btGhostObject_getUserIndex_0","Qm","_emscripten_bind_btGhostObject_getUserPointer_0","Rm","_emscripten_bind_btGhostObject_getWorldTransform_0","Sm","_emscripten_bind_btGhostObject_isActive_0","Tm","_emscripten_bind_btGhostObject_isKinematicObject_0","Um","_emscripten_bind_btGhostObject_isStaticObject_0","Vm","_emscripten_bind_btGhostObject_isStaticOrKinematicObject_0","Wm","_emscripten_bind_btGhostObject_setActivationState_1","Xm","_emscripten_bind_btGhostObject_setAnisotropicFriction_2","Ym","_emscripten_bind_btGhostObject_setCcdMotionThreshold_1","Zm","_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1","$m","_emscripten_bind_btGhostObject_setCollisionFlags_1","an","_emscripten_bind_btGhostObject_setCollisionShape_1","bn","_emscripten_bind_btGhostObject_setContactProcessingThreshold_1","cn","_emscripten_bind_btGhostObject_setFriction_1","dn","_emscripten_bind_btGhostObject_setRestitution_1","en","_emscripten_bind_btGhostObject_setRollingFriction_1","fn","_emscripten_bind_btGhostObject_setUserIndex_1","gn","_emscripten_bind_btGhostObject_setUserPointer_1","hn","_emscripten_bind_btGhostObject_setWorldTransform_1","jn","_emscripten_bind_btGhostPairCallback___destroy___0","kn","_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0","ln","_emscripten_bind_btHeightfieldTerrainShape___destroy___0","mn","_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9","nn","_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2","_emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0","pn","_emscripten_bind_btHeightfieldTerrainShape_getMargin_0","_k","qn","_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1","rn","_emscripten_bind_btHeightfieldTerrainShape_setMargin_1","sn","_emscripten_bind_btHingeConstraint___destroy___0","tn","_emscripten_bind_btHingeConstraint_btHingeConstraint_2","un","_emscripten_bind_btHingeConstraint_btHingeConstraint_3","vn","_emscripten_bind_btHingeConstraint_btHingeConstraint_4","wn","_emscripten_bind_btHingeConstraint_btHingeConstraint_5","xn","_emscripten_bind_btHingeConstraint_btHingeConstraint_6","yn","_emscripten_bind_btHingeConstraint_btHingeConstraint_7","zn","_emscripten_bind_btHingeConstraint_enableAngularMotor_3","An","_emscripten_bind_btHingeConstraint_enableFeedback_1","Bn","_emscripten_bind_btHingeConstraint_enableMotor_1","Cn","_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0","Dn","_emscripten_bind_btHingeConstraint_getParam_2","En","_emscripten_bind_btHingeConstraint_setAngularOnly_1","Fn","_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1","Gn","_emscripten_bind_btHingeConstraint_setLimit_4","Hn","_emscripten_bind_btHingeConstraint_setLimit_5","In","_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1","Jn","_emscripten_bind_btHingeConstraint_setMotorTarget_2","Kn","_emscripten_bind_btHingeConstraint_setParam_3","Ln","_emscripten_bind_btIDebugDraw___destroy___0","Mn","_emscripten_bind_btIDebugDraw_draw3dText_2","Nn","_emscripten_bind_btIDebugDraw_drawContactPoint_5","On","_emscripten_bind_btIDebugDraw_drawLine_3","Pn","_emscripten_bind_btIDebugDraw_getDebugMode_0","Qn","_emscripten_bind_btIDebugDraw_reportErrorWarning_1","Rn","_emscripten_bind_btIDebugDraw_setDebugMode_1","Sn","_emscripten_bind_btIndexedMeshArray___destroy___0","Tn","_emscripten_bind_btIndexedMeshArray_at_1","Un","_emscripten_bind_btIndexedMeshArray_size_0","Vn","_emscripten_bind_btIndexedMesh___destroy___0","Wn","_emscripten_bind_btIndexedMesh_get_m_numTriangles_0","Xn","_emscripten_bind_btIndexedMesh_set_m_numTriangles_1","Yn","_emscripten_bind_btIntArray___destroy___0","Zn","_emscripten_bind_btIntArray_at_1","$n","_emscripten_bind_btIntArray_size_0","ao","_emscripten_bind_btKinematicCharacterController___destroy___0","bo","_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3","co","_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4","eo","_emscripten_bind_btKinematicCharacterController_canJump_0","fo","_emscripten_bind_btKinematicCharacterController_getGhostObject_0","go","_emscripten_bind_btKinematicCharacterController_getGravity_0","ho","_emscripten_bind_btKinematicCharacterController_getMaxSlope_0","io","_emscripten_bind_btKinematicCharacterController_jump_0","jo","_emscripten_bind_btKinematicCharacterController_onGround_0","ko","_emscripten_bind_btKinematicCharacterController_playerStep_2","lo","_emscripten_bind_btKinematicCharacterController_preStep_1","mo","_emscripten_bind_btKinematicCharacterController_setFallSpeed_1","no","_emscripten_bind_btKinematicCharacterController_setGravity_1","oo","_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1","po","_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1","qo","_emscripten_bind_btKinematicCharacterController_setMaxSlope_1","ro","_emscripten_bind_btKinematicCharacterController_setUpAxis_1","_l","so","_emscripten_bind_btKinematicCharacterController_setUpInterpolate_1","to","_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1","uo","_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2","vo","_emscripten_bind_btKinematicCharacterController_setWalkDirection_1","wo","_emscripten_bind_btKinematicCharacterController_updateAction_2","xo","_emscripten_bind_btKinematicCharacterController_warp_1","yo","_emscripten_bind_btManifoldPoint___destroy___0","zo","_emscripten_bind_btManifoldPoint_getAppliedImpulse_0","Ao","_emscripten_bind_btManifoldPoint_getDistance_0","Bo","_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0","Co","_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0","Do","_emscripten_bind_btManifoldPoint_get_m_localPointA_0","Eo","_emscripten_bind_btManifoldPoint_get_m_localPointB_0","Fo","_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0","Go","_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0","Ho","_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0","Io","_emscripten_bind_btManifoldPoint_get_m_userPersistentData_0","Jo","_emscripten_bind_btManifoldPoint_set_m_localPointA_1","Ko","_emscripten_bind_btManifoldPoint_set_m_localPointB_1","Lo","_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1","Mo","_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1","No","_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1","Oo","_emscripten_bind_btManifoldPoint_set_m_userPersistentData_1","vm","Po","_emscripten_bind_btMatrix3x3___destroy___0","Qo","_emscripten_bind_btMatrix3x3_getRotation_1","Ro","_emscripten_bind_btMatrix3x3_getRow_1","So","_emscripten_bind_btMatrix3x3_setEulerZYX_3","To","_emscripten_bind_btMotionState___destroy___0","Uo","_emscripten_bind_btMotionState_getWorldTransform_1","Vo","_emscripten_bind_btMotionState_setWorldTransform_1","Wo","_emscripten_bind_btMultiSphereShape___destroy___0","Xo","_emscripten_bind_btMultiSphereShape_btMultiSphereShape_3","Yo","_emscripten_bind_btMultiSphereShape_calculateLocalInertia_2","Zo","_emscripten_bind_btMultiSphereShape_getLocalScaling_0","$o","_emscripten_bind_btMultiSphereShape_setLocalScaling_1","ap","_emscripten_bind_btOverlappingPairCache___destroy___0","bp","_emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0","cp","_emscripten_bind_btOverlappingPairCache_removeOverlappingPairsContainingProxy_2","dp","_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1","ep","_emscripten_bind_btOverlappingPairCallback___destroy___0","fp","_emscripten_bind_btPairCachingGhostObject___destroy___0","gp","_emscripten_bind_btPairCachingGhostObject_activate_0","hp","_emscripten_bind_btPairCachingGhostObject_activate_1","ip","_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0","jp","_emscripten_bind_btPairCachingGhostObject_forceActivationState_1","kp","_emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0","lp","_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0","mp","_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0","np","_emscripten_bind_btPairCachingGhostObject_getFriction_0","op","_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0","pp","_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1","qp","_emscripten_bind_btPairCachingGhostObject_getRestitution_0","rp","_emscripten_bind_btPairCachingGhostObject_getRollingFriction_0","sp","_emscripten_bind_btPairCachingGhostObject_getUserIndex_0","_m","tp","_emscripten_bind_btPairCachingGhostObject_getUserPointer_0","up","_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0","vp","_emscripten_bind_btPairCachingGhostObject_isActive_0","wp","_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0","xp","_emscripten_bind_btPairCachingGhostObject_isStaticObject_0","yp","_emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0","zp","_emscripten_bind_btPairCachingGhostObject_setActivationState_1","Ap","_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2","Bp","_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1","Cp","_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1","Dp","_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1","Ep","_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1","Fp","_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1","Gp","_emscripten_bind_btPairCachingGhostObject_setFriction_1","Hp","_emscripten_bind_btPairCachingGhostObject_setRestitution_1","Ip","_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1","Jp","_emscripten_bind_btPairCachingGhostObject_setUserIndex_1","Kp","_emscripten_bind_btPairCachingGhostObject_setUserPointer_1","Lp","_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1","Mp","_emscripten_bind_btPersistentManifold___destroy___0","Np","_emscripten_bind_btPersistentManifold_btPersistentManifold_0","Op","_emscripten_bind_btPersistentManifold_getBody0_0","Pp","_emscripten_bind_btPersistentManifold_getBody1_0","Qp","_emscripten_bind_btPersistentManifold_getContactPoint_1","Rp","_emscripten_bind_btPersistentManifold_getNumContacts_0","Sp","_emscripten_bind_btPoint2PointConstraint___destroy___0","Tp","_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2","Up","_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4","Vp","_emscripten_bind_btPoint2PointConstraint_enableFeedback_1","Wp","_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0","Xp","_emscripten_bind_btPoint2PointConstraint_getParam_2","Yp","_emscripten_bind_btPoint2PointConstraint_getPivotInA_0","Zp","_emscripten_bind_btPoint2PointConstraint_getPivotInB_0","$p","_emscripten_bind_btPoint2PointConstraint_get_m_setting_0","aq","_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1","bq","_emscripten_bind_btPoint2PointConstraint_setParam_3","cq","_emscripten_bind_btPoint2PointConstraint_setPivotA_1","dq","_emscripten_bind_btPoint2PointConstraint_setPivotB_1","eq","_emscripten_bind_btPoint2PointConstraint_set_m_setting_1","fq","_emscripten_bind_btQuadWord___destroy___0","gq","_emscripten_bind_btQuadWord_setW_1","hq","_emscripten_bind_btQuadWord_setX_1","iq","_emscripten_bind_btQuadWord_setY_1","jq","_emscripten_bind_btQuadWord_setZ_1","kq","_emscripten_bind_btQuadWord_w_0","lq","_emscripten_bind_btQuadWord_x_0","mq","_emscripten_bind_btQuadWord_y_0","nq","_emscripten_bind_btQuadWord_z_0","oq","_emscripten_bind_btQuaternion___destroy___0","pq","_emscripten_bind_btQuaternion_angleShortestPath_1","qq","_emscripten_bind_btQuaternion_angle_1","rq","_emscripten_bind_btQuaternion_btQuaternion_4","sq","_emscripten_bind_btQuaternion_dot_1","_n","tq","_emscripten_bind_btQuaternion_getAngleShortestPath_0","uq","_emscripten_bind_btQuaternion_getAngle_0","vq","_emscripten_bind_btQuaternion_getAxis_0","wq","_emscripten_bind_btQuaternion_inverse_0","xq","_emscripten_bind_btQuaternion_length2_0","yq","_emscripten_bind_btQuaternion_length_0","zq","_emscripten_bind_btQuaternion_normalize_0","Aq","_emscripten_bind_btQuaternion_normalized_0","Bq","_emscripten_bind_btQuaternion_op_add_1","Cq","_emscripten_bind_btQuaternion_op_div_1","Dq","_emscripten_bind_btQuaternion_op_mul_1","Eq","_emscripten_bind_btQuaternion_op_mulq_1","Fq","_emscripten_bind_btQuaternion_op_sub_1","Gq","_emscripten_bind_btQuaternion_setEulerZYX_3","Hq","_emscripten_bind_btQuaternion_setRotation_2","Iq","_emscripten_bind_btQuaternion_setValue_4","Jq","_emscripten_bind_btQuaternion_setW_1","Kq","_emscripten_bind_btQuaternion_setX_1","Lq","_emscripten_bind_btQuaternion_setY_1","Mq","_emscripten_bind_btQuaternion_setZ_1","Nq","_emscripten_bind_btQuaternion_w_0","Oq","_emscripten_bind_btQuaternion_x_0","Pq","_emscripten_bind_btQuaternion_y_0","Qq","_emscripten_bind_btQuaternion_z_0","Rq","_emscripten_bind_btRigidBodyConstructionInfo___destroy___0","Sq","_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3","Tq","_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4","Uq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0","Vq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0","Wq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0","Xq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0","Yq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0","Zq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0","$q","_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0","ar","_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0","br","_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0","cr","_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0","dr","_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0","er","_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0","fr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1","gr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1","hr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1","ir","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1","jr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1","kr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1","lr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1","mr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1","nr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1","or","_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1","pr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1","qr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1","rr","_emscripten_bind_btRigidBody___destroy___0","sr","_emscripten_bind_btRigidBody_activate_0","_o","tr","_emscripten_bind_btRigidBody_activate_1","ur","_emscripten_bind_btRigidBody_applyCentralForce_1","vr","_emscripten_bind_btRigidBody_applyCentralImpulse_1","wr","_emscripten_bind_btRigidBody_applyCentralLocalForce_1","xr","_emscripten_bind_btRigidBody_applyForce_2","yr","_emscripten_bind_btRigidBody_applyGravity_0","zr","_emscripten_bind_btRigidBody_applyImpulse_2","Ar","_emscripten_bind_btRigidBody_applyLocalTorque_1","Br","_emscripten_bind_btRigidBody_applyTorqueImpulse_1","Cr","_emscripten_bind_btRigidBody_applyTorque_1","Dr","_emscripten_bind_btRigidBody_btRigidBody_1","Er","_emscripten_bind_btRigidBody_forceActivationState_1","Fr","_emscripten_bind_btRigidBody_getAabb_2","Gr","_emscripten_bind_btRigidBody_getAngularDamping_0","Hr","_emscripten_bind_btRigidBody_getAngularFactor_0","Ir","_emscripten_bind_btRigidBody_getAngularVelocity_0","Jr","_emscripten_bind_btRigidBody_getBroadphaseHandle_0","Kr","_emscripten_bind_btRigidBody_getBroadphaseProxy_0","Lr","_emscripten_bind_btRigidBody_getCenterOfMassTransform_0","Mr","_emscripten_bind_btRigidBody_getCollisionFlags_0","Nr","_emscripten_bind_btRigidBody_getCollisionShape_0","Or","_emscripten_bind_btRigidBody_getFlags_0","Pr","_emscripten_bind_btRigidBody_getFriction_0","Qr","_emscripten_bind_btRigidBody_getGravity_0","Rr","_emscripten_bind_btRigidBody_getLinearDamping_0","Sr","_emscripten_bind_btRigidBody_getLinearFactor_0","Tr","_emscripten_bind_btRigidBody_getLinearVelocity_0","Ur","_emscripten_bind_btRigidBody_getMotionState_0","Vr","_emscripten_bind_btRigidBody_getRestitution_0","Wr","_emscripten_bind_btRigidBody_getRollingFriction_0","Xr","_emscripten_bind_btRigidBody_getUserIndex_0","Yr","_emscripten_bind_btRigidBody_getUserPointer_0","Zr","_emscripten_bind_btRigidBody_getWorldTransform_0","$r","_emscripten_bind_btRigidBody_isActive_0","as","_emscripten_bind_btRigidBody_isKinematicObject_0","bs","_emscripten_bind_btRigidBody_isStaticObject_0","cs","_emscripten_bind_btRigidBody_isStaticOrKinematicObject_0","ds","_emscripten_bind_btRigidBody_setActivationState_1","es","_emscripten_bind_btRigidBody_setAngularFactor_1","gs","_emscripten_bind_btRigidBody_setAngularVelocity_1","hs","_emscripten_bind_btRigidBody_setAnisotropicFriction_2","is","_emscripten_bind_btRigidBody_setCcdMotionThreshold_1","js","_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1","ks","_emscripten_bind_btRigidBody_setCenterOfMassTransform_1","ls","_emscripten_bind_btRigidBody_setCollisionFlags_1","ms","_emscripten_bind_btRigidBody_setCollisionShape_1","_emscripten_bind_btRigidBody_setContactProcessingThreshold_1","ps","_emscripten_bind_btRigidBody_setDamping_2","qs","_emscripten_bind_btRigidBody_setFlags_1","rs","_emscripten_bind_btRigidBody_setFriction_1","ss","_emscripten_bind_btRigidBody_setGravity_1","ts","_emscripten_bind_btRigidBody_setLinearFactor_1","us","_emscripten_bind_btRigidBody_setLinearVelocity_1","vs","_emscripten_bind_btRigidBody_setMassProps_2","_p","xs","_emscripten_bind_btRigidBody_setMotionState_1","ys","_emscripten_bind_btRigidBody_setRestitution_1","zs","_emscripten_bind_btRigidBody_setRollingFriction_1","As","_emscripten_bind_btRigidBody_setSleepingThresholds_2","Bs","_emscripten_bind_btRigidBody_setUserIndex_1","_emscripten_bind_btRigidBody_setUserPointer_1","Ds","_emscripten_bind_btRigidBody_setWorldTransform_1","Es","_emscripten_bind_btRigidBody_upcast_1","Fs","_emscripten_bind_btRigidBody_updateInertiaTensor_0","Gs","_emscripten_bind_btScalarArray___destroy___0","Hs","_emscripten_bind_btScalarArray_at_1","Is","_emscripten_bind_btScalarArray_size_0","Js","_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0","_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0","_emscripten_bind_btShapeHull___destroy___0","Ms","_emscripten_bind_btShapeHull_btShapeHull_1","Ns","_emscripten_bind_btShapeHull_buildHull_1","Os","_emscripten_bind_btShapeHull_getVertexPointer_0","Ps","_emscripten_bind_btShapeHull_numVertices_0","Qs","_emscripten_bind_btSliderConstraint___destroy___0","Rs","_emscripten_bind_btSliderConstraint_btSliderConstraint_3","Ss","_emscripten_bind_btSliderConstraint_btSliderConstraint_5","Ts","_emscripten_bind_btSliderConstraint_enableFeedback_1","_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0","Vs","_emscripten_bind_btSliderConstraint_getParam_2","Ws","_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1","_emscripten_bind_btSliderConstraint_setLowerAngLimit_1","_emscripten_bind_btSliderConstraint_setLowerLinLimit_1","_emscripten_bind_btSliderConstraint_setParam_3","_emscripten_bind_btSliderConstraint_setUpperAngLimit_1","at","_emscripten_bind_btSliderConstraint_setUpperLinLimit_1","bt","_emscripten_bind_btSphereShape___destroy___0","ct","_emscripten_bind_btSphereShape_btSphereShape_1","_emscripten_bind_btSphereShape_calculateLocalInertia_2","et","_emscripten_bind_btSphereShape_getLocalScaling_0","ft","_emscripten_bind_btSphereShape_getMargin_0","_emscripten_bind_btSphereShape_setLocalScaling_1","ht","_emscripten_bind_btSphereShape_setMargin_1","_emscripten_bind_btStaticPlaneShape___destroy___0","jt","_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2","kt","_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2","lt","_emscripten_bind_btStaticPlaneShape_getLocalScaling_0","mt","_emscripten_bind_btStaticPlaneShape_setLocalScaling_1","nt","_emscripten_bind_btStridingMeshInterface___destroy___0","ot","_emscripten_bind_btStridingMeshInterface_setScaling_1","pt","_emscripten_bind_btTransform___destroy___0","qt","_emscripten_bind_btTransform_btTransform_0","rt","_emscripten_bind_btTransform_btTransform_2","st","_emscripten_bind_btTransform_getBasis_0","tt","_emscripten_bind_btTransform_getOrigin_0","ut","_emscripten_bind_btTransform_getRotation_0","vt","_emscripten_bind_btTransform_inverse_0","wt","_emscripten_bind_btTransform_op_mul_1","xt","_emscripten_bind_btTransform_setFromOpenGLMatrix_1","_q","yt","_emscripten_bind_btTransform_setIdentity_0","zt","_emscripten_bind_btTransform_setOrigin_1","At","_emscripten_bind_btTransform_setRotation_1","Bt","_emscripten_bind_btTriangleMeshShape___destroy___0","Ct","_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2","Dt","_emscripten_bind_btTriangleMeshShape_getLocalScaling_0","Et","_emscripten_bind_btTriangleMeshShape_setLocalScaling_1","Ft","_emscripten_bind_btTriangleMesh___destroy___0","Gt","_emscripten_bind_btTriangleMesh_addIndex_1","Ht","_emscripten_bind_btTriangleMesh_addTriangle_3","It","_emscripten_bind_btTriangleMesh_addTriangle_4","Jt","_emscripten_bind_btTriangleMesh_btTriangleMesh_0","Kt","_emscripten_bind_btTriangleMesh_btTriangleMesh_1","Lt","_emscripten_bind_btTriangleMesh_btTriangleMesh_2","Mt","_emscripten_bind_btTriangleMesh_findOrAddVertex_2","Nt","_emscripten_bind_btTriangleMesh_getIndexedMeshArray_0","Ot","_emscripten_bind_btTriangleMesh_setScaling_1","Pt","_emscripten_bind_btTypedConstraint___destroy___0","Qt","_emscripten_bind_btTypedConstraint_enableFeedback_1","Rt","_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0","St","_emscripten_bind_btTypedConstraint_getParam_2","Tt","_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1","Ut","_emscripten_bind_btTypedConstraint_setParam_3","Vt","_emscripten_bind_btVector3Array___destroy___0","Wt","_emscripten_bind_btVector3Array_at_1","Xt","_emscripten_bind_btVector3Array_size_0","Yt","_emscripten_bind_btVector3___destroy___0","Zt","_emscripten_bind_btVector3_btVector3_0","$t","_emscripten_bind_btVector3_btVector3_3","au","_emscripten_bind_btVector3_dot_1","bu","_emscripten_bind_btVector3_length2_0","cu","_emscripten_bind_btVector3_length_0","du","_emscripten_bind_btVector3_normalize_0","eu","_emscripten_bind_btVector3_op_add_1","fu","_emscripten_bind_btVector3_op_mul_1","gu","_emscripten_bind_btVector3_op_sub_1","hu","_emscripten_bind_btVector3_rotate_2","iu","_emscripten_bind_btVector3_setValue_3","ju","_emscripten_bind_btVector3_setX_1","ku","_emscripten_bind_btVector3_setY_1","lu","_emscripten_bind_btVector3_setZ_1","mu","_emscripten_bind_btVector3_x_0","nu","_emscripten_bind_btVector3_y_0","ou","_emscripten_bind_btVector3_z_0","pu","_emscripten_bind_btVector4___destroy___0","qu","_emscripten_bind_btVector4_btVector4_0","ru","_emscripten_bind_btVector4_btVector4_4","su","_emscripten_bind_btVector4_dot_1","tu","_emscripten_bind_btVector4_length2_0","uu","_emscripten_bind_btVector4_length_0","vu","_emscripten_bind_btVector4_normalize_0","wu","_emscripten_bind_btVector4_op_add_1","xu","_emscripten_bind_btVector4_op_mul_1","yu","_emscripten_bind_btVector4_op_sub_1","_r","zu","_emscripten_bind_btVector4_rotate_2","Au","_emscripten_bind_btVector4_setValue_4","_emscripten_bind_btVector4_setX_1","Cu","_emscripten_bind_btVector4_setY_1","Du","_emscripten_bind_btVector4_setZ_1","Eu","_emscripten_bind_btVector4_w_0","Fu","_emscripten_bind_btVector4_x_0","fs","Gu","_emscripten_bind_btVector4_y_0","Hu","_emscripten_bind_btVector4_z_0","Iu","_emscripten_enum_PHY_ScalarType_PHY_DOUBLE","Ju","_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88","Ku","_emscripten_enum_PHY_ScalarType_PHY_FLOAT","Lu","_emscripten_enum_PHY_ScalarType_PHY_INTEGER","Mu","_emscripten_enum_PHY_ScalarType_PHY_SHORT","Nu","_emscripten_enum_PHY_ScalarType_PHY_UCHAR","Ou","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM","os","Pu","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP","Qu","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM","Ru","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP","_free","_malloc","globalCtors","ws","stackRestore","stackSave","Uu","onRuntimeInitialized","postRun","setStatus","UTF8ToString","Tu","preInit","pop","Vu","copy","Wu","Yu","cv","dv","bv","ev","fv","gv","_emscripten_bind_btVector3_btVector3_1","_emscripten_bind_btVector3_btVector3_2","hv","iv","jv","Zu","lv","_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4","mv","nv","ov","pv","qv","rv","av","sv","tv","kv","uv","xv","yv","zv","Bv","Cv","Dv","Ev","Xu","_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3","Fv","Gv","Hv","Iv","Jv","Kv","Lv","Mv","_emscripten_bind_btVector4_btVector4_1","_emscripten_bind_btVector4_btVector4_2","_emscripten_bind_btVector4_btVector4_3","Nv","wv","Ov","Pv","$u","Av","_emscripten_bind_btTransform_btTransform_1","vv","_emscripten_bind_btSliderConstraint_btSliderConstraint_4","_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3","dw","ew","fw","gw","_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4","hw","constructor","WrapperObject","wrapPointer","castObject","NULL","destroy","__destroy__","compare","getPointer","getClass","size","BYTES_PER_ELEMENT","btCollisionShape","setLocalScaling","getLocalScaling","calculateLocalInertia","setMargin","getMargin","btCollisionObject","setAnisotropicFriction","getCollisionShape","setContactProcessingThreshold","setActivationState","forceActivationState","activate","isActive","isKinematicObject","isStaticObject","isStaticOrKinematicObject","getRestitution","getFriction","getRollingFriction","setRestitution","setFriction","setRollingFriction","getWorldTransform","getCollisionFlags","setCollisionFlags","setWorldTransform","setCollisionShape","setCcdMotionThreshold","setCcdSweptSphereRadius","getUserIndex","setUserIndex","getUserPointer","setUserPointer","getBroadphaseHandle","btTypedConstraint","enableFeedback","getBreakingImpulseThreshold","setBreakingImpulseThreshold","getParam","setParam","btCollisionWorld","getDispatcher","rayTest","getPairCache","getDispatchInfo","addCollisionObject","removeCollisionObject","getBroadphase","convexSweepTest","contactPairTest","contactTest","setForceUpdateAllAabbs","updateSingleAabb","setDebugDrawer","getDebugDrawer","debugDrawWorld","debugDrawObject","btConcaveShape","btCapsuleShape","getUpAxis","getRadius","getHalfHeight","btIDebugDraw","btDynamicsWorld","addAction","removeAction","getSolverInfo","btTriangleMeshShape","btGhostObject","getNumOverlappingObjects","getOverlappingObject","btConeShape","btActionInterface","updateAction","btVector3","length2","setX","setY","setZ","setValue","rotate","dot","op_mul","op_add","op_sub","btQuadWord","setW","btCylinderShape","btConvexShape","btDispatcher","getNumManifolds","getManifoldByIndexInternal","btGeneric6DofConstraint","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","getFrameOffsetA","btStridingMeshInterface","setScaling","btMotionState","ConvexResultCallback","hasHit","get_m_collisionFilterGroup","set_m_collisionFilterGroup","get_m_collisionFilterMask","set_m_collisionFilterMask","get_m_closestHitFraction","set_m_closestHitFraction","ContactResultCallback","RayResultCallback","get_m_collisionObject","set_m_collisionObject","btMatrix3x3","setEulerZYX","getRotation","getRow","btScalarArray","btDispatcherInfo","get_m_timeStep","set_m_timeStep","get_m_stepCount","set_m_stepCount","get_m_dispatchFunc","set_m_dispatchFunc","get_m_timeOfImpact","set_m_timeOfImpact","get_m_useContinuous","set_m_useContinuous","get_m_enableSatConvex","set_m_enableSatConvex","get_m_enableSPU","set_m_enableSPU","get_m_useEpa","set_m_useEpa","get_m_allowedCcdPenetration","set_m_allowedCcdPenetration","get_m_useConvexConservativeDistanceUtil","set_m_useConvexConservativeDistanceUtil","get_m_convexConservativeDistanceThreshold","set_m_convexConservativeDistanceThreshold","btConvexTriangleMeshShape","btBroadphaseInterface","getOverlappingPairCache","btDefaultCollisionConfiguration","btRigidBodyConstructionInfo","get_m_linearDamping","set_m_linearDamping","get_m_angularDamping","set_m_angularDamping","get_m_friction","set_m_friction","get_m_rollingFriction","set_m_rollingFriction","get_m_restitution","set_m_restitution","get_m_linearSleepingThreshold","set_m_linearSleepingThreshold","get_m_angularSleepingThreshold","set_m_angularSleepingThreshold","get_m_additionalDamping","set_m_additionalDamping","get_m_additionalDampingFactor","set_m_additionalDampingFactor","get_m_additionalLinearDampingThresholdSqr","set_m_additionalLinearDampingThresholdSqr","get_m_additionalAngularDampingThresholdSqr","set_m_additionalAngularDampingThresholdSqr","get_m_additionalAngularDampingFactor","set_m_additionalAngularDampingFactor","btCollisionConfiguration","btPersistentManifold","getBody0","getBody1","getNumContacts","getContactPoint","btCompoundShape","addChildShape","removeChildShape","removeChildShapeByIndex","getNumChildShapes","getChildShape","updateChildTransform","ClosestConvexResultCallback","get_m_convexFromWorld","set_m_convexFromWorld","get_m_convexToWorld","set_m_convexToWorld","get_m_hitNormalWorld","set_m_hitNormalWorld","get_m_hitPointWorld","set_m_hitPointWorld","AllHitsRayResultCallback","get_m_collisionObjects","set_m_collisionObjects","get_m_rayFromWorld","set_m_rayFromWorld","get_m_rayToWorld","set_m_rayToWorld","get_m_hitFractions","set_m_hitFractions","Compute","GetNConvexHulls","GetConvexHull","Cancel","Clean","Release","btEmptyShape","btConstraintSetting","get_m_tau","set_m_tau","get_m_damping","set_m_damping","get_m_impulseClamp","set_m_impulseClamp","LocalShapeInfo","get_m_shapePart","set_m_shapePart","get_m_triangleIndex","set_m_triangleIndex","btRigidBody","getCenterOfMassTransform","setCenterOfMassTransform","setSleepingThresholds","getLinearDamping","getAngularDamping","setDamping","setMassProps","getLinearFactor","setLinearFactor","applyTorque","applyLocalTorque","applyForce","applyCentralForce","applyCentralLocalForce","applyTorqueImpulse","applyImpulse","applyCentralImpulse","updateInertiaTensor","getLinearVelocity","getAngularVelocity","setLinearVelocity","setAngularVelocity","getMotionState","setMotionState","getAngularFactor","setAngularFactor","upcast","getAabb","applyGravity","getGravity","setGravity","getBroadphaseProxy","getFlags","setFlags","btIndexedMeshArray","btDbvtBroadphase","btHeightfieldTerrainShape","Parameters","get_m_concavity","set_m_concavity","get_m_alpha","set_m_alpha","get_m_beta","set_m_beta","get_m_gamma","set_m_gamma","get_m_minVolumePerCH","set_m_minVolumePerCH","get_m_resolution","set_m_resolution","get_m_maxNumVerticesPerCH","set_m_maxNumVerticesPerCH","get_m_depth","set_m_depth","get_m_planeDownsampling","set_m_planeDownsampling","get_m_convexhullDownsampling","set_m_convexhullDownsampling","get_m_pca","set_m_pca","get_m_mode","set_m_mode","get_m_convexhullApproximation","set_m_convexhullApproximation","get_m_oclAcceleration","set_m_oclAcceleration","btCollisionDispatcher","btAxisSweep3","SetCompacityWeight","SetVolumeWeight","SetConcavity","SetNClusters","SetNVerticesPerCH","SetPoints","SetNPoints","SetTriangles","SetNTriangles","GetNClusters","GetNPointsCH","GetNTrianglesCH","GetCH","VoidPtr","btConeTwistConstraint","setLimit","setAngularOnly","enableMotor","setMaxMotorImpulse","setMaxMotorImpulseNormalized","setMotorTarget","setMotorTargetInConstraintSpace","btHingeConstraint","enableAngularMotor","btConeShapeZ","btConeShapeX","btTriangleMesh","addTriangle","findOrAddVertex","addIndex","getIndexedMeshArray","btConvexHullShape","addPoint","getNumVertices","initializePolyhedralFeatures","recalcLocalAabb","getConvexPolyhedron","btCollisionObjectWrapper","getCollisionObject","btShapeHull","buildHull","numVertices","getVertexPointer","btDefaultMotionState","get_m_graphicsWorldTrans","set_m_graphicsWorldTrans","btVector4","btDefaultCollisionConstructionInfo","btVector3Array","btConstraintSolver","btCylinderShapeX","btCylinderShapeZ","btConvexPolyhedron","get_m_vertices","set_m_vertices","get_m_faces","set_m_faces","btSequentialImpulseConstraintSolver","btMultiSphereShape","btIntArray","btDiscreteDynamicsWorld","addRigidBody","_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2","removeRigidBody","addConstraint","removeConstraint","stepSimulation","setContactAddedCallback","setContactProcessedCallback","setContactDestroyedCallback","btGhostPairCallback","btOverlappingPairCallback","btKinematicCharacterController","setUpAxis","setWalkDirection","setVelocityForTimeInterval","warp","preStep","playerStep","setFallSpeed","setJumpSpeed","setMaxJumpHeight","canJump","jump","setMaxSlope","getMaxSlope","getGhostObject","setUseGhostSweepTest","onGround","setUpInterpolate","btFaceArray","btStaticPlaneShape","btOverlappingPairCache","setInternalGhostPairCallback","removeOverlappingPairsContainingProxy","getNumOverlappingPairs","btIndexedMesh","get_m_numTriangles","set_m_numTriangles","Vec3Real","btFixedConstraint","btTransform","setIdentity","setOrigin","setRotation","getOrigin","getBasis","setFromOpenGLMatrix","inverse","ClosestRayResultCallback","btBvhTriangleMeshShape","Vec3Long","btConstCollisionObjectArray","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","btPairCachingGhostObject","btManifoldPoint","getPositionWorldOnA","getPositionWorldOnB","getAppliedImpulse","getDistance","get_m_localPointA","set_m_localPointA","get_m_localPointB","set_m_localPointB","get_m_positionWorldOnB","set_m_positionWorldOnB","get_m_positionWorldOnA","set_m_positionWorldOnA","get_m_normalWorldOnB","set_m_normalWorldOnB","get_m_userPersistentData","set_m_userPersistentData","btPoint2PointConstraint","setPivotA","setPivotB","getPivotInA","getPivotInB","get_m_setting","set_m_setting","btBroadphaseProxy","btBoxShape","btFace","get_m_indices","set_m_indices","get_m_plane","set_m_plane","btCapsuleShapeX","btQuaternion","normalized","getAxis","getAngle","getAngleShortestPath","angle","angleShortestPath","op_mulq","op_div","btCapsuleShapeZ","btContactSolverInfo","get_m_splitImpulse","set_m_splitImpulse","get_m_splitImpulsePenetrationThreshold","set_m_splitImpulsePenetrationThreshold","get_m_numIterations","set_m_numIterations","btGeneric6DofSpringConstraint","enableSpring","setStiffness","setEquilibriumPoint","btSphereShape","ConvexHull","get_m_points","get_m_triangles","get_m_nPoints","get_m_nTriangles","LocalConvexResult","get_m_hitCollisionObject","set_m_hitCollisionObject","get_m_localShapeInfo","set_m_localShapeInfo","get_m_hitNormalLocal","set_m_hitNormalLocal","get_m_hitPointLocal","set_m_hitPointLocal","get_m_hitFraction","set_m_hitFraction","BT_CONSTRAINT_ERP","BT_CONSTRAINT_STOP_ERP","BT_CONSTRAINT_CFM","BT_CONSTRAINT_STOP_CFM","PHY_FLOAT","PHY_DOUBLE","PHY_INTEGER","PHY_SHORT","PHY_FIXEDPOINT88","PHY_UCHAR","normalizeArray","parts","allowAboveRoot","last","splitPathRe","splitPath","filename","exec","filter","res","resolve","resolvedPath","resolvedAbsolute","path","TypeError","charAt","join","isAbsolute","trailingSlash","paths","index","relative","from","trim","arr","start","end","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","result","root","basename","ext","extname","str","Number","EPSILON","pow","isInteger","isFinite","floor","sign","Function","match","assign","target","output","source","nextKey","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipmapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipmapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","KeepStencilOp","AlwaysStencilFunc","StaticDrawUsage","EventDispatcher","addEventListener","type","listener","_listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","event","_lut","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","LN2","floorPowerOfTwo","Vector2","Quaternion","_x","_y","_z","_w","defineProperties","width","height","isVector2","setScalar","scalar","setComponent","getComponent","clone","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","cross","lengthSq","sqrt","manhattanLength","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","slerp","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","_onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","step","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","_vector","Vector3","_quaternion","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyNormalMatrix","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","denominator","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","_canvas","_vector$1","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","setFromMatrix4","applyToBufferAttribute","count","setXYZ","multiplyMatrices","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","translate","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","samples","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","isArray","dispose","transformUv","isVector4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","getW","isWebGLRenderTarget","setSize","isWebGLMultisampleRenderTarget","_v1","_m1","Matrix4","_zero","_one","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","makeRotationFromQuaternion","compose","lookAt","eye","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","position","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix","_quaternion$1","Euler","_order","DefaultOrder","Layers","mask","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","enableAll","toggle","disable","disableAll","test","layers","_object3DId","_v1$1","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","children","DefaultUp","configurable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","Scene","background","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","CustomEvent","detail","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","vector","worldToLocal","updateWorldMatrix","isCamera","isLight","remove","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","JSON","stringify","isMesh","drawMode","isInstancedMesh","instanceMatrix","isLine","isPoints","geometry","parameters","shape","material","uuids","extractFromCache","cache","values","data","recursive","parse","child","isScene","_points","_vector$2","_box","Box3","_v0","_v1$2","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","satForAxes","axes","v0","extents","p0","p1","p2","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","boundingBox","computeBoundingBox","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","distanceToPoint","getBoundingSphere","intersect","union","_box$1","Sphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","_vector$3","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","direction","ray","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","delta","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","d5","d6","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_hslA","_hslB","Color","setRGB","hue2rgb","SRGBToLinear","LinearToSRGB","Face3","color","materialIndex","vertexNormals","isColor","vertexColors","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","components","parseInt","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","NAMES","materialId","Material","blending","side","flatShading","vertexTangents","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","MeshBasicMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","morphTargets","setValues","BufferAttribute","itemSize","_array","_itemSize","_normalized","usage","updateRange","versionVAO","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","vertices","normals","colors","uvs","uvs2","groups","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","arrayMax","isMaterial","onBeforeCompile","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatNormalMap","clearcoatNormalScale","matcap","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","morphNormals","srcPlanes","dstPlanes","isMeshBasicMaterial","needsUpdate","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","group","faces","face","fromGeometry","morphTargetsPosition","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","_bufferGeometryId","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","drawRange","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","addGroup","clearGroups","setDrawRange","tangent","computeBoundingSphere","positions","lineDistances","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","lineDistancesNeedUpdate","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","isNaN","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","indices","normalizeNormals","merge","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","attributeData","hasMorphAttributes","attributeArray","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","morphInfluences","morphTargetInfluences","influence","intersection","setDrawMode","morphTargetDictionary","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","_geometryId","_m1$3","_obj$1","_offset$1","Geometry","fromBufferGeometry","scope","addFace","areaWeighted","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","uvsCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","uvs1","vertex","normalsHash","colorsHash","uvsHash","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","srcVertexNormal","destVertexNormal","BoxBufferGeometry","[object Object]","depth","widthSegments","heightSegments","depthSegments","super","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","mergeUniforms","uniforms","merged","default_vertex","default_fragment","ShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","isShaderMaterial","cloneUniformsGroups","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","renderer","scene","currentRenderTarget","getRenderTarget","setRenderTarget","render","clear","stencil","DataTexture","isWebGLRenderTargetCube","fromEquirectangularTexture","shader","tEquirect","isDataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","UniformsLib","diffuse","uvTransform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","lambert","phong","standard","dashed","totalSize","t2D","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","createBuffer","bindBuffer","bufferData","bytesPerElement","bufferSubData","updateBuffer","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","WebGLBackground","state","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","WebGLBindingStates","capabilities","maxVertexAttributes","extension","isWebGL2","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","stride","isInstancedInterleavedBuffer","maxInstancedCount","vertexAttribPointer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","_bufferGeometry","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","WebGLObjects","updateList","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","physical","transparency","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMapping","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","loopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","WebGLProgram","cacheKey","prefixVertex","prefixFragment","shadowMapTypeDefine","shadowMapType","generateShadowMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapTypeDefine","envMapModeDefine","generateEnvMapModeDefine","envMapBlendingDefine","generateEnvMapBlendingDefine","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","tangentSpaceNormalMap","generateExtensions","customDefines","chunks","generateDefines","createProgram","numMultiviewViews","isRawShaderMaterial","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","v300es","cachedUniforms","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","isWebGLMultiviewRenderTarget","numViews","gammaOutput","gammaInput","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","preexistingProgram","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","list","cameras","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","vector3","matrix42","intensity","isAmbientLight","isLightProbe","coefficients","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","has","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","depthMaterial","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","uboBindings","uboProgamMap","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglColorTexture","__webglDepthStencilTexture","__webglViewFramebuffers","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","setTextureCubeDynamic","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isMultiview","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","colorTexture","framebufferTextureMultiviewOVR","depthStencilTexture","viewFramebuffers","framebufferTextureLayer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUniformsGroups","allocatedBindingPoints","maxBindingPoints","hasUniformChanged","cachedObject","getUniformSize","boundary","storage","onUniformsGroupsDispose","isRawUniformsGroup","chunkOffset","__data","__offset","remainingSizeInChunk","__size","__cache","prepareUniformsGroup","bindingPointIndex","allocateBindingPointIndex","dynamic","bindBufferBase","updateBufferData","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","UNSIGNED_INT_24_8_WEBGL","WebGLMultiviewRenderTarget","WebGLMultiview","mat3","mat4","cameraArray","renderSize","available","DEFAULT_NUMVIEWS","maxNumViews","getCameraArray","isArrayCamera","isAvailable","getContextAttributes","antialias","MAX_VIEWS_OVR","attachCamera","isMultiviewCompatible","getDrawingBufferSize","setNumViews","resizeRenderTarget","detachCamera","srcRenderTarget","srcFramebuffers","viewWidth","viewHeight","flush","updateCameraProjectionMatricesUniform","updateCameraViewMatricesUniform","updateObjectMatricesUniforms","Group","ArrayCamera","isGroup","_geometry","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","renderWidth","renderHeight","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","referenceSpaceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraVR","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","getPixelRatio","setDrawingBufferSize","animation","triggers","grips","findGamepad","gamepads","navigator","getGamepads","gamepad","hand","updateViewportFromBounds","bounds","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setReferenceSpaceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","setFrameOfReferenceType","WebXRManager","referenceSpace","sortedInputSources","poseMatrix","THREE","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","onRequestReferenceSpace","updateInputSources","findInputSource","inputSources","handedness","updateCamera","setSession","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","transform","matrixNeedsUpdate","getCameraPose","onAnimationFrameCallback","getViewerPose","views","inputPose","getPose","targetRaySpace","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","videoTextures","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","rangeMin","rangeMax","message","initGLContext","multiview","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","programInfo","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compileAndUploadMaterials","compile","initMaterial","renderObjects","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsStateVersion","programCacheKey","programChange","numSupportedMorphTargets","numSupportedMorphNormals","needsLights","isMeshLambertMaterial","isMeshPhongMaterial","isMeshStandardMaterial","isShadowMaterial","materialNeedsLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","uvScaleMap","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","ltc_1","LTC_1","ltc_2","LTC_2","webglProgram","projectObject","isLOD","preuploadVideos","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","InterleavedBuffer","_stride","InterleavedBufferAttribute","interleavedBuffer","_data","isInterleavedBuffer","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","transformVertex","vertexPosition","mvPosition","_v1$4","_v2$2","LOD","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","addLevel","getObjectForDistance","calculateInverses","normalizeSkinWeights","skinWeight","_offsetMatrix","_identityMatrix","Skeleton","boneInverses","Bone","bone","isBone","getBoneByName","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","linecap","linejoin","getMatrixAt","raycastTimes","instanceId","setMatrixAt","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","testPoint","localThresholdSq","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge1","edge2","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","uvA","uvB","uvC","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","quOverP","TorusGeometry","arc","TorusBufferGeometry","threshold","params","localThreshold","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","three_module_area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q1","q2","Node","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","scalePt2","vec","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","__proto__","BoxGeometry","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","parseKeyframeTrack","json","trackType","typeName","toLowerCase","getTrackTypeForValueTypeName","evaluate","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","resourcePath","load","setCrossOrigin","setPath","setResourcePath","loading","FileLoader","AnimationLoader","CompressedTextureLoader","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","cached","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","Blob","parser","DOMParser","parseFromString","request","header","callbacks","withCredentials","overrideMimeType","requestHeader","setRequestHeader","setResponseType","setWithCredentials","setMimeType","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","onImageLoad","onImageError","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","SpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","isSpotLightShadow","zoomW","zoomH","scaleW","scaleH","isDirectionalLightShadow","getTexture","shading","setTextures","LoaderUtils","InstancedBufferGeometry","InstancedBufferAttribute","_meshPerAttribute","BufferGeometryLoader","typedArray","TYPED_ARRAYS","bufferAttribute","drawcalls","offsets","ObjectLoader","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","UVMapping","ImageBitmapLoader","createImageBitmap","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","familyName","FontLoader","setOptions","blob","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","hole_unassigned","s2Idx","froms","tos","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","AudioContext","webkitAudioContext","AudioLoader","SphericalHarmonics3","LightProbe","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isSphericalHarmonics3","zero","getAt","coeff","addScale","getIrradianceAt","getBasisAt","shBasis","isHemisphereLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","Clock","autoStart","oldTime","elapsedTime","running","eyeSep","_cache","xmin","xmax","eyeSepHalf","eyeSepOnProjection","ymax","getElapsedTime","getDelta","newTime","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_pausedAt","filters","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","PropertyMixer","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","_reservedRe","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","UniformsGroup","RawUniformsGroup","InstancedInterleavedBuffer","ascSort","intersectObject","isUniformsGroup","setName","uniformsSource","_uniform","PointCloud","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","_vector$6","Box2","_startP","_startEnd","Line3","ImmediateRenderObject","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_v1$5","_v2$3","_normalMatrix$1","_keys","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","_vector$7","SpotLightHelper","cone","coneLength","coneWidth","_vector$8","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","_vector$9","_color1","_color2","HemisphereLightHelper","LightProbeHelper","GAMMA_OUTPUT","GridHelper","PolarGridHelper","radials","circles","PositionalAudioHelper","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","halfConeInnerAngle","halfConeOuterAngle","_v1$6","_v2$4","_normalMatrix$2","FaceNormalsHelper","_v1$7","_v2$5","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$a","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_lineGeometry","_coneGeometry","_axis","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","setColor","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","Handlers","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","setDynamic","copyIndicesArray","setArray","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","renderReverseSided","renderSingleSided","activeMipMapLevel","standing","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","revision","DefaultBufferSize","AmmoDebugConstants","AmmoDebugDrawer","colorsArray","world","debugDrawMode","Atomics","store","debugDrawer","heap","fromX","fromY","fromZ","toX","toY","toZ","pointOnB","normalOnB","lifeTime","warningString","warnedOnce","textString","debugMode","World","worldConfig","collisionConfiguration","dispatcher","broadphase","solver","physicsWorld","object3Ds","Map","collisions","collisionKeys","epsilon","maxSubSteps","fixedTimeStep","gravity","constants_default","solverIterations","isDebugEnabled","addBody","body","object3D","removeBody","bodyptr","updateBody","numManifolds","persistentManifold","numContacts","body0ptr","body1ptr","debugIndexArray","debugMatricesArray","debugColorsArray","src_world","ACTIVATION_STATES","RIGID_BODY_FLAGS","almostEqualsVector3","almostEqualsBtVector3","Body","bodyConfig","loadedEvent","mass","worldGravity","linearDamping","angularDamping","linearSleepingThreshold","angularSleepingThreshold","angularFactor","activationState","emitCollisionEvents","disableCollision","collisionFilterGroup","collisionFilterMask","scaleAutoUpdate","_initBody","pos","quat","localScaling","prevScale","prevNumChildShapes","msTransform","motionState","localInertia","compoundShape","rbInfo","physicsBody","updateCollisionFlags","updateShapes","needsPolyhedralInitialization","updated","shapesChanged","updateMass","polyHedralFeaturesInitialized","collisionShape","broadphaseProxy","triMesh","syncToPhysics","almostEqualsQuaternion","syncFromPhysics","localTransform","removeShape","getVelocity","CONSTRAINTS","Constraint","constraintConfig","targetBody","physicsConstraint","bodyTransform","targetTransform","pivot","targetPivot","targetAxis","pivotTransform","src_constraint","three_to_ammo_TYPE","three_to_ammo_FIT","createCollisionShapes","matrices","indexes","createBoxShape","createCylinderShape","createCapsuleShape","createConeShape","createSphereShape","createHullShape","createHACDShapes","createVHACDShapes","createTriMeshShape","createHeightfieldTerrainShape","_setOptions","fit","halfExtents","_computeHalfExtents","_computeBounds","minHalfExtent","maxHalfExtent","btHalfExtents","_finishCollisionShape","_computeScale","cylinderAxis","sphereRadius","_computeRadius","btVertex","originalHull","margin","vertexCount","maxVertices","hullMaxVertices","isLastVertex","shapeHull","triCount","hacd","compacityWeight","volumeWeight","nClusters","nVerticesPerCH","concavity","pptr","tptr","hull","nPoints","nTriangles","hullPoints","hullTriangles","vhacd","planeDownsampling","convexhullDownsampling","beta","gamma","pca","maxNumVerticesPerCH","minVolumePerCH","convexhullApproximation","oclAcceleration","nHulls","bta","btb","btc","localScale","resources","heightfieldDistance","heightfieldData","upAxis","hdt","heightDataType","flipQuadEdges","heightStickLength","heightStickWidth","ptr","minHeight","POSITIVE_INFINITY","maxHeight","NEGATIVE_INFINITY","includeInvisible","cz","_iterateVertices","ammo_worker_TYPE","ammo_worker_SHAPE","ammo_worker_CONSTRAINT","bodies","constraints","ammo_worker_matrices","ammo_worker_indexes","ptrToIndex","messageQueue","stepDuration","freeIndex","freeIndexArray","ammo_worker_world","headerIntArray","headerFloatArray","objectMatricesFloatArray","objectMatricesIntArray","lastTick","usingSharedArrayBuffer","tick","addShapes","resetDynamicBody","activateBody","collidingPtr","postMessage","nextFreeIndex","IDENTITY_MATRIX","bodyUuid","shapesUuid","physicsShapes","constraintId","targetUuid","constraint","onmessage","async","wasmUrl","ammo_wasm_default","endsWith","URL","builds_ammo_wasm_default","initializeWasm","AmmoModule","sharedArrayBuffer","initSharedArrayBuffer","initTransferrables","setInterval","debugSharedArrayBuffer","debugVerticesArray","initDebug"],"mappings":"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","file":"assets/js/ammo.worker-ad7d5fea5d450412e941.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/.tek/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = {\n  GRAVITY: -9.8,\n  MAX_INTERVAL: 4 / 60,\n  ITERATIONS: 10,\n  ACTIVATION_STATE: {\n    ACTIVE_TAG: \"active\",\n    ISLAND_SLEEPING: \"islandSleeping\",\n    WANTS_DEACTIVATION: \"wantsDeactivation\",\n    DISABLE_DEACTIVATION: \"disableDeactivation\",\n    DISABLE_SIMULATION: \"disableSimulation\"\n  },\n  COLLISION_FLAG: {\n    STATIC_OBJECT: 1,\n    KINEMATIC_OBJECT: 2,\n    NO_CONTACT_RESPONSE: 4,\n    CUSTOM_MATERIAL_CALLBACK: 8, //this allows per-triangle material (friction/restitution)\n    CHARACTER_OBJECT: 16,\n    DISABLE_VISUALIZE_OBJECT: 32, //disable debug drawing\n    DISABLE_SPU_COLLISION_PROCESSING: 64 //disable parallel/SPU processing\n  },\n  TYPE: {\n    STATIC: \"static\",\n    DYNAMIC: \"dynamic\",\n    KINEMATIC: \"kinematic\"\n  },\n  SHAPE: {\n    BOX: \"box\",\n    CYLINDER: \"cylinder\",\n    SPHERE: \"sphere\",\n    CAPSULE: \"capsule\",\n    CONE: \"cone\",\n    HULL: \"hull\",\n    HACD: \"hacd\",\n    VHACD: \"vhacd\",\n    MESH: \"mesh\",\n    HEIGHTFIELD: \"heightfield\"\n  },\n  FIT: {\n    ALL: \"all\",\n    MANUAL: \"manual\"\n  },\n  CONSTRAINT: {\n    LOCK: \"lock\",\n    FIXED: \"fixed\",\n    SPRING: \"spring\",\n    SLIDER: \"slider\",\n    HINGE: \"hinge\",\n    CONE_TWIST: \"coneTwist\",\n    POINT_TO_POINT: \"pointToPoint\"\n  },\n  MESSAGE_TYPES: {\n    INIT: 0,\n    READY: 1,\n    ADD_BODY: 2,\n    BODY_READY: 3,\n    UPDATE_BODY: 4,\n    REMOVE_BODY: 5,\n    ADD_SHAPES: 6,\n    REMOVE_SHAPES: 7,\n    ADD_CONSTRAINT: 8,\n    REMOVE_CONSTRAINT: 9,\n    ENABLE_DEBUG: 10,\n    RESET_DYNAMIC_BODY: 11,\n    ACTIVATE_BODY: 12,\n    TRANSFER_DATA: 13\n  },\n  BUFFER_CONFIG: {\n    HEADER_LENGTH: 2,\n    MAX_BODIES: 10000,\n    MATRIX_OFFSET: 0,\n    LINEAR_VELOCITY_OFFSET: 16,\n    ANGULAR_VELOCITY_OFFSET: 17,\n    COLLISIONS_OFFSET: 18,\n    BODY_DATA_SIZE: 26\n  },\n  BUFFER_STATE: {\n    UNINITIALIZED: 0,\n    READY: 1,\n    CONSUMED: 2\n  }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n  // This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.\n  \nvar Ammo = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Ammo) {\n  Ammo = Ammo || {};\n\nvar b;var g;g||(g=typeof Ammo !== 'undefined' ? Ammo : {});var aa={},ca;for(ca in g)g.hasOwnProperty(ca)&&(aa[ca]=g[ca]);var da=!1,ea=!1,fa=!1,ha=!1,ia=!1;da=\"object\"===typeof window;ea=\"function\"===typeof importScripts;fa=(ha=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node)&&!da&&!ea;ia=!da&&!fa&&!ea;var ja=\"\",ka,la,ma,na;\nif(fa)ja=__dirname+\"/\",ka=function(a,c){ma||(ma=require(\"fs\"));na||(na=require(\"path\"));a=na.normalize(a);return ma.readFileSync(a,c?null:\"utf8\")},la=function(a){a=ka(a,!0);a.buffer||(a=new Uint8Array(a));assert(a.buffer);return a},1<process.argv.length&&process.argv[1].replace(/\\\\/g,\"/\"),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",oa),g.inspect=function(){return\"[Emscripten Module object]\"};else if(ia)\"undefined\"!=typeof read&&(ka=function(a){return read(a)}),\nla=function(a){if(\"function\"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,\"binary\");assert(\"object\"===typeof a);return a},\"undefined\"!==typeof print&&(\"undefined\"===typeof console&&(console={}),console.log=print,console.warn=console.error=\"undefined\"!==typeof printErr?printErr:print);else if(da||ea)ea?ja=self.location.href:document.currentScript&&(ja=document.currentScript.src),_scriptDir&&(ja=_scriptDir),ja=0!==ja.indexOf(\"blob:\")?ja.substr(0,ja.lastIndexOf(\"/\")+1):\"\",ka=function(a){var c=\nnew XMLHttpRequest;c.open(\"GET\",a,!1);c.send(null);return c.responseText},ea&&(la=function(a){var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.responseType=\"arraybuffer\";c.send(null);return new Uint8Array(c.response)});var pa=g.print||console.log.bind(console),qa=g.printErr||console.warn.bind(console);for(ca in aa)aa.hasOwnProperty(ca)&&(g[ca]=aa[ca]);aa=null;var ra={\"f64-rem\":function(a,c){return a%c},\"debugger\":function(){}},sa;g.wasmBinary&&(sa=g.wasmBinary);\"object\"!==typeof WebAssembly&&qa(\"no native wasm support detected\");\nvar ta,ua=new WebAssembly.Table({initial:1832,maximum:1832,element:\"anyfunc\"}),wa=!1;function assert(a,c){a||oa(\"Assertion failed: \"+c)}var xa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ya(a,c,d){var e=c+d;for(d=c;a[d]&&!(d>=e);)++d;if(16<d-c&&a.subarray&&xa)return xa.decode(a.subarray(c,d));for(e=\"\";c<d;){var f=a[c++];if(f&128){var n=a[c++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|n);else{var r=a[c++]&63;f=224==(f&240)?(f&15)<<12|n<<6|r:(f&7)<<18|n<<12|r<<6|a[c++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function za(a,c){return a?ya(Aa,a,c):\"\"}\nfunction Ba(a,c,d,e){if(!(0<e))return 0;var f=d;e=d+e-1;for(var n=0;n<a.length;++n){var r=a.charCodeAt(n);if(55296<=r&&57343>=r){var N=a.charCodeAt(++n);r=65536+((r&1023)<<10)|N&1023}if(127>=r){if(d>=e)break;c[d++]=r}else{if(2047>=r){if(d+1>=e)break;c[d++]=192|r>>6}else{if(65535>=r){if(d+2>=e)break;c[d++]=224|r>>12}else{if(d+3>=e)break;c[d++]=240|r>>18;c[d++]=128|r>>12&63}c[d++]=128|r>>6&63}c[d++]=128|r&63}}c[d]=0;return d-f}\nfunction Ca(a){for(var c=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++c:c=2047>=e?c+2:65535>=e?c+3:c+4}return c}\"undefined\"!==typeof TextDecoder&&new TextDecoder(\"utf-16le\");function Da(a){0<a%65536&&(a+=65536-a%65536);return a}var buffer,Ea,Aa,h,Fa,Ga;\nfunction Ha(a){buffer=a;g.HEAP8=Ea=new Int8Array(a);g.HEAP16=new Int16Array(a);g.HEAP32=h=new Int32Array(a);g.HEAPU8=Aa=new Uint8Array(a);g.HEAPU16=new Uint16Array(a);g.HEAPU32=new Uint32Array(a);g.HEAPF32=Fa=new Float32Array(a);g.HEAPF64=Ga=new Float64Array(a)}var Ja=g.TOTAL_MEMORY||67108864;if(ta=g.wasmMemory?g.wasmMemory:new WebAssembly.Memory({initial:Ja/65536}))buffer=ta.buffer;Ja=buffer.byteLength;Ha(buffer);h[11868]=5290544;\nfunction Ka(a){for(;0<a.length;){var c=a.shift();if(\"function\"==typeof c)c();else{var d=c.it;\"number\"===typeof d?void 0===c.$s?g.dynCall_v(d):g.dynCall_vi(d,c.$s):d(void 0===c.$s?null:c.$s)}}}var La=[],Ma=[],Na=[],Oa=[],Pa=!1;function Qa(){var a=g.preRun.shift();La.unshift(a)}var Ra=Math.cos,Sa=Math.sin,Ta=0,Ua=null,Va=null;g.preloadedImages={};g.preloadedAudios={};\nfunction oa(a){if(g.onAbort)g.onAbort(a);a+=\"\";pa(a);qa(a);wa=!0;throw new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");}function Wa(){var a=Xa;return String.prototype.startsWith?a.startsWith(\"data:application/octet-stream;base64,\"):0===a.indexOf(\"data:application/octet-stream;base64,\")}var Xa=\"ammo.wasm.wasm\";if(!Wa()){var Ya=Xa;Xa=g.locateFile?g.locateFile(Ya,ja):ja+Ya}\nfunction Za(){try{if(sa)return new Uint8Array(sa);if(la)return la(Xa);throw\"both async and sync fetching of the wasm failed\";}catch(a){oa(a)}}function $a(){return sa||!da&&!ea||\"function\"!==typeof fetch?new Promise(function(a){a(Za())}):fetch(Xa,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Xa+\"'\";return a.arrayBuffer()}).catch(function(){return Za()})}\ng.asm=function(){function a(a){g.asm=a.exports;Ta--;g.monitorRunDependencies&&g.monitorRunDependencies(Ta);0==Ta&&(null!==Ua&&(clearInterval(Ua),Ua=null),Va&&(a=Va,Va=null,a()))}function c(c){a(c.instance)}function d(a){return $a().then(function(a){return WebAssembly.instantiate(a,e)}).then(a,function(a){qa(\"failed to asynchronously prepare wasm: \"+a);oa(a)})}var e={env:ab,wasi_unstable:ab,global:{NaN:NaN,Infinity:Infinity},\"global.Math\":Math,asm2wasm:ra};Ta++;g.monitorRunDependencies&&g.monitorRunDependencies(Ta);\nif(g.instantiateWasm)try{return g.instantiateWasm(e,a)}catch(f){return qa(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){if(sa||\"function\"!==typeof WebAssembly.instantiateStreaming||Wa()||\"function\"!==typeof fetch)return d(c);fetch(Xa,{credentials:\"same-origin\"}).then(function(a){return WebAssembly.instantiateStreaming(a,e).then(c,function(a){qa(\"wasm streaming compile failed: \"+a);qa(\"falling back to ArrayBuffer instantiation\");d(c)})})})();return{}};\nvar bb=[function(a,c,d,e,f,n,r,N){a=g.getCache(g.ConcreteContactResultCallback)[a];if(!a.hasOwnProperty(\"addSingleResult\"))throw\"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.\";return a.addSingleResult(c,d,e,f,n,r,N)},function(a,c,d,e){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"drawLine\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::drawLine.\";a.drawLine(c,d,e)},function(a,c,d,e,f,n){a=g.getCache(g.DebugDrawer)[a];\nif(!a.hasOwnProperty(\"drawContactPoint\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::drawContactPoint.\";a.drawContactPoint(c,d,e,f,n)},function(a,c){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"reportErrorWarning\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::reportErrorWarning.\";a.reportErrorWarning(c)},function(a,c,d){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"draw3dText\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::draw3dText.\";\na.draw3dText(c,d)},function(a,c){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"setDebugMode\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::setDebugMode.\";a.setDebugMode(c)},function(a){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"getDebugMode\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::getDebugMode.\";return a.getDebugMode()}];Ma.push({it:function(){cb()}});\nfunction db(a){g.___errno_location&&(h[g.___errno_location()>>2]=a)}var eb=[null,[],[]],fb=0;function gb(){fb+=4;return h[fb-4>>2]}var hb={};function ib(){return 0}function jb(a,c,d,e){try{var f=hb.Zv(a),n=hb.Xv(f,c,d);h[e>>2]=n;return 0}catch(r){return oa(r),r.gt}}function kb(){return 0}\nfunction lb(a,c,d,e){try{for(var f=0,n=0;n<d;n++){for(var r=h[c+8*n>>2],N=h[c+(8*n+4)>>2],ba=0;ba<N;ba++){var Ia=Aa[r+ba],va=eb[a];0===Ia||10===Ia?((1===a?pa:qa)(ya(va,0)),va.length=0):va.push(Ia)}f+=N}h[e>>2]=f;return 0}catch(Jb){return oa(Jb),Jb.gt}}function mb(){oa()}function nb(){return Ea.length}var ob={};function pb(a){if(0===a)return 0;a=za(a);if(!ob.hasOwnProperty(a))return 0;pb.dt&&qb(pb.dt);a=ob[a];var c=Ca(a)+1,d=rb(c);d&&Ba(a,Ea,d,c);pb.dt=d;return pb.dt}\nfunction sb(){sb.Ls||(sb.Ls=[]);sb.Ls.push(tb());return sb.Ls.length-1}function ub(a){return 0===a%4&&(0!==a%100||0===a%400)}function vb(a,c){for(var d=0,e=0;e<=c;d+=a[e++]);return d}var wb=[31,29,31,30,31,30,31,31,30,31,30,31],xb=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction yb(a,c){for(a=new Date(a.getTime());0<c;){var d=a.getMonth(),e=(ub(a.getFullYear())?wb:xb)[d];if(c>e-a.getDate())c-=e-a.getDate()+1,a.setDate(1),11>d?a.setMonth(d+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+c);break}}return a}\nfunction zb(a,c,d,e){function f(a,c,d){for(a=\"number\"===typeof a?a.toString():a||\"\";a.length<c;)a=d[0]+a;return a}function n(a,c){return f(a,c,\"0\")}function r(a,c){function d(a){return 0>a?-1:0<a?1:0}var e;0===(e=d(a.getFullYear()-c.getFullYear()))&&0===(e=d(a.getMonth()-c.getMonth()))&&(e=d(a.getDate()-c.getDate()));return e}function N(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;case 2:return new Date(a.getFullYear(),0,3);case 3:return new Date(a.getFullYear(),\n0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}}function ba(a){a=yb(new Date(a.Cs+1900,0,1),a.Zs);var c=N(new Date(a.getFullYear()+1,0,4));return 0>=r(N(new Date(a.getFullYear(),0,4)),a)?0>=r(c,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1}var Ia=h[e+40>>2];e={Sv:h[e>>2],Rv:h[e+4>>2],Xs:h[e+8>>2],Us:h[e+12>>2],Ks:h[e+16>>2],Cs:h[e+20>>2],Ys:h[e+24>>2],Zs:h[e+28>>2],cw:h[e+32>>2],Qv:h[e+36>>2],\nTv:Ia?za(Ia):\"\"};d=za(d);Ia={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var va in Ia)d=d.replace(new RegExp(va,\"g\"),Ia[va]);var Jb=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nEc=\"January February March April May June July August September October November December\".split(\" \");Ia={\"%a\":function(a){return Jb[a.Ys].substring(0,3)},\"%A\":function(a){return Jb[a.Ys]},\"%b\":function(a){return Ec[a.Ks].substring(0,3)},\"%B\":function(a){return Ec[a.Ks]},\"%C\":function(a){return n((a.Cs+1900)/100|0,2)},\"%d\":function(a){return n(a.Us,2)},\"%e\":function(a){return f(a.Us,2,\" \")},\"%g\":function(a){return ba(a).toString().substring(2)},\"%G\":function(a){return ba(a)},\"%H\":function(a){return n(a.Xs,\n2)},\"%I\":function(a){a=a.Xs;0==a?a=12:12<a&&(a-=12);return n(a,2)},\"%j\":function(a){return n(a.Us+vb(ub(a.Cs+1900)?wb:xb,a.Ks-1),3)},\"%m\":function(a){return n(a.Ks+1,2)},\"%M\":function(a){return n(a.Rv,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(a){return 0<=a.Xs&&12>a.Xs?\"AM\":\"PM\"},\"%S\":function(a){return n(a.Sv,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(a){return a.Ys||7},\"%U\":function(a){var c=new Date(a.Cs+1900,0,1),d=0===c.getDay()?c:yb(c,7-c.getDay());a=new Date(a.Cs+1900,a.Ks,a.Us);return 0>\nr(d,a)?n(Math.ceil((31-d.getDate()+(vb(ub(a.getFullYear())?wb:xb,a.getMonth()-1)-31)+a.getDate())/7),2):0===r(d,c)?\"01\":\"00\"},\"%V\":function(a){var c=N(new Date(a.Cs+1900,0,4)),d=N(new Date(a.Cs+1901,0,4)),e=yb(new Date(a.Cs+1900,0,1),a.Zs);return 0>r(e,c)?\"53\":0>=r(d,e)?\"01\":n(Math.ceil((c.getFullYear()<a.Cs+1900?a.Zs+32-c.getDate():a.Zs+1-c.getDate())/7),2)},\"%w\":function(a){return a.Ys},\"%W\":function(a){var c=new Date(a.Cs,0,1),d=1===c.getDay()?c:yb(c,0===c.getDay()?1:7-c.getDay()+1);a=new Date(a.Cs+\n1900,a.Ks,a.Us);return 0>r(d,a)?n(Math.ceil((31-d.getDate()+(vb(ub(a.getFullYear())?wb:xb,a.getMonth()-1)-31)+a.getDate())/7),2):0===r(d,c)?\"01\":\"00\"},\"%y\":function(a){return(a.Cs+1900).toString().substring(2)},\"%Y\":function(a){return a.Cs+1900},\"%z\":function(a){a=a.Qv;var c=0<=a;a=Math.abs(a)/60;return(c?\"+\":\"-\")+String(\"0000\"+(a/60*100+a%60)).slice(-4)},\"%Z\":function(a){return a.Tv},\"%%\":function(){return\"%\"}};for(va in Ia)0<=d.indexOf(va)&&(d=d.replace(new RegExp(va,\"g\"),Ia[va](e)));va=Ab(d,!1);\nif(va.length>c)return 0;Ea.set(va,a);return va.length-1}mb=fa?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:\"undefined\"!==typeof dateNow?dateNow:\"object\"===typeof performance&&performance&&\"function\"===typeof performance.now?function(){return performance.now()}:Date.now;function Ab(a,c){var d=Array(Ca(a)+1);a=Ba(a,d,0,d.length);c&&(d.length=a);return d}\nvar ab={f:function(a){return rb(a)},d:function(a){\"uncaught_exception\"in Bb?Bb.Uv++:Bb.Uv=1;throw a;},m:function(){},t:function(){db(63);return-1},s:function(a,c){fb=c;try{var d=gb();var e=gb();if(-1===d||0===e)var f=-28;else{var n=hb.Bu[d];if(n&&e===n.$v){var r=(void 0).Yv(n.fd);hb.Wv(d,r,e,n.flags);(void 0).bw(r);hb.Bu[d]=null;n.Vv&&qb(n.aw)}f=0}return f}catch(N){return oa(N),-N.gt}},l:function(){},r:function(){return ib.apply(null,arguments)},q:function(){return jb.apply(null,arguments)},u:function(){return kb.apply(null,\narguments)},p:function(){return lb.apply(null,arguments)},__memory_base:1024,__table_base:0,a:function(){oa()},e:function(a,c){if(0===a)a=Date.now();else if(1===a&&(fa||\"undefined\"!==typeof dateNow||\"object\"===typeof performance&&performance&&\"function\"===typeof performance.now))a=mb();else return db(28),-1;h[c>>2]=a/1E3|0;h[c+4>>2]=a%1E3*1E6|0;return 0},D:function(a,c,d,e,f,n,r,N,ba){return bb[a](c,d,e,f,n,r,N,ba)},C:function(a,c){return bb[a](c)},o:function(a,c,d){return bb[a](c,d)},B:function(a,\nc,d,e){return bb[a](c,d,e)},A:function(a,c,d,e,f,n,r){return bb[a](c,d,e,f,n,r)},z:function(a,c,d,e,f){return bb[a](c,d,e,f)},j:nb,y:function(a,c,d){Aa.set(Aa.subarray(c,c+d),a)},i:function(a){if(2147418112<a)return!1;for(var c=Math.max(nb(),16777216);c<a;)c=536870912>=c?Da(2*c):Math.min(Da((3*c+2147483648)/4),2147418112);a:{try{ta.grow(c-buffer.byteLength+65535>>16);Ha(ta.buffer);var d=1;break a}catch(e){}d=void 0}return d?!0:!1},k:pb,c:function(a){var c=Date.now();h[a>>2]=c/1E3|0;h[a+4>>2]=c%1E3*\n1E3|0;return 0},x:Ra,w:Sa,h:function(a){var c=sb.Ls[a];sb.Ls.splice(a,1);Cb(c)},g:sb,n:function(){oa(\"trap!\")},v:function(a,c,d,e){return zb(a,c,d,e)},b:oa,memory:ta,table:ua},Db=g.asm({},ab,buffer);g.asm=Db;\nvar Bb=g.__ZSt18uncaught_exceptionv=function(){return g.asm.E.apply(null,arguments)},Eb=g._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=function(){return g.asm.F.apply(null,arguments)},Fb=g._emscripten_bind_AllHitsRayResultCallback___destroy___0=function(){return g.asm.G.apply(null,arguments)},Gb=g._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=function(){return g.asm.H.apply(null,arguments)},Hb=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=\nfunction(){return g.asm.I.apply(null,arguments)},Ib=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.J.apply(null,arguments)},Kb=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=function(){return g.asm.K.apply(null,arguments)},Lb=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=function(){return g.asm.L.apply(null,arguments)},Mb=g._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=function(){return g.asm.M.apply(null,\narguments)},Nb=g._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=function(){return g.asm.N.apply(null,arguments)},Ob=g._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=function(){return g.asm.O.apply(null,arguments)},Pb=g._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=function(){return g.asm.P.apply(null,arguments)},Qb=g._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=function(){return g.asm.Q.apply(null,arguments)},Rb=g._emscripten_bind_AllHitsRayResultCallback_hasHit_0=\nfunction(){return g.asm.R.apply(null,arguments)},Sb=g._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=function(){return g.asm.S.apply(null,arguments)},Tb=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=function(){return g.asm.T.apply(null,arguments)},Ub=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.U.apply(null,arguments)},Vb=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=function(){return g.asm.V.apply(null,\narguments)},Wb=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=function(){return g.asm.W.apply(null,arguments)},Xb=g._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=function(){return g.asm.X.apply(null,arguments)},Yb=g._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=function(){return g.asm.Y.apply(null,arguments)},Zb=g._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=function(){return g.asm.Z.apply(null,arguments)},$b=g._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=\nfunction(){return g.asm._.apply(null,arguments)},ac=g._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=function(){return g.asm.$.apply(null,arguments)},bc=g._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=function(){return g.asm.aa.apply(null,arguments)},cc=g._emscripten_bind_ClosestConvexResultCallback___destroy___0=function(){return g.asm.ba.apply(null,arguments)},dc=g._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=function(){return g.asm.ca.apply(null,\narguments)},ec=g._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=function(){return g.asm.da.apply(null,arguments)},fc=g._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.ea.apply(null,arguments)},hc=g._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=function(){return g.asm.fa.apply(null,arguments)},ic=g._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=function(){return g.asm.ga.apply(null,\narguments)},jc=g._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=function(){return g.asm.ha.apply(null,arguments)},kc=g._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=function(){return g.asm.ia.apply(null,arguments)},lc=g._emscripten_bind_ClosestConvexResultCallback_hasHit_0=function(){return g.asm.ja.apply(null,arguments)},mc=g._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=function(){return g.asm.ka.apply(null,arguments)},nc=g._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=\nfunction(){return g.asm.la.apply(null,arguments)},oc=g._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.ma.apply(null,arguments)},pc=g._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=function(){return g.asm.na.apply(null,arguments)},qc=g._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=function(){return g.asm.oa.apply(null,arguments)},rc=g._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=function(){return g.asm.pa.apply(null,\narguments)},sc=g._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=function(){return g.asm.qa.apply(null,arguments)},tc=g._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=function(){return g.asm.ra.apply(null,arguments)},uc=g._emscripten_bind_ClosestRayResultCallback___destroy___0=function(){return g.asm.sa.apply(null,arguments)},vc=g._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=function(){return g.asm.ta.apply(null,arguments)},wc=g._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=\nfunction(){return g.asm.ua.apply(null,arguments)},xc=g._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.va.apply(null,arguments)},yc=g._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=function(){return g.asm.wa.apply(null,arguments)},zc=g._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=function(){return g.asm.xa.apply(null,arguments)},Ac=g._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=function(){return g.asm.ya.apply(null,\narguments)},Bc=g._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=function(){return g.asm.za.apply(null,arguments)},Cc=g._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=function(){return g.asm.Aa.apply(null,arguments)},Dc=g._emscripten_bind_ClosestRayResultCallback_hasHit_0=function(){return g.asm.Ba.apply(null,arguments)},Fc=g._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=function(){return g.asm.Ca.apply(null,arguments)},Gc=g._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=\nfunction(){return g.asm.Da.apply(null,arguments)},Hc=g._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.Ea.apply(null,arguments)},Ic=g._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=function(){return g.asm.Fa.apply(null,arguments)},Jc=g._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=function(){return g.asm.Ga.apply(null,arguments)},Kc=g._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=function(){return g.asm.Ha.apply(null,\narguments)},Lc=g._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=function(){return g.asm.Ia.apply(null,arguments)},Mc=g._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=function(){return g.asm.Ja.apply(null,arguments)},Nc=g._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=function(){return g.asm.Ka.apply(null,arguments)},Oc=g._emscripten_bind_ConcreteContactResultCallback___destroy___0=function(){return g.asm.La.apply(null,arguments)},Pc=g._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=\nfunction(){return g.asm.Ma.apply(null,arguments)},Qc=g._emscripten_bind_ContactResultCallback___destroy___0=function(){return g.asm.Na.apply(null,arguments)},Rc=g._emscripten_bind_ContactResultCallback_addSingleResult_7=function(){return g.asm.Oa.apply(null,arguments)},Sc=g._emscripten_bind_ConvexHull_ConvexHull_0=function(){return g.asm.Pa.apply(null,arguments)},Tc=g._emscripten_bind_ConvexHull___destroy___0=function(){return g.asm.Qa.apply(null,arguments)},Uc=g._emscripten_bind_ConvexHull_get_m_nPoints_0=\nfunction(){return g.asm.Ra.apply(null,arguments)},Vc=g._emscripten_bind_ConvexHull_get_m_nTriangles_0=function(){return g.asm.Sa.apply(null,arguments)},Wc=g._emscripten_bind_ConvexHull_get_m_points_1=function(){return g.asm.Ta.apply(null,arguments)},Xc=g._emscripten_bind_ConvexHull_get_m_triangles_1=function(){return g.asm.Ua.apply(null,arguments)},Yc=g._emscripten_bind_ConvexResultCallback___destroy___0=function(){return g.asm.Va.apply(null,arguments)},Zc=g._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=\nfunction(){return g.asm.Wa.apply(null,arguments)},$c=g._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=function(){return g.asm.Xa.apply(null,arguments)},ad=g._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.Ya.apply(null,arguments)},bd=g._emscripten_bind_ConvexResultCallback_hasHit_0=function(){return g.asm.Za.apply(null,arguments)},cd=g._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=function(){return g.asm._a.apply(null,\narguments)},dd=g._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=function(){return g.asm.$a.apply(null,arguments)},ed=g._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.ab.apply(null,arguments)},fd=g._emscripten_bind_DebugDrawer_DebugDrawer_0=function(){return g.asm.bb.apply(null,arguments)},gd=g._emscripten_bind_DebugDrawer___destroy___0=function(){return g.asm.cb.apply(null,arguments)},hd=g._emscripten_bind_DebugDrawer_draw3dText_2=function(){return g.asm.db.apply(null,\narguments)},id=g._emscripten_bind_DebugDrawer_drawContactPoint_5=function(){return g.asm.eb.apply(null,arguments)},jd=g._emscripten_bind_DebugDrawer_drawLine_3=function(){return g.asm.fb.apply(null,arguments)},kd=g._emscripten_bind_DebugDrawer_getDebugMode_0=function(){return g.asm.gb.apply(null,arguments)},ld=g._emscripten_bind_DebugDrawer_reportErrorWarning_1=function(){return g.asm.hb.apply(null,arguments)},md=g._emscripten_bind_DebugDrawer_setDebugMode_1=function(){return g.asm.ib.apply(null,\narguments)},nd=g._emscripten_bind_HACD_Compute_0=function(){return g.asm.jb.apply(null,arguments)},od=g._emscripten_bind_HACD_GetCH_3=function(){return g.asm.kb.apply(null,arguments)},pd=g._emscripten_bind_HACD_GetNClusters_0=function(){return g.asm.lb.apply(null,arguments)},qd=g._emscripten_bind_HACD_GetNPointsCH_1=function(){return g.asm.mb.apply(null,arguments)},rd=g._emscripten_bind_HACD_GetNTrianglesCH_1=function(){return g.asm.nb.apply(null,arguments)},sd=g._emscripten_bind_HACD_HACD_0=function(){return g.asm.ob.apply(null,\narguments)},td=g._emscripten_bind_HACD_SetCompacityWeight_1=function(){return g.asm.pb.apply(null,arguments)},ud=g._emscripten_bind_HACD_SetConcavity_1=function(){return g.asm.qb.apply(null,arguments)},vd=g._emscripten_bind_HACD_SetNClusters_1=function(){return g.asm.rb.apply(null,arguments)},wd=g._emscripten_bind_HACD_SetNPoints_1=function(){return g.asm.sb.apply(null,arguments)},xd=g._emscripten_bind_HACD_SetNTriangles_1=function(){return g.asm.tb.apply(null,arguments)},yd=g._emscripten_bind_HACD_SetNVerticesPerCH_1=\nfunction(){return g.asm.ub.apply(null,arguments)},zd=g._emscripten_bind_HACD_SetPoints_1=function(){return g.asm.vb.apply(null,arguments)},Ad=g._emscripten_bind_HACD_SetTriangles_1=function(){return g.asm.wb.apply(null,arguments)},Bd=g._emscripten_bind_HACD_SetVolumeWeight_1=function(){return g.asm.xb.apply(null,arguments)},Cd=g._emscripten_bind_HACD___destroy___0=function(){return g.asm.yb.apply(null,arguments)},Dd=g._emscripten_bind_LocalConvexResult_LocalConvexResult_5=function(){return g.asm.zb.apply(null,\narguments)},Ed=g._emscripten_bind_LocalConvexResult___destroy___0=function(){return g.asm.Ab.apply(null,arguments)},Fd=g._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=function(){return g.asm.Bb.apply(null,arguments)},Gd=g._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=function(){return g.asm.Cb.apply(null,arguments)},Hd=g._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=function(){return g.asm.Db.apply(null,arguments)},Id=g._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=\nfunction(){return g.asm.Eb.apply(null,arguments)},Jd=g._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=function(){return g.asm.Fb.apply(null,arguments)},Kd=g._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=function(){return g.asm.Gb.apply(null,arguments)},Ld=g._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=function(){return g.asm.Hb.apply(null,arguments)},Md=g._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=function(){return g.asm.Ib.apply(null,arguments)},\nNd=g._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=function(){return g.asm.Jb.apply(null,arguments)},Od=g._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=function(){return g.asm.Kb.apply(null,arguments)},Pd=g._emscripten_bind_LocalShapeInfo___destroy___0=function(){return g.asm.Lb.apply(null,arguments)},Qd=g._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=function(){return g.asm.Mb.apply(null,arguments)},Rd=g._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=function(){return g.asm.Nb.apply(null,\narguments)},Sd=g._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=function(){return g.asm.Ob.apply(null,arguments)},Td=g._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=function(){return g.asm.Pb.apply(null,arguments)},Ud=g._emscripten_bind_Parameters_Parameters_0=function(){return g.asm.Qb.apply(null,arguments)},Vd=g._emscripten_bind_Parameters___destroy___0=function(){return g.asm.Rb.apply(null,arguments)},Wd=g._emscripten_bind_Parameters_get_m_alpha_0=function(){return g.asm.Sb.apply(null,\narguments)},Xd=g._emscripten_bind_Parameters_get_m_beta_0=function(){return g.asm.Tb.apply(null,arguments)},Yd=g._emscripten_bind_Parameters_get_m_concavity_0=function(){return g.asm.Ub.apply(null,arguments)},Zd=g._emscripten_bind_Parameters_get_m_convexhullApproximation_0=function(){return g.asm.Vb.apply(null,arguments)},$d=g._emscripten_bind_Parameters_get_m_convexhullDownsampling_0=function(){return g.asm.Wb.apply(null,arguments)},ae=g._emscripten_bind_Parameters_get_m_depth_0=function(){return g.asm.Xb.apply(null,\narguments)},be=g._emscripten_bind_Parameters_get_m_gamma_0=function(){return g.asm.Yb.apply(null,arguments)},ce=g._emscripten_bind_Parameters_get_m_maxNumVerticesPerCH_0=function(){return g.asm.Zb.apply(null,arguments)},de=g._emscripten_bind_Parameters_get_m_minVolumePerCH_0=function(){return g.asm._b.apply(null,arguments)},ee=g._emscripten_bind_Parameters_get_m_mode_0=function(){return g.asm.$b.apply(null,arguments)},fe=g._emscripten_bind_Parameters_get_m_oclAcceleration_0=function(){return g.asm.ac.apply(null,\narguments)},ge=g._emscripten_bind_Parameters_get_m_pca_0=function(){return g.asm.bc.apply(null,arguments)},he=g._emscripten_bind_Parameters_get_m_planeDownsampling_0=function(){return g.asm.cc.apply(null,arguments)},ie=g._emscripten_bind_Parameters_get_m_resolution_0=function(){return g.asm.dc.apply(null,arguments)},je=g._emscripten_bind_Parameters_set_m_alpha_1=function(){return g.asm.ec.apply(null,arguments)},ke=g._emscripten_bind_Parameters_set_m_beta_1=function(){return g.asm.fc.apply(null,arguments)},\nle=g._emscripten_bind_Parameters_set_m_concavity_1=function(){return g.asm.gc.apply(null,arguments)},me=g._emscripten_bind_Parameters_set_m_convexhullApproximation_1=function(){return g.asm.hc.apply(null,arguments)},ne=g._emscripten_bind_Parameters_set_m_convexhullDownsampling_1=function(){return g.asm.ic.apply(null,arguments)},oe=g._emscripten_bind_Parameters_set_m_depth_1=function(){return g.asm.jc.apply(null,arguments)},pe=g._emscripten_bind_Parameters_set_m_gamma_1=function(){return g.asm.kc.apply(null,\narguments)},qe=g._emscripten_bind_Parameters_set_m_maxNumVerticesPerCH_1=function(){return g.asm.lc.apply(null,arguments)},re=g._emscripten_bind_Parameters_set_m_minVolumePerCH_1=function(){return g.asm.mc.apply(null,arguments)},se=g._emscripten_bind_Parameters_set_m_mode_1=function(){return g.asm.nc.apply(null,arguments)},te=g._emscripten_bind_Parameters_set_m_oclAcceleration_1=function(){return g.asm.oc.apply(null,arguments)},ue=g._emscripten_bind_Parameters_set_m_pca_1=function(){return g.asm.pc.apply(null,\narguments)},ve=g._emscripten_bind_Parameters_set_m_planeDownsampling_1=function(){return g.asm.qc.apply(null,arguments)},we=g._emscripten_bind_Parameters_set_m_resolution_1=function(){return g.asm.rc.apply(null,arguments)},xe=g._emscripten_bind_RayResultCallback___destroy___0=function(){return g.asm.sc.apply(null,arguments)},ye=g._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=function(){return g.asm.tc.apply(null,arguments)},ze=g._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=\nfunction(){return g.asm.uc.apply(null,arguments)},Ae=g._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.vc.apply(null,arguments)},Be=g._emscripten_bind_RayResultCallback_get_m_collisionObject_0=function(){return g.asm.wc.apply(null,arguments)},Ce=g._emscripten_bind_RayResultCallback_hasHit_0=function(){return g.asm.xc.apply(null,arguments)},De=g._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=function(){return g.asm.yc.apply(null,arguments)},Ee=\ng._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=function(){return g.asm.zc.apply(null,arguments)},Fe=g._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.Ac.apply(null,arguments)},Ge=g._emscripten_bind_RayResultCallback_set_m_collisionObject_1=function(){return g.asm.Bc.apply(null,arguments)},He=g._emscripten_bind_VHACD_Cancel_0=function(){return g.asm.Cc.apply(null,arguments)},Ie=g._emscripten_bind_VHACD_Clean_0=function(){return g.asm.Dc.apply(null,\narguments)},Je=g._emscripten_bind_VHACD_Compute_7=function(){return g.asm.Ec.apply(null,arguments)},Ke=g._emscripten_bind_VHACD_GetConvexHull_2=function(){return g.asm.Fc.apply(null,arguments)},Le=g._emscripten_bind_VHACD_GetNConvexHulls_0=function(){return g.asm.Gc.apply(null,arguments)},Me=g._emscripten_bind_VHACD_Release_0=function(){return g.asm.Hc.apply(null,arguments)},Ne=g._emscripten_bind_VHACD_VHACD_0=function(){return g.asm.Ic.apply(null,arguments)},Oe=g._emscripten_bind_VHACD___destroy___0=\nfunction(){return g.asm.Jc.apply(null,arguments)},Pe=g._emscripten_bind_Vec3Long_Vec3Long_3=function(){return g.asm.Kc.apply(null,arguments)},Qe=g._emscripten_bind_Vec3Long_X_0=function(){return g.asm.Lc.apply(null,arguments)},Re=g._emscripten_bind_Vec3Long_Y_0=function(){return g.asm.Mc.apply(null,arguments)},Se=g._emscripten_bind_Vec3Long_Z_0=function(){return g.asm.Nc.apply(null,arguments)},Te=g._emscripten_bind_Vec3Long___destroy___0=function(){return g.asm.Oc.apply(null,arguments)},Ue=g._emscripten_bind_Vec3Real_Vec3Real_3=\nfunction(){return g.asm.Pc.apply(null,arguments)},Ve=g._emscripten_bind_Vec3Real_X_0=function(){return g.asm.Qc.apply(null,arguments)},We=g._emscripten_bind_Vec3Real_Y_0=function(){return g.asm.Rc.apply(null,arguments)},Xe=g._emscripten_bind_Vec3Real_Z_0=function(){return g.asm.Sc.apply(null,arguments)},Ye=g._emscripten_bind_Vec3Real___destroy___0=function(){return g.asm.Tc.apply(null,arguments)},Ze=g._emscripten_bind_VoidPtr___destroy___0=function(){return g.asm.Uc.apply(null,arguments)},$e=g._emscripten_bind_btActionInterface___destroy___0=\nfunction(){return g.asm.Vc.apply(null,arguments)},af=g._emscripten_bind_btActionInterface_updateAction_2=function(){return g.asm.Wc.apply(null,arguments)},bf=g._emscripten_bind_btAxisSweep3___destroy___0=function(){return g.asm.Xc.apply(null,arguments)},cf=g._emscripten_bind_btAxisSweep3_btAxisSweep3_2=function(){return g.asm.Yc.apply(null,arguments)},df=g._emscripten_bind_btAxisSweep3_btAxisSweep3_3=function(){return g.asm.Zc.apply(null,arguments)},ef=g._emscripten_bind_btAxisSweep3_btAxisSweep3_4=\nfunction(){return g.asm._c.apply(null,arguments)},ff=g._emscripten_bind_btAxisSweep3_btAxisSweep3_5=function(){return g.asm.$c.apply(null,arguments)},gf=g._emscripten_bind_btBoxShape___destroy___0=function(){return g.asm.ad.apply(null,arguments)},hf=g._emscripten_bind_btBoxShape_btBoxShape_1=function(){return g.asm.bd.apply(null,arguments)},jf=g._emscripten_bind_btBoxShape_calculateLocalInertia_2=function(){return g.asm.cd.apply(null,arguments)},kf=g._emscripten_bind_btBoxShape_getLocalScaling_0=\nfunction(){return g.asm.dd.apply(null,arguments)},lf=g._emscripten_bind_btBoxShape_getMargin_0=function(){return g.asm.ed.apply(null,arguments)},mf=g._emscripten_bind_btBoxShape_setLocalScaling_1=function(){return g.asm.fd.apply(null,arguments)},nf=g._emscripten_bind_btBoxShape_setMargin_1=function(){return g.asm.gd.apply(null,arguments)},of=g._emscripten_bind_btBroadphaseInterface___destroy___0=function(){return g.asm.hd.apply(null,arguments)},pf=g._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=\nfunction(){return g.asm.id.apply(null,arguments)},qf=g._emscripten_bind_btBroadphaseProxy___destroy___0=function(){return g.asm.jd.apply(null,arguments)},rf=g._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=function(){return g.asm.kd.apply(null,arguments)},sf=g._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=function(){return g.asm.ld.apply(null,arguments)},tf=g._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=function(){return g.asm.md.apply(null,arguments)},\nuf=g._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=function(){return g.asm.nd.apply(null,arguments)},vf=g._emscripten_bind_btBvhTriangleMeshShape___destroy___0=function(){return g.asm.od.apply(null,arguments)},wf=g._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=function(){return g.asm.pd.apply(null,arguments)},xf=g._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=function(){return g.asm.qd.apply(null,arguments)},yf=g._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=\nfunction(){return g.asm.rd.apply(null,arguments)},zf=g._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=function(){return g.asm.sd.apply(null,arguments)},Af=g._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=function(){return g.asm.td.apply(null,arguments)},Bf=g._emscripten_bind_btCapsuleShapeX___destroy___0=function(){return g.asm.ud.apply(null,arguments)},Cf=g._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=function(){return g.asm.vd.apply(null,arguments)},Df=g._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=\nfunction(){return g.asm.wd.apply(null,arguments)},Ef=g._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=function(){return g.asm.xd.apply(null,arguments)},Ff=g._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=function(){return g.asm.yd.apply(null,arguments)},Gf=g._emscripten_bind_btCapsuleShapeX_getMargin_0=function(){return g.asm.zd.apply(null,arguments)},Hf=g._emscripten_bind_btCapsuleShapeX_getRadius_0=function(){return g.asm.Ad.apply(null,arguments)},If=g._emscripten_bind_btCapsuleShapeX_getUpAxis_0=\nfunction(){return g.asm.Bd.apply(null,arguments)},Jf=g._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=function(){return g.asm.Cd.apply(null,arguments)},Kf=g._emscripten_bind_btCapsuleShapeX_setMargin_1=function(){return g.asm.Dd.apply(null,arguments)},Lf=g._emscripten_bind_btCapsuleShapeZ___destroy___0=function(){return g.asm.Ed.apply(null,arguments)},Mf=g._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=function(){return g.asm.Fd.apply(null,arguments)},Nf=g._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=\nfunction(){return g.asm.Gd.apply(null,arguments)},Of=g._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=function(){return g.asm.Hd.apply(null,arguments)},Pf=g._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=function(){return g.asm.Id.apply(null,arguments)},Qf=g._emscripten_bind_btCapsuleShapeZ_getMargin_0=function(){return g.asm.Jd.apply(null,arguments)},Rf=g._emscripten_bind_btCapsuleShapeZ_getRadius_0=function(){return g.asm.Kd.apply(null,arguments)},Sf=g._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=\nfunction(){return g.asm.Ld.apply(null,arguments)},Tf=g._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=function(){return g.asm.Md.apply(null,arguments)},Uf=g._emscripten_bind_btCapsuleShapeZ_setMargin_1=function(){return g.asm.Nd.apply(null,arguments)},Vf=g._emscripten_bind_btCapsuleShape___destroy___0=function(){return g.asm.Od.apply(null,arguments)},Wf=g._emscripten_bind_btCapsuleShape_btCapsuleShape_2=function(){return g.asm.Pd.apply(null,arguments)},Xf=g._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=\nfunction(){return g.asm.Qd.apply(null,arguments)},Yf=g._emscripten_bind_btCapsuleShape_getHalfHeight_0=function(){return g.asm.Rd.apply(null,arguments)},Zf=g._emscripten_bind_btCapsuleShape_getLocalScaling_0=function(){return g.asm.Sd.apply(null,arguments)},$f=g._emscripten_bind_btCapsuleShape_getMargin_0=function(){return g.asm.Td.apply(null,arguments)},ag=g._emscripten_bind_btCapsuleShape_getRadius_0=function(){return g.asm.Ud.apply(null,arguments)},bg=g._emscripten_bind_btCapsuleShape_getUpAxis_0=\nfunction(){return g.asm.Vd.apply(null,arguments)},cg=g._emscripten_bind_btCapsuleShape_setLocalScaling_1=function(){return g.asm.Wd.apply(null,arguments)},dg=g._emscripten_bind_btCapsuleShape_setMargin_1=function(){return g.asm.Xd.apply(null,arguments)},eg=g._emscripten_bind_btCollisionConfiguration___destroy___0=function(){return g.asm.Yd.apply(null,arguments)},fg=g._emscripten_bind_btCollisionDispatcher___destroy___0=function(){return g.asm.Zd.apply(null,arguments)},gg=g._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=\nfunction(){return g.asm._d.apply(null,arguments)},hg=g._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=function(){return g.asm.$d.apply(null,arguments)},ig=g._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=function(){return g.asm.ae.apply(null,arguments)},jg=g._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=function(){return g.asm.be.apply(null,arguments)},kg=g._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=function(){return g.asm.ce.apply(null,\narguments)},lg=g._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=function(){return g.asm.de.apply(null,arguments)},mg=g._emscripten_bind_btCollisionObject___destroy___0=function(){return g.asm.ee.apply(null,arguments)},ng=g._emscripten_bind_btCollisionObject_activate_0=function(){return g.asm.fe.apply(null,arguments)},og=g._emscripten_bind_btCollisionObject_activate_1=function(){return g.asm.ge.apply(null,arguments)},pg=g._emscripten_bind_btCollisionObject_forceActivationState_1=function(){return g.asm.he.apply(null,\narguments)},qg=g._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=function(){return g.asm.ie.apply(null,arguments)},rg=g._emscripten_bind_btCollisionObject_getCollisionFlags_0=function(){return g.asm.je.apply(null,arguments)},sg=g._emscripten_bind_btCollisionObject_getCollisionShape_0=function(){return g.asm.ke.apply(null,arguments)},tg=g._emscripten_bind_btCollisionObject_getFriction_0=function(){return g.asm.le.apply(null,arguments)},ug=g._emscripten_bind_btCollisionObject_getRestitution_0=\nfunction(){return g.asm.me.apply(null,arguments)},vg=g._emscripten_bind_btCollisionObject_getRollingFriction_0=function(){return g.asm.ne.apply(null,arguments)},wg=g._emscripten_bind_btCollisionObject_getUserIndex_0=function(){return g.asm.oe.apply(null,arguments)},xg=g._emscripten_bind_btCollisionObject_getUserPointer_0=function(){return g.asm.pe.apply(null,arguments)},yg=g._emscripten_bind_btCollisionObject_getWorldTransform_0=function(){return g.asm.qe.apply(null,arguments)},zg=g._emscripten_bind_btCollisionObject_isActive_0=\nfunction(){return g.asm.re.apply(null,arguments)},Ag=g._emscripten_bind_btCollisionObject_isKinematicObject_0=function(){return g.asm.se.apply(null,arguments)},Bg=g._emscripten_bind_btCollisionObject_isStaticObject_0=function(){return g.asm.te.apply(null,arguments)},Cg=g._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=function(){return g.asm.ue.apply(null,arguments)},Dg=g._emscripten_bind_btCollisionObject_setActivationState_1=function(){return g.asm.ve.apply(null,arguments)},Eg=g._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=\nfunction(){return g.asm.we.apply(null,arguments)},Fg=g._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=function(){return g.asm.xe.apply(null,arguments)},Gg=g._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=function(){return g.asm.ye.apply(null,arguments)},Hg=g._emscripten_bind_btCollisionObject_setCollisionFlags_1=function(){return g.asm.ze.apply(null,arguments)},Ig=g._emscripten_bind_btCollisionObject_setCollisionShape_1=function(){return g.asm.Ae.apply(null,arguments)},Jg=\ng._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=function(){return g.asm.Be.apply(null,arguments)},Kg=g._emscripten_bind_btCollisionObject_setFriction_1=function(){return g.asm.Ce.apply(null,arguments)},Lg=g._emscripten_bind_btCollisionObject_setRestitution_1=function(){return g.asm.De.apply(null,arguments)},Mg=g._emscripten_bind_btCollisionObject_setRollingFriction_1=function(){return g.asm.Ee.apply(null,arguments)},Ng=g._emscripten_bind_btCollisionObject_setUserIndex_1=function(){return g.asm.Fe.apply(null,\narguments)},Og=g._emscripten_bind_btCollisionObject_setUserPointer_1=function(){return g.asm.Ge.apply(null,arguments)},Pg=g._emscripten_bind_btCollisionObject_setWorldTransform_1=function(){return g.asm.He.apply(null,arguments)},Qg=g._emscripten_bind_btCollisionShape___destroy___0=function(){return g.asm.Ie.apply(null,arguments)},Rg=g._emscripten_bind_btCollisionShape_calculateLocalInertia_2=function(){return g.asm.Je.apply(null,arguments)},Sg=g._emscripten_bind_btCollisionShape_getLocalScaling_0=\nfunction(){return g.asm.Ke.apply(null,arguments)},Tg=g._emscripten_bind_btCollisionShape_getMargin_0=function(){return g.asm.Le.apply(null,arguments)},Ug=g._emscripten_bind_btCollisionShape_setLocalScaling_1=function(){return g.asm.Me.apply(null,arguments)},Vg=g._emscripten_bind_btCollisionShape_setMargin_1=function(){return g.asm.Ne.apply(null,arguments)},Wg=g._emscripten_bind_btCollisionWorld___destroy___0=function(){return g.asm.Oe.apply(null,arguments)},Xg=g._emscripten_bind_btCollisionWorld_addCollisionObject_1=\nfunction(){return g.asm.Pe.apply(null,arguments)},Yg=g._emscripten_bind_btCollisionWorld_addCollisionObject_2=function(){return g.asm.Qe.apply(null,arguments)},Zg=g._emscripten_bind_btCollisionWorld_addCollisionObject_3=function(){return g.asm.Re.apply(null,arguments)},$g=g._emscripten_bind_btCollisionWorld_contactPairTest_3=function(){return g.asm.Se.apply(null,arguments)},ah=g._emscripten_bind_btCollisionWorld_contactTest_2=function(){return g.asm.Te.apply(null,arguments)},bh=g._emscripten_bind_btCollisionWorld_convexSweepTest_5=\nfunction(){return g.asm.Ue.apply(null,arguments)},ch=g._emscripten_bind_btCollisionWorld_debugDrawObject_3=function(){return g.asm.Ve.apply(null,arguments)},dh=g._emscripten_bind_btCollisionWorld_debugDrawWorld_0=function(){return g.asm.We.apply(null,arguments)},eh=g._emscripten_bind_btCollisionWorld_getBroadphase_0=function(){return g.asm.Xe.apply(null,arguments)},fh=g._emscripten_bind_btCollisionWorld_getDebugDrawer_0=function(){return g.asm.Ye.apply(null,arguments)},gh=g._emscripten_bind_btCollisionWorld_getDispatchInfo_0=\nfunction(){return g.asm.Ze.apply(null,arguments)},hh=g._emscripten_bind_btCollisionWorld_getDispatcher_0=function(){return g.asm._e.apply(null,arguments)},ih=g._emscripten_bind_btCollisionWorld_getPairCache_0=function(){return g.asm.$e.apply(null,arguments)},jh=g._emscripten_bind_btCollisionWorld_rayTest_3=function(){return g.asm.af.apply(null,arguments)},kh=g._emscripten_bind_btCollisionWorld_removeCollisionObject_1=function(){return g.asm.bf.apply(null,arguments)},lh=g._emscripten_bind_btCollisionWorld_setDebugDrawer_1=\nfunction(){return g.asm.cf.apply(null,arguments)},mh=g._emscripten_bind_btCollisionWorld_setForceUpdateAllAabbs_1=function(){return g.asm.df.apply(null,arguments)},nh=g._emscripten_bind_btCollisionWorld_updateSingleAabb_1=function(){return g.asm.ef.apply(null,arguments)},oh=g._emscripten_bind_btCompoundShape___destroy___0=function(){return g.asm.ff.apply(null,arguments)},ph=g._emscripten_bind_btCompoundShape_addChildShape_2=function(){return g.asm.gf.apply(null,arguments)},qh=g._emscripten_bind_btCompoundShape_btCompoundShape_0=\nfunction(){return g.asm.hf.apply(null,arguments)},rh=g._emscripten_bind_btCompoundShape_btCompoundShape_1=function(){return g.asm.jf.apply(null,arguments)},sh=g._emscripten_bind_btCompoundShape_calculateLocalInertia_2=function(){return g.asm.kf.apply(null,arguments)},th=g._emscripten_bind_btCompoundShape_getChildShape_1=function(){return g.asm.lf.apply(null,arguments)},uh=g._emscripten_bind_btCompoundShape_getLocalScaling_0=function(){return g.asm.mf.apply(null,arguments)},vh=g._emscripten_bind_btCompoundShape_getMargin_0=\nfunction(){return g.asm.nf.apply(null,arguments)},wh=g._emscripten_bind_btCompoundShape_getNumChildShapes_0=function(){return g.asm.of.apply(null,arguments)},xh=g._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=function(){return g.asm.pf.apply(null,arguments)},yh=g._emscripten_bind_btCompoundShape_removeChildShape_1=function(){return g.asm.qf.apply(null,arguments)},zh=g._emscripten_bind_btCompoundShape_setLocalScaling_1=function(){return g.asm.rf.apply(null,arguments)},Ah=g._emscripten_bind_btCompoundShape_setMargin_1=\nfunction(){return g.asm.sf.apply(null,arguments)},Bh=g._emscripten_bind_btCompoundShape_updateChildTransform_2=function(){return g.asm.tf.apply(null,arguments)},Ch=g._emscripten_bind_btCompoundShape_updateChildTransform_3=function(){return g.asm.uf.apply(null,arguments)},Dh=g._emscripten_bind_btConcaveShape___destroy___0=function(){return g.asm.vf.apply(null,arguments)},Eh=g._emscripten_bind_btConcaveShape_calculateLocalInertia_2=function(){return g.asm.wf.apply(null,arguments)},Fh=g._emscripten_bind_btConcaveShape_getLocalScaling_0=\nfunction(){return g.asm.xf.apply(null,arguments)},Gh=g._emscripten_bind_btConcaveShape_setLocalScaling_1=function(){return g.asm.yf.apply(null,arguments)},Hh=g._emscripten_bind_btConeShapeX___destroy___0=function(){return g.asm.zf.apply(null,arguments)},Ih=g._emscripten_bind_btConeShapeX_btConeShapeX_2=function(){return g.asm.Af.apply(null,arguments)},Jh=g._emscripten_bind_btConeShapeX_calculateLocalInertia_2=function(){return g.asm.Bf.apply(null,arguments)},Kh=g._emscripten_bind_btConeShapeX_getLocalScaling_0=\nfunction(){return g.asm.Cf.apply(null,arguments)},Lh=g._emscripten_bind_btConeShapeX_setLocalScaling_1=function(){return g.asm.Df.apply(null,arguments)},Mh=g._emscripten_bind_btConeShapeZ___destroy___0=function(){return g.asm.Ef.apply(null,arguments)},Nh=g._emscripten_bind_btConeShapeZ_btConeShapeZ_2=function(){return g.asm.Ff.apply(null,arguments)},Oh=g._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=function(){return g.asm.Gf.apply(null,arguments)},Ph=g._emscripten_bind_btConeShapeZ_getLocalScaling_0=\nfunction(){return g.asm.Hf.apply(null,arguments)},Qh=g._emscripten_bind_btConeShapeZ_setLocalScaling_1=function(){return g.asm.If.apply(null,arguments)},Rh=g._emscripten_bind_btConeShape___destroy___0=function(){return g.asm.Jf.apply(null,arguments)},Sh=g._emscripten_bind_btConeShape_btConeShape_2=function(){return g.asm.Kf.apply(null,arguments)},Th=g._emscripten_bind_btConeShape_calculateLocalInertia_2=function(){return g.asm.Lf.apply(null,arguments)},Uh=g._emscripten_bind_btConeShape_getLocalScaling_0=\nfunction(){return g.asm.Mf.apply(null,arguments)},Vh=g._emscripten_bind_btConeShape_setLocalScaling_1=function(){return g.asm.Nf.apply(null,arguments)},Wh=g._emscripten_bind_btConeTwistConstraint___destroy___0=function(){return g.asm.Of.apply(null,arguments)},Xh=g._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=function(){return g.asm.Pf.apply(null,arguments)},Yh=g._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=function(){return g.asm.Qf.apply(null,arguments)},Zh=g._emscripten_bind_btConeTwistConstraint_enableFeedback_1=\nfunction(){return g.asm.Rf.apply(null,arguments)},$h=g._emscripten_bind_btConeTwistConstraint_enableMotor_1=function(){return g.asm.Sf.apply(null,arguments)},ai=g._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Tf.apply(null,arguments)},bi=g._emscripten_bind_btConeTwistConstraint_getParam_2=function(){return g.asm.Uf.apply(null,arguments)},ci=g._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=function(){return g.asm.Vf.apply(null,arguments)},di=\ng._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.Wf.apply(null,arguments)},ei=g._emscripten_bind_btConeTwistConstraint_setDamping_1=function(){return g.asm.Xf.apply(null,arguments)},fi=g._emscripten_bind_btConeTwistConstraint_setLimit_2=function(){return g.asm.Yf.apply(null,arguments)},gi=g._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=function(){return g.asm.Zf.apply(null,arguments)},hi=g._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=\nfunction(){return g.asm._f.apply(null,arguments)},ii=g._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=function(){return g.asm.$f.apply(null,arguments)},ji=g._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=function(){return g.asm.ag.apply(null,arguments)},ki=g._emscripten_bind_btConeTwistConstraint_setParam_3=function(){return g.asm.bg.apply(null,arguments)},li=g._emscripten_bind_btConstCollisionObjectArray___destroy___0=function(){return g.asm.cg.apply(null,arguments)},\nmi=g._emscripten_bind_btConstCollisionObjectArray_at_1=function(){return g.asm.dg.apply(null,arguments)},ni=g._emscripten_bind_btConstCollisionObjectArray_size_0=function(){return g.asm.eg.apply(null,arguments)},oi=g._emscripten_bind_btConstraintSetting___destroy___0=function(){return g.asm.fg.apply(null,arguments)},pi=g._emscripten_bind_btConstraintSetting_btConstraintSetting_0=function(){return g.asm.gg.apply(null,arguments)},qi=g._emscripten_bind_btConstraintSetting_get_m_damping_0=function(){return g.asm.hg.apply(null,\narguments)},ri=g._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=function(){return g.asm.ig.apply(null,arguments)},si=g._emscripten_bind_btConstraintSetting_get_m_tau_0=function(){return g.asm.jg.apply(null,arguments)},ti=g._emscripten_bind_btConstraintSetting_set_m_damping_1=function(){return g.asm.kg.apply(null,arguments)},ui=g._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=function(){return g.asm.lg.apply(null,arguments)},vi=g._emscripten_bind_btConstraintSetting_set_m_tau_1=\nfunction(){return g.asm.mg.apply(null,arguments)},wi=g._emscripten_bind_btConstraintSolver___destroy___0=function(){return g.asm.ng.apply(null,arguments)},xi=g._emscripten_bind_btContactSolverInfo___destroy___0=function(){return g.asm.og.apply(null,arguments)},yi=g._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=function(){return g.asm.pg.apply(null,arguments)},zi=g._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=function(){return g.asm.qg.apply(null,arguments)},\nAi=g._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=function(){return g.asm.rg.apply(null,arguments)},Bi=g._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=function(){return g.asm.sg.apply(null,arguments)},Ci=g._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=function(){return g.asm.tg.apply(null,arguments)},Di=g._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=function(){return g.asm.ug.apply(null,arguments)},Ei=g._emscripten_bind_btConvexHullShape___destroy___0=\nfunction(){return g.asm.vg.apply(null,arguments)},Fi=g._emscripten_bind_btConvexHullShape_addPoint_1=function(){return g.asm.wg.apply(null,arguments)},Gi=g._emscripten_bind_btConvexHullShape_addPoint_2=function(){return g.asm.xg.apply(null,arguments)},Hi=g._emscripten_bind_btConvexHullShape_btConvexHullShape_0=function(){return g.asm.yg.apply(null,arguments)},Ii=g._emscripten_bind_btConvexHullShape_btConvexHullShape_1=function(){return g.asm.zg.apply(null,arguments)},Ji=g._emscripten_bind_btConvexHullShape_btConvexHullShape_2=\nfunction(){return g.asm.Ag.apply(null,arguments)},Ki=g._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=function(){return g.asm.Bg.apply(null,arguments)},Li=g._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=function(){return g.asm.Cg.apply(null,arguments)},Mi=g._emscripten_bind_btConvexHullShape_getLocalScaling_0=function(){return g.asm.Dg.apply(null,arguments)},Ni=g._emscripten_bind_btConvexHullShape_getMargin_0=function(){return g.asm.Eg.apply(null,arguments)},Oi=g._emscripten_bind_btConvexHullShape_getNumVertices_0=\nfunction(){return g.asm.Fg.apply(null,arguments)},Pi=g._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=function(){return g.asm.Gg.apply(null,arguments)},Qi=g._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=function(){return g.asm.Hg.apply(null,arguments)},Ri=g._emscripten_bind_btConvexHullShape_setLocalScaling_1=function(){return g.asm.Ig.apply(null,arguments)},Si=g._emscripten_bind_btConvexHullShape_setMargin_1=function(){return g.asm.Jg.apply(null,arguments)},Ti=g._emscripten_bind_btConvexPolyhedron___destroy___0=\nfunction(){return g.asm.Kg.apply(null,arguments)},Ui=g._emscripten_bind_btConvexPolyhedron_get_m_faces_0=function(){return g.asm.Lg.apply(null,arguments)},Vi=g._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=function(){return g.asm.Mg.apply(null,arguments)},Wi=g._emscripten_bind_btConvexPolyhedron_set_m_faces_1=function(){return g.asm.Ng.apply(null,arguments)},Xi=g._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=function(){return g.asm.Og.apply(null,arguments)},Yi=g._emscripten_bind_btConvexShape___destroy___0=\nfunction(){return g.asm.Pg.apply(null,arguments)},Zi=g._emscripten_bind_btConvexShape_calculateLocalInertia_2=function(){return g.asm.Qg.apply(null,arguments)},$i=g._emscripten_bind_btConvexShape_getLocalScaling_0=function(){return g.asm.Rg.apply(null,arguments)},aj=g._emscripten_bind_btConvexShape_getMargin_0=function(){return g.asm.Sg.apply(null,arguments)},bj=g._emscripten_bind_btConvexShape_setLocalScaling_1=function(){return g.asm.Tg.apply(null,arguments)},cj=g._emscripten_bind_btConvexShape_setMargin_1=\nfunction(){return g.asm.Ug.apply(null,arguments)},dj=g._emscripten_bind_btConvexTriangleMeshShape___destroy___0=function(){return g.asm.Vg.apply(null,arguments)},ej=g._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=function(){return g.asm.Wg.apply(null,arguments)},fj=g._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=function(){return g.asm.Xg.apply(null,arguments)},gj=g._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=function(){return g.asm.Yg.apply(null,\narguments)},hj=g._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=function(){return g.asm.Zg.apply(null,arguments)},ij=g._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=function(){return g.asm._g.apply(null,arguments)},jj=g._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=function(){return g.asm.$g.apply(null,arguments)},kj=g._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=function(){return g.asm.ah.apply(null,arguments)},lj=g._emscripten_bind_btCylinderShapeX___destroy___0=\nfunction(){return g.asm.bh.apply(null,arguments)},mj=g._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=function(){return g.asm.ch.apply(null,arguments)},nj=g._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=function(){return g.asm.dh.apply(null,arguments)},oj=g._emscripten_bind_btCylinderShapeX_getLocalScaling_0=function(){return g.asm.eh.apply(null,arguments)},pj=g._emscripten_bind_btCylinderShapeX_getMargin_0=function(){return g.asm.fh.apply(null,arguments)},qj=g._emscripten_bind_btCylinderShapeX_setLocalScaling_1=\nfunction(){return g.asm.gh.apply(null,arguments)},rj=g._emscripten_bind_btCylinderShapeX_setMargin_1=function(){return g.asm.hh.apply(null,arguments)},sj=g._emscripten_bind_btCylinderShapeZ___destroy___0=function(){return g.asm.ih.apply(null,arguments)},tj=g._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=function(){return g.asm.jh.apply(null,arguments)},uj=g._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=function(){return g.asm.kh.apply(null,arguments)},vj=g._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=\nfunction(){return g.asm.lh.apply(null,arguments)},wj=g._emscripten_bind_btCylinderShapeZ_getMargin_0=function(){return g.asm.mh.apply(null,arguments)},xj=g._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=function(){return g.asm.nh.apply(null,arguments)},yj=g._emscripten_bind_btCylinderShapeZ_setMargin_1=function(){return g.asm.oh.apply(null,arguments)},zj=g._emscripten_bind_btCylinderShape___destroy___0=function(){return g.asm.ph.apply(null,arguments)},Aj=g._emscripten_bind_btCylinderShape_btCylinderShape_1=\nfunction(){return g.asm.qh.apply(null,arguments)},Bj=g._emscripten_bind_btCylinderShape_calculateLocalInertia_2=function(){return g.asm.rh.apply(null,arguments)},Cj=g._emscripten_bind_btCylinderShape_getLocalScaling_0=function(){return g.asm.sh.apply(null,arguments)},Dj=g._emscripten_bind_btCylinderShape_getMargin_0=function(){return g.asm.th.apply(null,arguments)},Ej=g._emscripten_bind_btCylinderShape_setLocalScaling_1=function(){return g.asm.uh.apply(null,arguments)},Fj=g._emscripten_bind_btCylinderShape_setMargin_1=\nfunction(){return g.asm.vh.apply(null,arguments)},Gj=g._emscripten_bind_btDbvtBroadphase___destroy___0=function(){return g.asm.wh.apply(null,arguments)},Hj=g._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=function(){return g.asm.xh.apply(null,arguments)},Ij=g._emscripten_bind_btDbvtBroadphase_getOverlappingPairCache_0=function(){return g.asm.yh.apply(null,arguments)},Jj=g._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=function(){return g.asm.zh.apply(null,arguments)},Kj=g._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=\nfunction(){return g.asm.Ah.apply(null,arguments)},Lj=g._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=function(){return g.asm.Bh.apply(null,arguments)},Mj=g._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=function(){return g.asm.Ch.apply(null,arguments)},Nj=g._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=function(){return g.asm.Dh.apply(null,arguments)},Oj=g._emscripten_bind_btDefaultMotionState___destroy___0=\nfunction(){return g.asm.Eh.apply(null,arguments)},Pj=g._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=function(){return g.asm.Fh.apply(null,arguments)},Qj=g._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=function(){return g.asm.Gh.apply(null,arguments)},Rj=g._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=function(){return g.asm.Hh.apply(null,arguments)},Sj=g._emscripten_bind_btDefaultMotionState_getWorldTransform_1=function(){return g.asm.Ih.apply(null,arguments)},\nTj=g._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=function(){return g.asm.Jh.apply(null,arguments)},Uj=g._emscripten_bind_btDefaultMotionState_setWorldTransform_1=function(){return g.asm.Kh.apply(null,arguments)},Vj=g._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=function(){return g.asm.Lh.apply(null,arguments)},Wj=g._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=function(){return g.asm.Mh.apply(null,arguments)},Xj=g._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=\nfunction(){return g.asm.Nh.apply(null,arguments)},Yj=g._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=function(){return g.asm.Oh.apply(null,arguments)},Zj=g._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=function(){return g.asm.Ph.apply(null,arguments)},ak=g._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=function(){return g.asm.Qh.apply(null,arguments)},bk=g._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=function(){return g.asm.Rh.apply(null,\narguments)},ck=g._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=function(){return g.asm.Sh.apply(null,arguments)},dk=g._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=function(){return g.asm.Th.apply(null,arguments)},ek=g._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=function(){return g.asm.Uh.apply(null,arguments)},fk=g._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=function(){return g.asm.Vh.apply(null,arguments)},gk=g._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=\nfunction(){return g.asm.Wh.apply(null,arguments)},hk=g._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=function(){return g.asm.Xh.apply(null,arguments)},ik=g._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=function(){return g.asm.Yh.apply(null,arguments)},jk=g._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=function(){return g.asm.Zh.apply(null,arguments)},kk=g._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=function(){return g.asm._h.apply(null,arguments)},\nlk=g._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=function(){return g.asm.$h.apply(null,arguments)},mk=g._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=function(){return g.asm.ai.apply(null,arguments)},nk=g._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=function(){return g.asm.bi.apply(null,arguments)},ok=g._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=function(){return g.asm.ci.apply(null,arguments)},pk=g._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=\nfunction(){return g.asm.di.apply(null,arguments)},qk=g._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=function(){return g.asm.ei.apply(null,arguments)},rk=g._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=function(){return g.asm.fi.apply(null,arguments)},sk=g._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=function(){return g.asm.gi.apply(null,arguments)},tk=g._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=function(){return g.asm.hi.apply(null,arguments)},uk=g._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=\nfunction(){return g.asm.ii.apply(null,arguments)},vk=g._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=function(){return g.asm.ji.apply(null,arguments)},wk=g._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=function(){return g.asm.ki.apply(null,arguments)},xk=g._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=function(){return g.asm.li.apply(null,arguments)},yk=g._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=function(){return g.asm.mi.apply(null,\narguments)},zk=g._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=function(){return g.asm.ni.apply(null,arguments)},Ak=g._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=function(){return g.asm.oi.apply(null,arguments)},Bk=g._emscripten_bind_btDiscreteDynamicsWorld_setForceUpdateAllAabbs_1=function(){return g.asm.pi.apply(null,arguments)},Ck=g._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=function(){return g.asm.qi.apply(null,arguments)},Dk=g._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=\nfunction(){return g.asm.ri.apply(null,arguments)},Ek=g._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=function(){return g.asm.si.apply(null,arguments)},Fk=g._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=function(){return g.asm.ti.apply(null,arguments)},Gk=g._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=function(){return g.asm.ui.apply(null,arguments)},Hk=g._emscripten_bind_btDispatcherInfo___destroy___0=function(){return g.asm.vi.apply(null,arguments)},Ik=g._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=\nfunction(){return g.asm.wi.apply(null,arguments)},Jk=g._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=function(){return g.asm.xi.apply(null,arguments)},Kk=g._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=function(){return g.asm.yi.apply(null,arguments)},Lk=g._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=function(){return g.asm.zi.apply(null,arguments)},Mk=g._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=function(){return g.asm.Ai.apply(null,\narguments)},Nk=g._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=function(){return g.asm.Bi.apply(null,arguments)},Ok=g._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=function(){return g.asm.Ci.apply(null,arguments)},Pk=g._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=function(){return g.asm.Di.apply(null,arguments)},Qk=g._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=function(){return g.asm.Ei.apply(null,arguments)},Rk=g._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=\nfunction(){return g.asm.Fi.apply(null,arguments)},Sk=g._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=function(){return g.asm.Gi.apply(null,arguments)},Tk=g._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=function(){return g.asm.Hi.apply(null,arguments)},Uk=g._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=function(){return g.asm.Ii.apply(null,arguments)},Vk=g._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=function(){return g.asm.Ji.apply(null,\narguments)},Wk=g._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=function(){return g.asm.Ki.apply(null,arguments)},Xk=g._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=function(){return g.asm.Li.apply(null,arguments)},Yk=g._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=function(){return g.asm.Mi.apply(null,arguments)},Zk=g._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=function(){return g.asm.Ni.apply(null,arguments)},$k=g._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=\nfunction(){return g.asm.Oi.apply(null,arguments)},al=g._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=function(){return g.asm.Pi.apply(null,arguments)},bl=g._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=function(){return g.asm.Qi.apply(null,arguments)},cl=g._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=function(){return g.asm.Ri.apply(null,arguments)},dl=g._emscripten_bind_btDispatcher___destroy___0=function(){return g.asm.Si.apply(null,arguments)},el=g._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=\nfunction(){return g.asm.Ti.apply(null,arguments)},fl=g._emscripten_bind_btDispatcher_getNumManifolds_0=function(){return g.asm.Ui.apply(null,arguments)},gl=g._emscripten_bind_btDynamicsWorld___destroy___0=function(){return g.asm.Vi.apply(null,arguments)},hl=g._emscripten_bind_btDynamicsWorld_addAction_1=function(){return g.asm.Wi.apply(null,arguments)},il=g._emscripten_bind_btDynamicsWorld_addCollisionObject_1=function(){return g.asm.Xi.apply(null,arguments)},jl=g._emscripten_bind_btDynamicsWorld_addCollisionObject_2=\nfunction(){return g.asm.Yi.apply(null,arguments)},kl=g._emscripten_bind_btDynamicsWorld_addCollisionObject_3=function(){return g.asm.Zi.apply(null,arguments)},ll=g._emscripten_bind_btDynamicsWorld_contactPairTest_3=function(){return g.asm._i.apply(null,arguments)},ml=g._emscripten_bind_btDynamicsWorld_contactTest_2=function(){return g.asm.$i.apply(null,arguments)},nl=g._emscripten_bind_btDynamicsWorld_convexSweepTest_5=function(){return g.asm.aj.apply(null,arguments)},ol=g._emscripten_bind_btDynamicsWorld_debugDrawObject_3=\nfunction(){return g.asm.bj.apply(null,arguments)},pl=g._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=function(){return g.asm.cj.apply(null,arguments)},ql=g._emscripten_bind_btDynamicsWorld_getBroadphase_0=function(){return g.asm.dj.apply(null,arguments)},rl=g._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=function(){return g.asm.ej.apply(null,arguments)},sl=g._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=function(){return g.asm.fj.apply(null,arguments)},tl=g._emscripten_bind_btDynamicsWorld_getDispatcher_0=\nfunction(){return g.asm.gj.apply(null,arguments)},ul=g._emscripten_bind_btDynamicsWorld_getPairCache_0=function(){return g.asm.hj.apply(null,arguments)},vl=g._emscripten_bind_btDynamicsWorld_getSolverInfo_0=function(){return g.asm.ij.apply(null,arguments)},wl=g._emscripten_bind_btDynamicsWorld_rayTest_3=function(){return g.asm.jj.apply(null,arguments)},xl=g._emscripten_bind_btDynamicsWorld_removeAction_1=function(){return g.asm.kj.apply(null,arguments)},yl=g._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=\nfunction(){return g.asm.lj.apply(null,arguments)},zl=g._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=function(){return g.asm.mj.apply(null,arguments)},Al=g._emscripten_bind_btDynamicsWorld_setForceUpdateAllAabbs_1=function(){return g.asm.nj.apply(null,arguments)},Bl=g._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=function(){return g.asm.oj.apply(null,arguments)},Cl=g._emscripten_bind_btEmptyShape___destroy___0=function(){return g.asm.pj.apply(null,arguments)},Dl=g._emscripten_bind_btEmptyShape_btEmptyShape_0=\nfunction(){return g.asm.qj.apply(null,arguments)},El=g._emscripten_bind_btEmptyShape_calculateLocalInertia_2=function(){return g.asm.rj.apply(null,arguments)},Fl=g._emscripten_bind_btEmptyShape_getLocalScaling_0=function(){return g.asm.sj.apply(null,arguments)},Gl=g._emscripten_bind_btEmptyShape_setLocalScaling_1=function(){return g.asm.tj.apply(null,arguments)},Hl=g._emscripten_bind_btFaceArray___destroy___0=function(){return g.asm.uj.apply(null,arguments)},Il=g._emscripten_bind_btFaceArray_at_1=\nfunction(){return g.asm.vj.apply(null,arguments)},Jl=g._emscripten_bind_btFaceArray_size_0=function(){return g.asm.wj.apply(null,arguments)},Kl=g._emscripten_bind_btFace___destroy___0=function(){return g.asm.xj.apply(null,arguments)},Ll=g._emscripten_bind_btFace_get_m_indices_0=function(){return g.asm.yj.apply(null,arguments)},Ml=g._emscripten_bind_btFace_get_m_plane_1=function(){return g.asm.zj.apply(null,arguments)},Nl=g._emscripten_bind_btFace_set_m_indices_1=function(){return g.asm.Aj.apply(null,\narguments)},Ol=g._emscripten_bind_btFace_set_m_plane_2=function(){return g.asm.Bj.apply(null,arguments)},Pl=g._emscripten_bind_btFixedConstraint___destroy___0=function(){return g.asm.Cj.apply(null,arguments)},Ql=g._emscripten_bind_btFixedConstraint_btFixedConstraint_4=function(){return g.asm.Dj.apply(null,arguments)},Rl=g._emscripten_bind_btFixedConstraint_enableFeedback_1=function(){return g.asm.Ej.apply(null,arguments)},Sl=g._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Fj.apply(null,\narguments)},Tl=g._emscripten_bind_btFixedConstraint_getParam_2=function(){return g.asm.Gj.apply(null,arguments)},Ul=g._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.Hj.apply(null,arguments)},Vl=g._emscripten_bind_btFixedConstraint_setParam_3=function(){return g.asm.Ij.apply(null,arguments)},Wl=g._emscripten_bind_btGeneric6DofConstraint___destroy___0=function(){return g.asm.Jj.apply(null,arguments)},Xl=g._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=\nfunction(){return g.asm.Kj.apply(null,arguments)},Yl=g._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=function(){return g.asm.Lj.apply(null,arguments)},Zl=g._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=function(){return g.asm.Mj.apply(null,arguments)},$l=g._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Nj.apply(null,arguments)},am=g._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=function(){return g.asm.Oj.apply(null,\narguments)},bm=g._emscripten_bind_btGeneric6DofConstraint_getParam_2=function(){return g.asm.Pj.apply(null,arguments)},cm=g._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=function(){return g.asm.Qj.apply(null,arguments)},dm=g._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=function(){return g.asm.Rj.apply(null,arguments)},em=g._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.Sj.apply(null,arguments)},fm=g._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=\nfunction(){return g.asm.Tj.apply(null,arguments)},gm=g._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=function(){return g.asm.Uj.apply(null,arguments)},hm=g._emscripten_bind_btGeneric6DofConstraint_setParam_3=function(){return g.asm.Vj.apply(null,arguments)},im=g._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=function(){return g.asm.Wj.apply(null,arguments)},jm=g._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=function(){return g.asm.Xj.apply(null,\narguments)},km=g._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=function(){return g.asm.Yj.apply(null,arguments)},lm=g._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=function(){return g.asm.Zj.apply(null,arguments)},mm=g._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=function(){return g.asm._j.apply(null,arguments)},nm=g._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.$j.apply(null,\narguments)},om=g._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=function(){return g.asm.ak.apply(null,arguments)},pm=g._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=function(){return g.asm.bk.apply(null,arguments)},qm=g._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=function(){return g.asm.ck.apply(null,arguments)},rm=g._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=function(){return g.asm.dk.apply(null,arguments)},sm=g._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=\nfunction(){return g.asm.ek.apply(null,arguments)},tm=g._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=function(){return g.asm.fk.apply(null,arguments)},um=g._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=function(){return g.asm.gk.apply(null,arguments)},wm=g._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=function(){return g.asm.hk.apply(null,arguments)},xm=g._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=function(){return g.asm.ik.apply(null,\narguments)},ym=g._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=function(){return g.asm.jk.apply(null,arguments)},zm=g._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=function(){return g.asm.kk.apply(null,arguments)},Am=g._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=function(){return g.asm.lk.apply(null,arguments)},Bm=g._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=function(){return g.asm.mk.apply(null,arguments)},Cm=g._emscripten_bind_btGhostObject___destroy___0=\nfunction(){return g.asm.nk.apply(null,arguments)},Dm=g._emscripten_bind_btGhostObject_activate_0=function(){return g.asm.ok.apply(null,arguments)},Em=g._emscripten_bind_btGhostObject_activate_1=function(){return g.asm.pk.apply(null,arguments)},Fm=g._emscripten_bind_btGhostObject_btGhostObject_0=function(){return g.asm.qk.apply(null,arguments)},Gm=g._emscripten_bind_btGhostObject_forceActivationState_1=function(){return g.asm.rk.apply(null,arguments)},Hm=g._emscripten_bind_btGhostObject_getBroadphaseHandle_0=\nfunction(){return g.asm.sk.apply(null,arguments)},Im=g._emscripten_bind_btGhostObject_getCollisionFlags_0=function(){return g.asm.tk.apply(null,arguments)},Jm=g._emscripten_bind_btGhostObject_getCollisionShape_0=function(){return g.asm.uk.apply(null,arguments)},Km=g._emscripten_bind_btGhostObject_getFriction_0=function(){return g.asm.vk.apply(null,arguments)},Lm=g._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=function(){return g.asm.wk.apply(null,arguments)},Mm=g._emscripten_bind_btGhostObject_getOverlappingObject_1=\nfunction(){return g.asm.xk.apply(null,arguments)},Nm=g._emscripten_bind_btGhostObject_getRestitution_0=function(){return g.asm.yk.apply(null,arguments)},Om=g._emscripten_bind_btGhostObject_getRollingFriction_0=function(){return g.asm.zk.apply(null,arguments)},Pm=g._emscripten_bind_btGhostObject_getUserIndex_0=function(){return g.asm.Ak.apply(null,arguments)},Qm=g._emscripten_bind_btGhostObject_getUserPointer_0=function(){return g.asm.Bk.apply(null,arguments)},Rm=g._emscripten_bind_btGhostObject_getWorldTransform_0=\nfunction(){return g.asm.Ck.apply(null,arguments)},Sm=g._emscripten_bind_btGhostObject_isActive_0=function(){return g.asm.Dk.apply(null,arguments)},Tm=g._emscripten_bind_btGhostObject_isKinematicObject_0=function(){return g.asm.Ek.apply(null,arguments)},Um=g._emscripten_bind_btGhostObject_isStaticObject_0=function(){return g.asm.Fk.apply(null,arguments)},Vm=g._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=function(){return g.asm.Gk.apply(null,arguments)},Wm=g._emscripten_bind_btGhostObject_setActivationState_1=\nfunction(){return g.asm.Hk.apply(null,arguments)},Xm=g._emscripten_bind_btGhostObject_setAnisotropicFriction_2=function(){return g.asm.Ik.apply(null,arguments)},Ym=g._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=function(){return g.asm.Jk.apply(null,arguments)},Zm=g._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=function(){return g.asm.Kk.apply(null,arguments)},$m=g._emscripten_bind_btGhostObject_setCollisionFlags_1=function(){return g.asm.Lk.apply(null,arguments)},an=g._emscripten_bind_btGhostObject_setCollisionShape_1=\nfunction(){return g.asm.Mk.apply(null,arguments)},bn=g._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=function(){return g.asm.Nk.apply(null,arguments)},cn=g._emscripten_bind_btGhostObject_setFriction_1=function(){return g.asm.Ok.apply(null,arguments)},dn=g._emscripten_bind_btGhostObject_setRestitution_1=function(){return g.asm.Pk.apply(null,arguments)},en=g._emscripten_bind_btGhostObject_setRollingFriction_1=function(){return g.asm.Qk.apply(null,arguments)},fn=g._emscripten_bind_btGhostObject_setUserIndex_1=\nfunction(){return g.asm.Rk.apply(null,arguments)},gn=g._emscripten_bind_btGhostObject_setUserPointer_1=function(){return g.asm.Sk.apply(null,arguments)},hn=g._emscripten_bind_btGhostObject_setWorldTransform_1=function(){return g.asm.Tk.apply(null,arguments)},jn=g._emscripten_bind_btGhostPairCallback___destroy___0=function(){return g.asm.Uk.apply(null,arguments)},kn=g._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=function(){return g.asm.Vk.apply(null,arguments)},ln=g._emscripten_bind_btHeightfieldTerrainShape___destroy___0=\nfunction(){return g.asm.Wk.apply(null,arguments)},mn=g._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=function(){return g.asm.Xk.apply(null,arguments)},nn=g._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=function(){return g.asm.Yk.apply(null,arguments)},on=g._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=function(){return g.asm.Zk.apply(null,arguments)},pn=g._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=function(){return g.asm._k.apply(null,\narguments)},qn=g._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=function(){return g.asm.$k.apply(null,arguments)},rn=g._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=function(){return g.asm.al.apply(null,arguments)},sn=g._emscripten_bind_btHingeConstraint___destroy___0=function(){return g.asm.bl.apply(null,arguments)},tn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_2=function(){return g.asm.cl.apply(null,arguments)},un=g._emscripten_bind_btHingeConstraint_btHingeConstraint_3=\nfunction(){return g.asm.dl.apply(null,arguments)},vn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_4=function(){return g.asm.el.apply(null,arguments)},wn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_5=function(){return g.asm.fl.apply(null,arguments)},xn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_6=function(){return g.asm.gl.apply(null,arguments)},yn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_7=function(){return g.asm.hl.apply(null,arguments)},zn=g._emscripten_bind_btHingeConstraint_enableAngularMotor_3=\nfunction(){return g.asm.il.apply(null,arguments)},An=g._emscripten_bind_btHingeConstraint_enableFeedback_1=function(){return g.asm.jl.apply(null,arguments)},Bn=g._emscripten_bind_btHingeConstraint_enableMotor_1=function(){return g.asm.kl.apply(null,arguments)},Cn=g._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.ll.apply(null,arguments)},Dn=g._emscripten_bind_btHingeConstraint_getParam_2=function(){return g.asm.ml.apply(null,arguments)},En=g._emscripten_bind_btHingeConstraint_setAngularOnly_1=\nfunction(){return g.asm.nl.apply(null,arguments)},Fn=g._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.ol.apply(null,arguments)},Gn=g._emscripten_bind_btHingeConstraint_setLimit_4=function(){return g.asm.pl.apply(null,arguments)},Hn=g._emscripten_bind_btHingeConstraint_setLimit_5=function(){return g.asm.ql.apply(null,arguments)},In=g._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=function(){return g.asm.rl.apply(null,arguments)},Jn=g._emscripten_bind_btHingeConstraint_setMotorTarget_2=\nfunction(){return g.asm.sl.apply(null,arguments)},Kn=g._emscripten_bind_btHingeConstraint_setParam_3=function(){return g.asm.tl.apply(null,arguments)},Ln=g._emscripten_bind_btIDebugDraw___destroy___0=function(){return g.asm.ul.apply(null,arguments)},Mn=g._emscripten_bind_btIDebugDraw_draw3dText_2=function(){return g.asm.vl.apply(null,arguments)},Nn=g._emscripten_bind_btIDebugDraw_drawContactPoint_5=function(){return g.asm.wl.apply(null,arguments)},On=g._emscripten_bind_btIDebugDraw_drawLine_3=function(){return g.asm.xl.apply(null,\narguments)},Pn=g._emscripten_bind_btIDebugDraw_getDebugMode_0=function(){return g.asm.yl.apply(null,arguments)},Qn=g._emscripten_bind_btIDebugDraw_reportErrorWarning_1=function(){return g.asm.zl.apply(null,arguments)},Rn=g._emscripten_bind_btIDebugDraw_setDebugMode_1=function(){return g.asm.Al.apply(null,arguments)},Sn=g._emscripten_bind_btIndexedMeshArray___destroy___0=function(){return g.asm.Bl.apply(null,arguments)},Tn=g._emscripten_bind_btIndexedMeshArray_at_1=function(){return g.asm.Cl.apply(null,\narguments)},Un=g._emscripten_bind_btIndexedMeshArray_size_0=function(){return g.asm.Dl.apply(null,arguments)},Vn=g._emscripten_bind_btIndexedMesh___destroy___0=function(){return g.asm.El.apply(null,arguments)},Wn=g._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=function(){return g.asm.Fl.apply(null,arguments)},Xn=g._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=function(){return g.asm.Gl.apply(null,arguments)},Yn=g._emscripten_bind_btIntArray___destroy___0=function(){return g.asm.Hl.apply(null,\narguments)},Zn=g._emscripten_bind_btIntArray_at_1=function(){return g.asm.Il.apply(null,arguments)},$n=g._emscripten_bind_btIntArray_size_0=function(){return g.asm.Jl.apply(null,arguments)},ao=g._emscripten_bind_btKinematicCharacterController___destroy___0=function(){return g.asm.Kl.apply(null,arguments)},bo=g._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=function(){return g.asm.Ll.apply(null,arguments)},co=g._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=\nfunction(){return g.asm.Ml.apply(null,arguments)},eo=g._emscripten_bind_btKinematicCharacterController_canJump_0=function(){return g.asm.Nl.apply(null,arguments)},fo=g._emscripten_bind_btKinematicCharacterController_getGhostObject_0=function(){return g.asm.Ol.apply(null,arguments)},go=g._emscripten_bind_btKinematicCharacterController_getGravity_0=function(){return g.asm.Pl.apply(null,arguments)},ho=g._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=function(){return g.asm.Ql.apply(null,\narguments)},io=g._emscripten_bind_btKinematicCharacterController_jump_0=function(){return g.asm.Rl.apply(null,arguments)},jo=g._emscripten_bind_btKinematicCharacterController_onGround_0=function(){return g.asm.Sl.apply(null,arguments)},ko=g._emscripten_bind_btKinematicCharacterController_playerStep_2=function(){return g.asm.Tl.apply(null,arguments)},lo=g._emscripten_bind_btKinematicCharacterController_preStep_1=function(){return g.asm.Ul.apply(null,arguments)},mo=g._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=\nfunction(){return g.asm.Vl.apply(null,arguments)},no=g._emscripten_bind_btKinematicCharacterController_setGravity_1=function(){return g.asm.Wl.apply(null,arguments)},oo=g._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=function(){return g.asm.Xl.apply(null,arguments)},po=g._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=function(){return g.asm.Yl.apply(null,arguments)},qo=g._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=function(){return g.asm.Zl.apply(null,\narguments)},ro=g._emscripten_bind_btKinematicCharacterController_setUpAxis_1=function(){return g.asm._l.apply(null,arguments)},so=g._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=function(){return g.asm.$l.apply(null,arguments)},to=g._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=function(){return g.asm.am.apply(null,arguments)},uo=g._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=function(){return g.asm.bm.apply(null,arguments)},\nvo=g._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=function(){return g.asm.cm.apply(null,arguments)},wo=g._emscripten_bind_btKinematicCharacterController_updateAction_2=function(){return g.asm.dm.apply(null,arguments)},xo=g._emscripten_bind_btKinematicCharacterController_warp_1=function(){return g.asm.em.apply(null,arguments)},yo=g._emscripten_bind_btManifoldPoint___destroy___0=function(){return g.asm.fm.apply(null,arguments)},zo=g._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=\nfunction(){return g.asm.gm.apply(null,arguments)},Ao=g._emscripten_bind_btManifoldPoint_getDistance_0=function(){return g.asm.hm.apply(null,arguments)},Bo=g._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=function(){return g.asm.im.apply(null,arguments)},Co=g._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=function(){return g.asm.jm.apply(null,arguments)},Do=g._emscripten_bind_btManifoldPoint_get_m_localPointA_0=function(){return g.asm.km.apply(null,arguments)},Eo=g._emscripten_bind_btManifoldPoint_get_m_localPointB_0=\nfunction(){return g.asm.lm.apply(null,arguments)},Fo=g._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=function(){return g.asm.mm.apply(null,arguments)},Go=g._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=function(){return g.asm.nm.apply(null,arguments)},Ho=g._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=function(){return g.asm.om.apply(null,arguments)},Io=g._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=function(){return g.asm.pm.apply(null,arguments)},\nJo=g._emscripten_bind_btManifoldPoint_set_m_localPointA_1=function(){return g.asm.qm.apply(null,arguments)},Ko=g._emscripten_bind_btManifoldPoint_set_m_localPointB_1=function(){return g.asm.rm.apply(null,arguments)},Lo=g._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=function(){return g.asm.sm.apply(null,arguments)},Mo=g._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=function(){return g.asm.tm.apply(null,arguments)},No=g._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=\nfunction(){return g.asm.um.apply(null,arguments)},Oo=g._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=function(){return g.asm.vm.apply(null,arguments)},Po=g._emscripten_bind_btMatrix3x3___destroy___0=function(){return g.asm.wm.apply(null,arguments)},Qo=g._emscripten_bind_btMatrix3x3_getRotation_1=function(){return g.asm.xm.apply(null,arguments)},Ro=g._emscripten_bind_btMatrix3x3_getRow_1=function(){return g.asm.ym.apply(null,arguments)},So=g._emscripten_bind_btMatrix3x3_setEulerZYX_3=\nfunction(){return g.asm.zm.apply(null,arguments)},To=g._emscripten_bind_btMotionState___destroy___0=function(){return g.asm.Am.apply(null,arguments)},Uo=g._emscripten_bind_btMotionState_getWorldTransform_1=function(){return g.asm.Bm.apply(null,arguments)},Vo=g._emscripten_bind_btMotionState_setWorldTransform_1=function(){return g.asm.Cm.apply(null,arguments)},Wo=g._emscripten_bind_btMultiSphereShape___destroy___0=function(){return g.asm.Dm.apply(null,arguments)},Xo=g._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=\nfunction(){return g.asm.Em.apply(null,arguments)},Yo=g._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=function(){return g.asm.Fm.apply(null,arguments)},Zo=g._emscripten_bind_btMultiSphereShape_getLocalScaling_0=function(){return g.asm.Gm.apply(null,arguments)},$o=g._emscripten_bind_btMultiSphereShape_setLocalScaling_1=function(){return g.asm.Hm.apply(null,arguments)},ap=g._emscripten_bind_btOverlappingPairCache___destroy___0=function(){return g.asm.Im.apply(null,arguments)},bp=g._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=\nfunction(){return g.asm.Jm.apply(null,arguments)},cp=g._emscripten_bind_btOverlappingPairCache_removeOverlappingPairsContainingProxy_2=function(){return g.asm.Km.apply(null,arguments)},dp=g._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=function(){return g.asm.Lm.apply(null,arguments)},ep=g._emscripten_bind_btOverlappingPairCallback___destroy___0=function(){return g.asm.Mm.apply(null,arguments)},fp=g._emscripten_bind_btPairCachingGhostObject___destroy___0=function(){return g.asm.Nm.apply(null,\narguments)},gp=g._emscripten_bind_btPairCachingGhostObject_activate_0=function(){return g.asm.Om.apply(null,arguments)},hp=g._emscripten_bind_btPairCachingGhostObject_activate_1=function(){return g.asm.Pm.apply(null,arguments)},ip=g._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=function(){return g.asm.Qm.apply(null,arguments)},jp=g._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=function(){return g.asm.Rm.apply(null,arguments)},kp=g._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=\nfunction(){return g.asm.Sm.apply(null,arguments)},lp=g._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=function(){return g.asm.Tm.apply(null,arguments)},mp=g._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=function(){return g.asm.Um.apply(null,arguments)},np=g._emscripten_bind_btPairCachingGhostObject_getFriction_0=function(){return g.asm.Vm.apply(null,arguments)},op=g._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=function(){return g.asm.Wm.apply(null,\narguments)},pp=g._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=function(){return g.asm.Xm.apply(null,arguments)},qp=g._emscripten_bind_btPairCachingGhostObject_getRestitution_0=function(){return g.asm.Ym.apply(null,arguments)},rp=g._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=function(){return g.asm.Zm.apply(null,arguments)},sp=g._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=function(){return g.asm._m.apply(null,arguments)},tp=g._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=\nfunction(){return g.asm.$m.apply(null,arguments)},up=g._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=function(){return g.asm.an.apply(null,arguments)},vp=g._emscripten_bind_btPairCachingGhostObject_isActive_0=function(){return g.asm.bn.apply(null,arguments)},wp=g._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=function(){return g.asm.cn.apply(null,arguments)},xp=g._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=function(){return g.asm.dn.apply(null,arguments)},\nyp=g._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=function(){return g.asm.en.apply(null,arguments)},zp=g._emscripten_bind_btPairCachingGhostObject_setActivationState_1=function(){return g.asm.fn.apply(null,arguments)},Ap=g._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=function(){return g.asm.gn.apply(null,arguments)},Bp=g._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=function(){return g.asm.hn.apply(null,arguments)},Cp=g._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=\nfunction(){return g.asm.jn.apply(null,arguments)},Dp=g._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=function(){return g.asm.kn.apply(null,arguments)},Ep=g._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=function(){return g.asm.ln.apply(null,arguments)},Fp=g._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=function(){return g.asm.mn.apply(null,arguments)},Gp=g._emscripten_bind_btPairCachingGhostObject_setFriction_1=function(){return g.asm.nn.apply(null,\narguments)},Hp=g._emscripten_bind_btPairCachingGhostObject_setRestitution_1=function(){return g.asm.on.apply(null,arguments)},Ip=g._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=function(){return g.asm.pn.apply(null,arguments)},Jp=g._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=function(){return g.asm.qn.apply(null,arguments)},Kp=g._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=function(){return g.asm.rn.apply(null,arguments)},Lp=g._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=\nfunction(){return g.asm.sn.apply(null,arguments)},Mp=g._emscripten_bind_btPersistentManifold___destroy___0=function(){return g.asm.tn.apply(null,arguments)},Np=g._emscripten_bind_btPersistentManifold_btPersistentManifold_0=function(){return g.asm.un.apply(null,arguments)},Op=g._emscripten_bind_btPersistentManifold_getBody0_0=function(){return g.asm.vn.apply(null,arguments)},Pp=g._emscripten_bind_btPersistentManifold_getBody1_0=function(){return g.asm.wn.apply(null,arguments)},Qp=g._emscripten_bind_btPersistentManifold_getContactPoint_1=\nfunction(){return g.asm.xn.apply(null,arguments)},Rp=g._emscripten_bind_btPersistentManifold_getNumContacts_0=function(){return g.asm.yn.apply(null,arguments)},Sp=g._emscripten_bind_btPoint2PointConstraint___destroy___0=function(){return g.asm.zn.apply(null,arguments)},Tp=g._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=function(){return g.asm.An.apply(null,arguments)},Up=g._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=function(){return g.asm.Bn.apply(null,\narguments)},Vp=g._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=function(){return g.asm.Cn.apply(null,arguments)},Wp=g._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Dn.apply(null,arguments)},Xp=g._emscripten_bind_btPoint2PointConstraint_getParam_2=function(){return g.asm.En.apply(null,arguments)},Yp=g._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=function(){return g.asm.Fn.apply(null,arguments)},Zp=g._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=\nfunction(){return g.asm.Gn.apply(null,arguments)},$p=g._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=function(){return g.asm.Hn.apply(null,arguments)},aq=g._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.In.apply(null,arguments)},bq=g._emscripten_bind_btPoint2PointConstraint_setParam_3=function(){return g.asm.Jn.apply(null,arguments)},cq=g._emscripten_bind_btPoint2PointConstraint_setPivotA_1=function(){return g.asm.Kn.apply(null,arguments)},\ndq=g._emscripten_bind_btPoint2PointConstraint_setPivotB_1=function(){return g.asm.Ln.apply(null,arguments)},eq=g._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=function(){return g.asm.Mn.apply(null,arguments)},fq=g._emscripten_bind_btQuadWord___destroy___0=function(){return g.asm.Nn.apply(null,arguments)},gq=g._emscripten_bind_btQuadWord_setW_1=function(){return g.asm.On.apply(null,arguments)},hq=g._emscripten_bind_btQuadWord_setX_1=function(){return g.asm.Pn.apply(null,arguments)},iq=g._emscripten_bind_btQuadWord_setY_1=\nfunction(){return g.asm.Qn.apply(null,arguments)},jq=g._emscripten_bind_btQuadWord_setZ_1=function(){return g.asm.Rn.apply(null,arguments)},kq=g._emscripten_bind_btQuadWord_w_0=function(){return g.asm.Sn.apply(null,arguments)},lq=g._emscripten_bind_btQuadWord_x_0=function(){return g.asm.Tn.apply(null,arguments)},mq=g._emscripten_bind_btQuadWord_y_0=function(){return g.asm.Un.apply(null,arguments)},nq=g._emscripten_bind_btQuadWord_z_0=function(){return g.asm.Vn.apply(null,arguments)},oq=g._emscripten_bind_btQuaternion___destroy___0=\nfunction(){return g.asm.Wn.apply(null,arguments)},pq=g._emscripten_bind_btQuaternion_angleShortestPath_1=function(){return g.asm.Xn.apply(null,arguments)},qq=g._emscripten_bind_btQuaternion_angle_1=function(){return g.asm.Yn.apply(null,arguments)},rq=g._emscripten_bind_btQuaternion_btQuaternion_4=function(){return g.asm.Zn.apply(null,arguments)},sq=g._emscripten_bind_btQuaternion_dot_1=function(){return g.asm._n.apply(null,arguments)},tq=g._emscripten_bind_btQuaternion_getAngleShortestPath_0=function(){return g.asm.$n.apply(null,\narguments)},uq=g._emscripten_bind_btQuaternion_getAngle_0=function(){return g.asm.ao.apply(null,arguments)},vq=g._emscripten_bind_btQuaternion_getAxis_0=function(){return g.asm.bo.apply(null,arguments)},wq=g._emscripten_bind_btQuaternion_inverse_0=function(){return g.asm.co.apply(null,arguments)},xq=g._emscripten_bind_btQuaternion_length2_0=function(){return g.asm.eo.apply(null,arguments)},yq=g._emscripten_bind_btQuaternion_length_0=function(){return g.asm.fo.apply(null,arguments)},zq=g._emscripten_bind_btQuaternion_normalize_0=\nfunction(){return g.asm.go.apply(null,arguments)},Aq=g._emscripten_bind_btQuaternion_normalized_0=function(){return g.asm.ho.apply(null,arguments)},Bq=g._emscripten_bind_btQuaternion_op_add_1=function(){return g.asm.io.apply(null,arguments)},Cq=g._emscripten_bind_btQuaternion_op_div_1=function(){return g.asm.jo.apply(null,arguments)},Dq=g._emscripten_bind_btQuaternion_op_mul_1=function(){return g.asm.ko.apply(null,arguments)},Eq=g._emscripten_bind_btQuaternion_op_mulq_1=function(){return g.asm.lo.apply(null,\narguments)},Fq=g._emscripten_bind_btQuaternion_op_sub_1=function(){return g.asm.mo.apply(null,arguments)},Gq=g._emscripten_bind_btQuaternion_setEulerZYX_3=function(){return g.asm.no.apply(null,arguments)},Hq=g._emscripten_bind_btQuaternion_setRotation_2=function(){return g.asm.oo.apply(null,arguments)},Iq=g._emscripten_bind_btQuaternion_setValue_4=function(){return g.asm.po.apply(null,arguments)},Jq=g._emscripten_bind_btQuaternion_setW_1=function(){return g.asm.qo.apply(null,arguments)},Kq=g._emscripten_bind_btQuaternion_setX_1=\nfunction(){return g.asm.ro.apply(null,arguments)},Lq=g._emscripten_bind_btQuaternion_setY_1=function(){return g.asm.so.apply(null,arguments)},Mq=g._emscripten_bind_btQuaternion_setZ_1=function(){return g.asm.to.apply(null,arguments)},Nq=g._emscripten_bind_btQuaternion_w_0=function(){return g.asm.uo.apply(null,arguments)},Oq=g._emscripten_bind_btQuaternion_x_0=function(){return g.asm.vo.apply(null,arguments)},Pq=g._emscripten_bind_btQuaternion_y_0=function(){return g.asm.wo.apply(null,arguments)},\nQq=g._emscripten_bind_btQuaternion_z_0=function(){return g.asm.xo.apply(null,arguments)},Rq=g._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=function(){return g.asm.yo.apply(null,arguments)},Sq=g._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=function(){return g.asm.zo.apply(null,arguments)},Tq=g._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=function(){return g.asm.Ao.apply(null,arguments)},Uq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=\nfunction(){return g.asm.Bo.apply(null,arguments)},Vq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=function(){return g.asm.Co.apply(null,arguments)},Wq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=function(){return g.asm.Do.apply(null,arguments)},Xq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=function(){return g.asm.Eo.apply(null,arguments)},Yq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=\nfunction(){return g.asm.Fo.apply(null,arguments)},Zq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=function(){return g.asm.Go.apply(null,arguments)},$q=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=function(){return g.asm.Ho.apply(null,arguments)},ar=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=function(){return g.asm.Io.apply(null,arguments)},br=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=function(){return g.asm.Jo.apply(null,\narguments)},cr=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=function(){return g.asm.Ko.apply(null,arguments)},dr=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=function(){return g.asm.Lo.apply(null,arguments)},er=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=function(){return g.asm.Mo.apply(null,arguments)},fr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=function(){return g.asm.No.apply(null,\narguments)},gr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=function(){return g.asm.Oo.apply(null,arguments)},hr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=function(){return g.asm.Po.apply(null,arguments)},ir=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=function(){return g.asm.Qo.apply(null,arguments)},jr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=\nfunction(){return g.asm.Ro.apply(null,arguments)},kr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=function(){return g.asm.So.apply(null,arguments)},lr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=function(){return g.asm.To.apply(null,arguments)},mr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=function(){return g.asm.Uo.apply(null,arguments)},nr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=function(){return g.asm.Vo.apply(null,\narguments)},or=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=function(){return g.asm.Wo.apply(null,arguments)},pr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=function(){return g.asm.Xo.apply(null,arguments)},qr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=function(){return g.asm.Yo.apply(null,arguments)},rr=g._emscripten_bind_btRigidBody___destroy___0=function(){return g.asm.Zo.apply(null,arguments)},sr=g._emscripten_bind_btRigidBody_activate_0=\nfunction(){return g.asm._o.apply(null,arguments)},tr=g._emscripten_bind_btRigidBody_activate_1=function(){return g.asm.$o.apply(null,arguments)},ur=g._emscripten_bind_btRigidBody_applyCentralForce_1=function(){return g.asm.ap.apply(null,arguments)},vr=g._emscripten_bind_btRigidBody_applyCentralImpulse_1=function(){return g.asm.bp.apply(null,arguments)},wr=g._emscripten_bind_btRigidBody_applyCentralLocalForce_1=function(){return g.asm.cp.apply(null,arguments)},xr=g._emscripten_bind_btRigidBody_applyForce_2=\nfunction(){return g.asm.dp.apply(null,arguments)},yr=g._emscripten_bind_btRigidBody_applyGravity_0=function(){return g.asm.ep.apply(null,arguments)},zr=g._emscripten_bind_btRigidBody_applyImpulse_2=function(){return g.asm.fp.apply(null,arguments)},Ar=g._emscripten_bind_btRigidBody_applyLocalTorque_1=function(){return g.asm.gp.apply(null,arguments)},Br=g._emscripten_bind_btRigidBody_applyTorqueImpulse_1=function(){return g.asm.hp.apply(null,arguments)},Cr=g._emscripten_bind_btRigidBody_applyTorque_1=\nfunction(){return g.asm.ip.apply(null,arguments)},Dr=g._emscripten_bind_btRigidBody_btRigidBody_1=function(){return g.asm.jp.apply(null,arguments)},Er=g._emscripten_bind_btRigidBody_forceActivationState_1=function(){return g.asm.kp.apply(null,arguments)},Fr=g._emscripten_bind_btRigidBody_getAabb_2=function(){return g.asm.lp.apply(null,arguments)},Gr=g._emscripten_bind_btRigidBody_getAngularDamping_0=function(){return g.asm.mp.apply(null,arguments)},Hr=g._emscripten_bind_btRigidBody_getAngularFactor_0=\nfunction(){return g.asm.np.apply(null,arguments)},Ir=g._emscripten_bind_btRigidBody_getAngularVelocity_0=function(){return g.asm.op.apply(null,arguments)},Jr=g._emscripten_bind_btRigidBody_getBroadphaseHandle_0=function(){return g.asm.pp.apply(null,arguments)},Kr=g._emscripten_bind_btRigidBody_getBroadphaseProxy_0=function(){return g.asm.qp.apply(null,arguments)},Lr=g._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=function(){return g.asm.rp.apply(null,arguments)},Mr=g._emscripten_bind_btRigidBody_getCollisionFlags_0=\nfunction(){return g.asm.sp.apply(null,arguments)},Nr=g._emscripten_bind_btRigidBody_getCollisionShape_0=function(){return g.asm.tp.apply(null,arguments)},Or=g._emscripten_bind_btRigidBody_getFlags_0=function(){return g.asm.up.apply(null,arguments)},Pr=g._emscripten_bind_btRigidBody_getFriction_0=function(){return g.asm.vp.apply(null,arguments)},Qr=g._emscripten_bind_btRigidBody_getGravity_0=function(){return g.asm.wp.apply(null,arguments)},Rr=g._emscripten_bind_btRigidBody_getLinearDamping_0=function(){return g.asm.xp.apply(null,\narguments)},Sr=g._emscripten_bind_btRigidBody_getLinearFactor_0=function(){return g.asm.yp.apply(null,arguments)},Tr=g._emscripten_bind_btRigidBody_getLinearVelocity_0=function(){return g.asm.zp.apply(null,arguments)},Ur=g._emscripten_bind_btRigidBody_getMotionState_0=function(){return g.asm.Ap.apply(null,arguments)},Vr=g._emscripten_bind_btRigidBody_getRestitution_0=function(){return g.asm.Bp.apply(null,arguments)},Wr=g._emscripten_bind_btRigidBody_getRollingFriction_0=function(){return g.asm.Cp.apply(null,\narguments)},Xr=g._emscripten_bind_btRigidBody_getUserIndex_0=function(){return g.asm.Dp.apply(null,arguments)},Yr=g._emscripten_bind_btRigidBody_getUserPointer_0=function(){return g.asm.Ep.apply(null,arguments)},Zr=g._emscripten_bind_btRigidBody_getWorldTransform_0=function(){return g.asm.Fp.apply(null,arguments)},$r=g._emscripten_bind_btRigidBody_isActive_0=function(){return g.asm.Gp.apply(null,arguments)},as=g._emscripten_bind_btRigidBody_isKinematicObject_0=function(){return g.asm.Hp.apply(null,\narguments)},bs=g._emscripten_bind_btRigidBody_isStaticObject_0=function(){return g.asm.Ip.apply(null,arguments)},cs=g._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=function(){return g.asm.Jp.apply(null,arguments)},ds=g._emscripten_bind_btRigidBody_setActivationState_1=function(){return g.asm.Kp.apply(null,arguments)},es=g._emscripten_bind_btRigidBody_setAngularFactor_1=function(){return g.asm.Lp.apply(null,arguments)},gs=g._emscripten_bind_btRigidBody_setAngularVelocity_1=function(){return g.asm.Mp.apply(null,\narguments)},hs=g._emscripten_bind_btRigidBody_setAnisotropicFriction_2=function(){return g.asm.Np.apply(null,arguments)},is=g._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=function(){return g.asm.Op.apply(null,arguments)},js=g._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=function(){return g.asm.Pp.apply(null,arguments)},ks=g._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=function(){return g.asm.Qp.apply(null,arguments)},ls=g._emscripten_bind_btRigidBody_setCollisionFlags_1=\nfunction(){return g.asm.Rp.apply(null,arguments)},ms=g._emscripten_bind_btRigidBody_setCollisionShape_1=function(){return g.asm.Sp.apply(null,arguments)},ns=g._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=function(){return g.asm.Tp.apply(null,arguments)},ps=g._emscripten_bind_btRigidBody_setDamping_2=function(){return g.asm.Up.apply(null,arguments)},qs=g._emscripten_bind_btRigidBody_setFlags_1=function(){return g.asm.Vp.apply(null,arguments)},rs=g._emscripten_bind_btRigidBody_setFriction_1=\nfunction(){return g.asm.Wp.apply(null,arguments)},ss=g._emscripten_bind_btRigidBody_setGravity_1=function(){return g.asm.Xp.apply(null,arguments)},ts=g._emscripten_bind_btRigidBody_setLinearFactor_1=function(){return g.asm.Yp.apply(null,arguments)},us=g._emscripten_bind_btRigidBody_setLinearVelocity_1=function(){return g.asm.Zp.apply(null,arguments)},vs=g._emscripten_bind_btRigidBody_setMassProps_2=function(){return g.asm._p.apply(null,arguments)},xs=g._emscripten_bind_btRigidBody_setMotionState_1=\nfunction(){return g.asm.$p.apply(null,arguments)},ys=g._emscripten_bind_btRigidBody_setRestitution_1=function(){return g.asm.aq.apply(null,arguments)},zs=g._emscripten_bind_btRigidBody_setRollingFriction_1=function(){return g.asm.bq.apply(null,arguments)},As=g._emscripten_bind_btRigidBody_setSleepingThresholds_2=function(){return g.asm.cq.apply(null,arguments)},Bs=g._emscripten_bind_btRigidBody_setUserIndex_1=function(){return g.asm.dq.apply(null,arguments)},Cs=g._emscripten_bind_btRigidBody_setUserPointer_1=\nfunction(){return g.asm.eq.apply(null,arguments)},Ds=g._emscripten_bind_btRigidBody_setWorldTransform_1=function(){return g.asm.fq.apply(null,arguments)},Es=g._emscripten_bind_btRigidBody_upcast_1=function(){return g.asm.gq.apply(null,arguments)},Fs=g._emscripten_bind_btRigidBody_updateInertiaTensor_0=function(){return g.asm.hq.apply(null,arguments)},Gs=g._emscripten_bind_btScalarArray___destroy___0=function(){return g.asm.iq.apply(null,arguments)},Hs=g._emscripten_bind_btScalarArray_at_1=function(){return g.asm.jq.apply(null,\narguments)},Is=g._emscripten_bind_btScalarArray_size_0=function(){return g.asm.kq.apply(null,arguments)},Js=g._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=function(){return g.asm.lq.apply(null,arguments)},Ks=g._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=function(){return g.asm.mq.apply(null,arguments)},Ls=g._emscripten_bind_btShapeHull___destroy___0=function(){return g.asm.nq.apply(null,arguments)},Ms=g._emscripten_bind_btShapeHull_btShapeHull_1=\nfunction(){return g.asm.oq.apply(null,arguments)},Ns=g._emscripten_bind_btShapeHull_buildHull_1=function(){return g.asm.pq.apply(null,arguments)},Os=g._emscripten_bind_btShapeHull_getVertexPointer_0=function(){return g.asm.qq.apply(null,arguments)},Ps=g._emscripten_bind_btShapeHull_numVertices_0=function(){return g.asm.rq.apply(null,arguments)},Qs=g._emscripten_bind_btSliderConstraint___destroy___0=function(){return g.asm.sq.apply(null,arguments)},Rs=g._emscripten_bind_btSliderConstraint_btSliderConstraint_3=\nfunction(){return g.asm.tq.apply(null,arguments)},Ss=g._emscripten_bind_btSliderConstraint_btSliderConstraint_5=function(){return g.asm.uq.apply(null,arguments)},Ts=g._emscripten_bind_btSliderConstraint_enableFeedback_1=function(){return g.asm.vq.apply(null,arguments)},Us=g._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.wq.apply(null,arguments)},Vs=g._emscripten_bind_btSliderConstraint_getParam_2=function(){return g.asm.xq.apply(null,arguments)},Ws=g._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=\nfunction(){return g.asm.yq.apply(null,arguments)},Xs=g._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=function(){return g.asm.zq.apply(null,arguments)},Ys=g._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=function(){return g.asm.Aq.apply(null,arguments)},Zs=g._emscripten_bind_btSliderConstraint_setParam_3=function(){return g.asm.Bq.apply(null,arguments)},$s=g._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=function(){return g.asm.Cq.apply(null,arguments)},at=g._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=\nfunction(){return g.asm.Dq.apply(null,arguments)},bt=g._emscripten_bind_btSphereShape___destroy___0=function(){return g.asm.Eq.apply(null,arguments)},ct=g._emscripten_bind_btSphereShape_btSphereShape_1=function(){return g.asm.Fq.apply(null,arguments)},dt=g._emscripten_bind_btSphereShape_calculateLocalInertia_2=function(){return g.asm.Gq.apply(null,arguments)},et=g._emscripten_bind_btSphereShape_getLocalScaling_0=function(){return g.asm.Hq.apply(null,arguments)},ft=g._emscripten_bind_btSphereShape_getMargin_0=\nfunction(){return g.asm.Iq.apply(null,arguments)},gt=g._emscripten_bind_btSphereShape_setLocalScaling_1=function(){return g.asm.Jq.apply(null,arguments)},ht=g._emscripten_bind_btSphereShape_setMargin_1=function(){return g.asm.Kq.apply(null,arguments)},it=g._emscripten_bind_btStaticPlaneShape___destroy___0=function(){return g.asm.Lq.apply(null,arguments)},jt=g._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=function(){return g.asm.Mq.apply(null,arguments)},kt=g._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=\nfunction(){return g.asm.Nq.apply(null,arguments)},lt=g._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=function(){return g.asm.Oq.apply(null,arguments)},mt=g._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=function(){return g.asm.Pq.apply(null,arguments)},nt=g._emscripten_bind_btStridingMeshInterface___destroy___0=function(){return g.asm.Qq.apply(null,arguments)},ot=g._emscripten_bind_btStridingMeshInterface_setScaling_1=function(){return g.asm.Rq.apply(null,arguments)},pt=g._emscripten_bind_btTransform___destroy___0=\nfunction(){return g.asm.Sq.apply(null,arguments)},qt=g._emscripten_bind_btTransform_btTransform_0=function(){return g.asm.Tq.apply(null,arguments)},rt=g._emscripten_bind_btTransform_btTransform_2=function(){return g.asm.Uq.apply(null,arguments)},st=g._emscripten_bind_btTransform_getBasis_0=function(){return g.asm.Vq.apply(null,arguments)},tt=g._emscripten_bind_btTransform_getOrigin_0=function(){return g.asm.Wq.apply(null,arguments)},ut=g._emscripten_bind_btTransform_getRotation_0=function(){return g.asm.Xq.apply(null,\narguments)},vt=g._emscripten_bind_btTransform_inverse_0=function(){return g.asm.Yq.apply(null,arguments)},wt=g._emscripten_bind_btTransform_op_mul_1=function(){return g.asm.Zq.apply(null,arguments)},xt=g._emscripten_bind_btTransform_setFromOpenGLMatrix_1=function(){return g.asm._q.apply(null,arguments)},yt=g._emscripten_bind_btTransform_setIdentity_0=function(){return g.asm.$q.apply(null,arguments)},zt=g._emscripten_bind_btTransform_setOrigin_1=function(){return g.asm.ar.apply(null,arguments)},At=\ng._emscripten_bind_btTransform_setRotation_1=function(){return g.asm.br.apply(null,arguments)},Bt=g._emscripten_bind_btTriangleMeshShape___destroy___0=function(){return g.asm.cr.apply(null,arguments)},Ct=g._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=function(){return g.asm.dr.apply(null,arguments)},Dt=g._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=function(){return g.asm.er.apply(null,arguments)},Et=g._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=function(){return g.asm.fr.apply(null,\narguments)},Ft=g._emscripten_bind_btTriangleMesh___destroy___0=function(){return g.asm.gr.apply(null,arguments)},Gt=g._emscripten_bind_btTriangleMesh_addIndex_1=function(){return g.asm.hr.apply(null,arguments)},Ht=g._emscripten_bind_btTriangleMesh_addTriangle_3=function(){return g.asm.ir.apply(null,arguments)},It=g._emscripten_bind_btTriangleMesh_addTriangle_4=function(){return g.asm.jr.apply(null,arguments)},Jt=g._emscripten_bind_btTriangleMesh_btTriangleMesh_0=function(){return g.asm.kr.apply(null,\narguments)},Kt=g._emscripten_bind_btTriangleMesh_btTriangleMesh_1=function(){return g.asm.lr.apply(null,arguments)},Lt=g._emscripten_bind_btTriangleMesh_btTriangleMesh_2=function(){return g.asm.mr.apply(null,arguments)},Mt=g._emscripten_bind_btTriangleMesh_findOrAddVertex_2=function(){return g.asm.nr.apply(null,arguments)},Nt=g._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=function(){return g.asm.or.apply(null,arguments)},Ot=g._emscripten_bind_btTriangleMesh_setScaling_1=function(){return g.asm.pr.apply(null,\narguments)},Pt=g._emscripten_bind_btTypedConstraint___destroy___0=function(){return g.asm.qr.apply(null,arguments)},Qt=g._emscripten_bind_btTypedConstraint_enableFeedback_1=function(){return g.asm.rr.apply(null,arguments)},Rt=g._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.sr.apply(null,arguments)},St=g._emscripten_bind_btTypedConstraint_getParam_2=function(){return g.asm.tr.apply(null,arguments)},Tt=g._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=\nfunction(){return g.asm.ur.apply(null,arguments)},Ut=g._emscripten_bind_btTypedConstraint_setParam_3=function(){return g.asm.vr.apply(null,arguments)},Vt=g._emscripten_bind_btVector3Array___destroy___0=function(){return g.asm.wr.apply(null,arguments)},Wt=g._emscripten_bind_btVector3Array_at_1=function(){return g.asm.xr.apply(null,arguments)},Xt=g._emscripten_bind_btVector3Array_size_0=function(){return g.asm.yr.apply(null,arguments)},Yt=g._emscripten_bind_btVector3___destroy___0=function(){return g.asm.zr.apply(null,\narguments)},Zt=g._emscripten_bind_btVector3_btVector3_0=function(){return g.asm.Ar.apply(null,arguments)},$t=g._emscripten_bind_btVector3_btVector3_3=function(){return g.asm.Br.apply(null,arguments)},au=g._emscripten_bind_btVector3_dot_1=function(){return g.asm.Cr.apply(null,arguments)},bu=g._emscripten_bind_btVector3_length2_0=function(){return g.asm.Dr.apply(null,arguments)},cu=g._emscripten_bind_btVector3_length_0=function(){return g.asm.Er.apply(null,arguments)},du=g._emscripten_bind_btVector3_normalize_0=\nfunction(){return g.asm.Fr.apply(null,arguments)},eu=g._emscripten_bind_btVector3_op_add_1=function(){return g.asm.Gr.apply(null,arguments)},fu=g._emscripten_bind_btVector3_op_mul_1=function(){return g.asm.Hr.apply(null,arguments)},gu=g._emscripten_bind_btVector3_op_sub_1=function(){return g.asm.Ir.apply(null,arguments)},hu=g._emscripten_bind_btVector3_rotate_2=function(){return g.asm.Jr.apply(null,arguments)},iu=g._emscripten_bind_btVector3_setValue_3=function(){return g.asm.Kr.apply(null,arguments)},\nju=g._emscripten_bind_btVector3_setX_1=function(){return g.asm.Lr.apply(null,arguments)},ku=g._emscripten_bind_btVector3_setY_1=function(){return g.asm.Mr.apply(null,arguments)},lu=g._emscripten_bind_btVector3_setZ_1=function(){return g.asm.Nr.apply(null,arguments)},mu=g._emscripten_bind_btVector3_x_0=function(){return g.asm.Or.apply(null,arguments)},nu=g._emscripten_bind_btVector3_y_0=function(){return g.asm.Pr.apply(null,arguments)},ou=g._emscripten_bind_btVector3_z_0=function(){return g.asm.Qr.apply(null,\narguments)},pu=g._emscripten_bind_btVector4___destroy___0=function(){return g.asm.Rr.apply(null,arguments)},qu=g._emscripten_bind_btVector4_btVector4_0=function(){return g.asm.Sr.apply(null,arguments)},ru=g._emscripten_bind_btVector4_btVector4_4=function(){return g.asm.Tr.apply(null,arguments)},su=g._emscripten_bind_btVector4_dot_1=function(){return g.asm.Ur.apply(null,arguments)},tu=g._emscripten_bind_btVector4_length2_0=function(){return g.asm.Vr.apply(null,arguments)},uu=g._emscripten_bind_btVector4_length_0=\nfunction(){return g.asm.Wr.apply(null,arguments)},vu=g._emscripten_bind_btVector4_normalize_0=function(){return g.asm.Xr.apply(null,arguments)},wu=g._emscripten_bind_btVector4_op_add_1=function(){return g.asm.Yr.apply(null,arguments)},xu=g._emscripten_bind_btVector4_op_mul_1=function(){return g.asm.Zr.apply(null,arguments)},yu=g._emscripten_bind_btVector4_op_sub_1=function(){return g.asm._r.apply(null,arguments)},zu=g._emscripten_bind_btVector4_rotate_2=function(){return g.asm.$r.apply(null,arguments)},\nAu=g._emscripten_bind_btVector4_setValue_4=function(){return g.asm.as.apply(null,arguments)},Bu=g._emscripten_bind_btVector4_setX_1=function(){return g.asm.bs.apply(null,arguments)},Cu=g._emscripten_bind_btVector4_setY_1=function(){return g.asm.cs.apply(null,arguments)},Du=g._emscripten_bind_btVector4_setZ_1=function(){return g.asm.ds.apply(null,arguments)},Eu=g._emscripten_bind_btVector4_w_0=function(){return g.asm.es.apply(null,arguments)},Fu=g._emscripten_bind_btVector4_x_0=function(){return g.asm.fs.apply(null,\narguments)},Gu=g._emscripten_bind_btVector4_y_0=function(){return g.asm.gs.apply(null,arguments)},Hu=g._emscripten_bind_btVector4_z_0=function(){return g.asm.hs.apply(null,arguments)},Iu=g._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=function(){return g.asm.is.apply(null,arguments)},Ju=g._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=function(){return g.asm.js.apply(null,arguments)},Ku=g._emscripten_enum_PHY_ScalarType_PHY_FLOAT=function(){return g.asm.ks.apply(null,arguments)},Lu=g._emscripten_enum_PHY_ScalarType_PHY_INTEGER=\nfunction(){return g.asm.ls.apply(null,arguments)},Mu=g._emscripten_enum_PHY_ScalarType_PHY_SHORT=function(){return g.asm.ms.apply(null,arguments)},Nu=g._emscripten_enum_PHY_ScalarType_PHY_UCHAR=function(){return g.asm.ns.apply(null,arguments)},Ou=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=function(){return g.asm.os.apply(null,arguments)},Pu=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=function(){return g.asm.ps.apply(null,arguments)},Qu=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=\nfunction(){return g.asm.qs.apply(null,arguments)},Ru=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=function(){return g.asm.rs.apply(null,arguments)},qb=g._free=function(){return g.asm.ss.apply(null,arguments)},rb=g._malloc=function(){return g.asm.ts.apply(null,arguments)},cb=g.globalCtors=function(){return g.asm.ws.apply(null,arguments)},Cb=g.stackRestore=function(){return g.asm.xs.apply(null,arguments)},tb=g.stackSave=function(){return g.asm.ys.apply(null,arguments)};\ng.dynCall_v=function(){return g.asm.us.apply(null,arguments)};g.dynCall_vi=function(){return g.asm.vs.apply(null,arguments)};g.asm=Db;g.UTF8ToString=za;var Su;g.then=function(a){if(Su)a(g);else{var c=g.onRuntimeInitialized;g.onRuntimeInitialized=function(){c&&c();a(g)}}return g};Va=function Tu(){Su||Uu();Su||(Va=Tu)};\nfunction Uu(){function a(){if(!Su&&(Su=!0,!wa)){Pa=!0;Ka(Ma);Ka(Na);if(g.onRuntimeInitialized)g.onRuntimeInitialized();if(g.postRun)for(\"function\"==typeof g.postRun&&(g.postRun=[g.postRun]);g.postRun.length;){var a=g.postRun.shift();Oa.unshift(a)}Ka(Oa)}}if(!(0<Ta)){if(g.preRun)for(\"function\"==typeof g.preRun&&(g.preRun=[g.preRun]);g.preRun.length;)Qa();Ka(La);0<Ta||(g.setStatus?(g.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){g.setStatus(\"\")},1);a()},1)):a())}}g.run=Uu;\nif(g.preInit)for(\"function\"==typeof g.preInit&&(g.preInit=[g.preInit]);0<g.preInit.length;)g.preInit.pop()();Uu();function k(){}k.prototype=Object.create(k.prototype);k.prototype.constructor=k;k.prototype.As=k;k.Bs={};g.WrapperObject=k;function l(a){return(a||k).Bs}g.getCache=l;function m(a,c){var d=l(c),e=d[a];if(e)return e;e=Object.create((c||k).prototype);e.zs=a;return d[a]=e}g.wrapPointer=m;g.castObject=function(a,c){return m(a.zs,c)};g.NULL=m(0);\ng.destroy=function(a){if(!a.__destroy__)throw\"Error: Cannot destroy object. (Did you create it yourself?)\";a.__destroy__();delete l(a.As)[a.zs]};g.compare=function(a,c){return a.zs===c.zs};g.getPointer=function(a){return a.zs};g.getClass=function(a){return a.As};\nb={buffer:0,size:0,Qs:0,Ws:[],Ps:0,Is:function(){if(b.Ps){for(var a=0;a<b.Ws.length;a++)g._free(b.Ws[a]);b.Ws.length=0;g._free(b.buffer);b.buffer=0;b.size+=b.Ps;b.Ps=0}b.buffer||(b.size+=128,b.buffer=g._malloc(b.size),assert(b.buffer));b.Qs=0},Vs:function(a,c){assert(b.buffer);a=a.length*c.BYTES_PER_ELEMENT;a=a+7&-8;b.Qs+a>=b.size?(assert(0<a),b.Ps+=a,c=g._malloc(a),b.Ws.push(c)):(c=b.buffer+b.Qs,b.Qs+=a);return c},copy:function(a,c,d){switch(c.BYTES_PER_ELEMENT){case 2:d>>=1;break;case 4:d>>=2;break;\ncase 8:d>>=3}for(var e=0;e<a.length;e++)c[d+e]=a[e]}};function Vu(a){if(\"string\"===typeof a){a=Ab(a);var c=b.Vs(a,Ea);b.copy(a,Ea,c);return c}return a}function Wu(a){if(\"object\"===typeof a){var c=b.Vs(a,Fa);b.copy(a,Fa,c);return c}return a}function p(){throw\"cannot construct a btCollisionShape, no constructor in IDL\";}p.prototype=Object.create(k.prototype);p.prototype.constructor=p;p.prototype.As=p;p.Bs={};g.btCollisionShape=p;\np.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ug(c,a)};p.prototype.getLocalScaling=function(){return m(Sg(this.zs),q)};p.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Rg(d,a,c)};p.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vg(c,a)};p.prototype.getMargin=function(){return Tg(this.zs)};p.prototype.__destroy__=function(){Qg(this.zs)};\nfunction t(){throw\"cannot construct a btCollisionObject, no constructor in IDL\";}t.prototype=Object.create(k.prototype);t.prototype.constructor=t;t.prototype.As=t;t.Bs={};g.btCollisionObject=t;t.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Eg(d,a,c)};t.prototype.getCollisionShape=function(){return m(sg(this.zs),p)};\nt.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jg(c,a)};t.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Dg(c,a)};t.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pg(c,a)};t.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?ng(c):og(c,a)};t.prototype.isActive=function(){return!!zg(this.zs)};t.prototype.isKinematicObject=function(){return!!Ag(this.zs)};\nt.prototype.isStaticObject=function(){return!!Bg(this.zs)};t.prototype.isStaticOrKinematicObject=function(){return!!Cg(this.zs)};t.prototype.getRestitution=function(){return ug(this.zs)};t.prototype.getFriction=function(){return tg(this.zs)};t.prototype.getRollingFriction=function(){return vg(this.zs)};t.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lg(c,a)};t.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kg(c,a)};\nt.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mg(c,a)};t.prototype.getWorldTransform=function(){return m(yg(this.zs),u)};t.prototype.getCollisionFlags=function(){return rg(this.zs)};t.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Hg(c,a)};t.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Pg(c,a)};\nt.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ig(c,a)};t.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fg(c,a)};t.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gg(c,a)};t.prototype.getUserIndex=function(){return wg(this.zs)};t.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ng(c,a)};\nt.prototype.getUserPointer=function(){return m(xg(this.zs),Xu)};t.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Og(c,a)};t.prototype.getBroadphaseHandle=function(){return m(qg(this.zs),v)};t.prototype.__destroy__=function(){mg(this.zs)};function Yu(){throw\"cannot construct a btTypedConstraint, no constructor in IDL\";}Yu.prototype=Object.create(k.prototype);Yu.prototype.constructor=Yu;Yu.prototype.As=Yu;Yu.Bs={};g.btTypedConstraint=Yu;\nYu.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Qt(c,a)};Yu.prototype.getBreakingImpulseThreshold=function(){return Rt(this.zs)};Yu.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tt(c,a)};Yu.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return St(d,a,c)};\nYu.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Ut(e,a,c,d)};Yu.prototype.__destroy__=function(){Pt(this.zs)};function w(){throw\"cannot construct a btCollisionWorld, no constructor in IDL\";}w.prototype=Object.create(k.prototype);w.prototype.constructor=w;w.prototype.As=w;w.Bs={};g.btCollisionWorld=w;w.prototype.getDispatcher=function(){return m(hh(this.zs),Zu)};\nw.prototype.rayTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);jh(e,a,c,d)};w.prototype.getPairCache=function(){return m(ih(this.zs),$u)};w.prototype.getDispatchInfo=function(){return m(gh(this.zs),x)};w.prototype.addCollisionObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?Xg(e,a):void 0===d?Yg(e,a,c):Zg(e,a,c,d)};\nw.prototype.removeCollisionObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);kh(c,a)};w.prototype.getBroadphase=function(){return m(eh(this.zs),av)};w.prototype.convexSweepTest=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);bh(n,a,c,d,e,f)};\nw.prototype.contactPairTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);$g(e,a,c,d)};w.prototype.contactTest=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ah(d,a,c)};w.prototype.setForceUpdateAllAabbs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mh(c,a)};w.prototype.updateSingleAabb=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nh(c,a)};\nw.prototype.setDebugDrawer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lh(c,a)};w.prototype.getDebugDrawer=function(){return m(fh(this.zs),bv)};w.prototype.debugDrawWorld=function(){dh(this.zs)};w.prototype.debugDrawObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ch(e,a,c,d)};w.prototype.__destroy__=function(){Wg(this.zs)};\nfunction cv(){throw\"cannot construct a btConcaveShape, no constructor in IDL\";}cv.prototype=Object.create(p.prototype);cv.prototype.constructor=cv;cv.prototype.As=cv;cv.Bs={};g.btConcaveShape=cv;cv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gh(c,a)};cv.prototype.getLocalScaling=function(){return m(Fh(this.zs),q)};cv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Eh(d,a,c)};\ncv.prototype.__destroy__=function(){Dh(this.zs)};function dv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Wf(a,c);l(dv)[this.zs]=this}dv.prototype=Object.create(p.prototype);dv.prototype.constructor=dv;dv.prototype.As=dv;dv.Bs={};g.btCapsuleShape=dv;dv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dg(c,a)};dv.prototype.getMargin=function(){return $f(this.zs)};dv.prototype.getUpAxis=function(){return bg(this.zs)};\ndv.prototype.getRadius=function(){return ag(this.zs)};dv.prototype.getHalfHeight=function(){return Yf(this.zs)};dv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cg(c,a)};dv.prototype.getLocalScaling=function(){return m(Zf(this.zs),q)};dv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Xf(d,a,c)};dv.prototype.__destroy__=function(){Vf(this.zs)};\nfunction bv(){throw\"cannot construct a btIDebugDraw, no constructor in IDL\";}bv.prototype=Object.create(k.prototype);bv.prototype.constructor=bv;bv.prototype.As=bv;bv.Bs={};g.btIDebugDraw=bv;bv.prototype.drawLine=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);On(e,a,c,d)};\nbv.prototype.drawContactPoint=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);Nn(n,a,c,d,e,f)};bv.prototype.reportErrorWarning=function(a){var c=this.zs;b.Is();a=a&&\"object\"===typeof a?a.zs:Vu(a);Qn(c,a)};bv.prototype.draw3dText=function(a,c){var d=this.zs;b.Is();a&&\"object\"===typeof a&&(a=a.zs);c=c&&\"object\"===typeof c?c.zs:Vu(c);Mn(d,a,c)};\nbv.prototype.setDebugMode=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Rn(c,a)};bv.prototype.getDebugMode=function(){return Pn(this.zs)};bv.prototype.__destroy__=function(){Ln(this.zs)};function y(){throw\"cannot construct a btDynamicsWorld, no constructor in IDL\";}y.prototype=Object.create(w.prototype);y.prototype.constructor=y;y.prototype.As=y;y.Bs={};g.btDynamicsWorld=y;y.prototype.addAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hl(c,a)};\ny.prototype.removeAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xl(c,a)};y.prototype.getSolverInfo=function(){return m(vl(this.zs),z)};y.prototype.getDispatcher=function(){return m(tl(this.zs),Zu)};y.prototype.rayTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);wl(e,a,c,d)};y.prototype.getPairCache=function(){return m(ul(this.zs),$u)};\ny.prototype.getDispatchInfo=function(){return m(sl(this.zs),x)};y.prototype.addCollisionObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?il(e,a):void 0===d?jl(e,a,c):kl(e,a,c,d)};y.prototype.removeCollisionObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yl(c,a)};y.prototype.getBroadphase=function(){return m(ql(this.zs),av)};\ny.prototype.convexSweepTest=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);nl(n,a,c,d,e,f)};y.prototype.contactPairTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ll(e,a,c,d)};\ny.prototype.contactTest=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ml(d,a,c)};y.prototype.setForceUpdateAllAabbs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Al(c,a)};y.prototype.updateSingleAabb=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bl(c,a)};y.prototype.setDebugDrawer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zl(c,a)};y.prototype.getDebugDrawer=function(){return m(rl(this.zs),bv)};\ny.prototype.debugDrawWorld=function(){pl(this.zs)};y.prototype.debugDrawObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ol(e,a,c,d)};y.prototype.__destroy__=function(){gl(this.zs)};function ev(){throw\"cannot construct a btTriangleMeshShape, no constructor in IDL\";}ev.prototype=Object.create(cv.prototype);ev.prototype.constructor=ev;ev.prototype.As=ev;ev.Bs={};g.btTriangleMeshShape=ev;\nev.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Et(c,a)};ev.prototype.getLocalScaling=function(){return m(Dt(this.zs),q)};ev.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ct(d,a,c)};ev.prototype.__destroy__=function(){Bt(this.zs)};function A(){this.zs=Fm();l(A)[this.zs]=this}A.prototype=Object.create(t.prototype);A.prototype.constructor=A;A.prototype.As=A;A.Bs={};\ng.btGhostObject=A;A.prototype.getNumOverlappingObjects=function(){return Lm(this.zs)};A.prototype.getOverlappingObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Mm(c,a),t)};A.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Xm(d,a,c)};A.prototype.getCollisionShape=function(){return m(Jm(this.zs),p)};\nA.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);bn(c,a)};A.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wm(c,a)};A.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gm(c,a)};A.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?Dm(c):Em(c,a)};A.prototype.isActive=function(){return!!Sm(this.zs)};A.prototype.isKinematicObject=function(){return!!Tm(this.zs)};\nA.prototype.isStaticObject=function(){return!!Um(this.zs)};A.prototype.isStaticOrKinematicObject=function(){return!!Vm(this.zs)};A.prototype.getRestitution=function(){return Nm(this.zs)};A.prototype.getFriction=function(){return Km(this.zs)};A.prototype.getRollingFriction=function(){return Om(this.zs)};A.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dn(c,a)};A.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cn(c,a)};\nA.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);en(c,a)};A.prototype.getWorldTransform=function(){return m(Rm(this.zs),u)};A.prototype.getCollisionFlags=function(){return Im(this.zs)};A.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$m(c,a)};A.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hn(c,a)};\nA.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);an(c,a)};A.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ym(c,a)};A.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zm(c,a)};A.prototype.getUserIndex=function(){return Pm(this.zs)};A.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);fn(c,a)};\nA.prototype.getUserPointer=function(){return m(Qm(this.zs),Xu)};A.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gn(c,a)};A.prototype.getBroadphaseHandle=function(){return m(Hm(this.zs),v)};A.prototype.__destroy__=function(){Cm(this.zs)};function fv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Sh(a,c);l(fv)[this.zs]=this}fv.prototype=Object.create(p.prototype);fv.prototype.constructor=fv;fv.prototype.As=fv;fv.Bs={};\ng.btConeShape=fv;fv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vh(c,a)};fv.prototype.getLocalScaling=function(){return m(Uh(this.zs),q)};fv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Th(d,a,c)};fv.prototype.__destroy__=function(){Rh(this.zs)};function gv(){throw\"cannot construct a btActionInterface, no constructor in IDL\";}gv.prototype=Object.create(k.prototype);\ngv.prototype.constructor=gv;gv.prototype.As=gv;gv.Bs={};g.btActionInterface=gv;gv.prototype.updateAction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);af(d,a,c)};gv.prototype.__destroy__=function(){$e(this.zs)};\nfunction q(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=void 0===a?Zt():void 0===c?_emscripten_bind_btVector3_btVector3_1(a):void 0===d?_emscripten_bind_btVector3_btVector3_2(a,c):$t(a,c,d);l(q)[this.zs]=this}q.prototype=Object.create(k.prototype);q.prototype.constructor=q;q.prototype.As=q;q.Bs={};g.btVector3=q;q.prototype.length=q.prototype.length=function(){return cu(this.zs)};q.prototype.length2=function(){return bu(this.zs)};\nq.prototype.x=q.prototype.x=function(){return mu(this.zs)};q.prototype.y=q.prototype.y=function(){return nu(this.zs)};q.prototype.z=q.prototype.z=function(){return ou(this.zs)};q.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ju(c,a)};q.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ku(c,a)};q.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lu(c,a)};\nq.prototype.setValue=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);iu(e,a,c,d)};q.prototype.normalize=q.prototype.normalize=function(){du(this.zs)};q.prototype.rotate=q.prototype.rotate=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return m(hu(d,a,c),q)};q.prototype.dot=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return au(c,a)};\nq.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(fu(c,a),q)};q.prototype.op_add=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(eu(c,a),q)};q.prototype.op_sub=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(gu(c,a),q)};q.prototype.__destroy__=function(){Yt(this.zs)};function hv(){throw\"cannot construct a btQuadWord, no constructor in IDL\";}hv.prototype=Object.create(k.prototype);hv.prototype.constructor=hv;\nhv.prototype.As=hv;hv.Bs={};g.btQuadWord=hv;hv.prototype.x=hv.prototype.x=function(){return lq(this.zs)};hv.prototype.y=hv.prototype.y=function(){return mq(this.zs)};hv.prototype.z=hv.prototype.z=function(){return nq(this.zs)};hv.prototype.w=hv.prototype.ht=function(){return kq(this.zs)};hv.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hq(c,a)};hv.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);iq(c,a)};\nhv.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jq(c,a)};hv.prototype.setW=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gq(c,a)};hv.prototype.__destroy__=function(){fq(this.zs)};function iv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=Aj(a);l(iv)[this.zs]=this}iv.prototype=Object.create(p.prototype);iv.prototype.constructor=iv;iv.prototype.As=iv;iv.Bs={};g.btCylinderShape=iv;\niv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fj(c,a)};iv.prototype.getMargin=function(){return Dj(this.zs)};iv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ej(c,a)};iv.prototype.getLocalScaling=function(){return m(Cj(this.zs),q)};iv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Bj(d,a,c)};iv.prototype.__destroy__=function(){zj(this.zs)};\nfunction jv(){throw\"cannot construct a btConvexShape, no constructor in IDL\";}jv.prototype=Object.create(p.prototype);jv.prototype.constructor=jv;jv.prototype.As=jv;jv.Bs={};g.btConvexShape=jv;jv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);bj(c,a)};jv.prototype.getLocalScaling=function(){return m($i(this.zs),q)};jv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Zi(d,a,c)};\njv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cj(c,a)};jv.prototype.getMargin=function(){return aj(this.zs)};jv.prototype.__destroy__=function(){Yi(this.zs)};function Zu(){throw\"cannot construct a btDispatcher, no constructor in IDL\";}Zu.prototype=Object.create(k.prototype);Zu.prototype.constructor=Zu;Zu.prototype.As=Zu;Zu.Bs={};g.btDispatcher=Zu;Zu.prototype.getNumManifolds=function(){return fl(this.zs)};\nZu.prototype.getManifoldByIndexInternal=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(el(c,a),kv)};Zu.prototype.__destroy__=function(){dl(this.zs)};\nfunction lv(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===e?Xl(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(a,c,d,e):Yl(a,c,d,e,f);l(lv)[this.zs]=this}lv.prototype=Object.create(Yu.prototype);lv.prototype.constructor=lv;lv.prototype.As=lv;lv.Bs={};g.btGeneric6DofConstraint=lv;\nlv.prototype.setLinearLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);fm(c,a)};lv.prototype.setLinearUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gm(c,a)};lv.prototype.setAngularLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cm(c,a)};lv.prototype.setAngularUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dm(c,a)};lv.prototype.getFrameOffsetA=function(){return m(am(this.zs),u)};\nlv.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zl(c,a)};lv.prototype.getBreakingImpulseThreshold=function(){return $l(this.zs)};lv.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);em(c,a)};lv.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return bm(d,a,c)};\nlv.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);hm(e,a,c,d)};lv.prototype.__destroy__=function(){Wl(this.zs)};function mv(){throw\"cannot construct a btStridingMeshInterface, no constructor in IDL\";}mv.prototype=Object.create(k.prototype);mv.prototype.constructor=mv;mv.prototype.As=mv;mv.Bs={};g.btStridingMeshInterface=mv;\nmv.prototype.setScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ot(c,a)};mv.prototype.__destroy__=function(){nt(this.zs)};function nv(){throw\"cannot construct a btMotionState, no constructor in IDL\";}nv.prototype=Object.create(k.prototype);nv.prototype.constructor=nv;nv.prototype.As=nv;nv.Bs={};g.btMotionState=nv;nv.prototype.getWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uo(c,a)};\nnv.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vo(c,a)};nv.prototype.__destroy__=function(){To(this.zs)};function B(){throw\"cannot construct a ConvexResultCallback, no constructor in IDL\";}B.prototype=Object.create(k.prototype);B.prototype.constructor=B;B.prototype.As=B;B.Bs={};g.ConvexResultCallback=B;B.prototype.hasHit=function(){return!!bd(this.zs)};B.prototype.get_m_collisionFilterGroup=B.prototype.Ds=function(){return $c(this.zs)};\nB.prototype.set_m_collisionFilterGroup=B.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dd(c,a)};Object.defineProperty(B.prototype,\"m_collisionFilterGroup\",{get:B.prototype.Ds,set:B.prototype.Fs});B.prototype.get_m_collisionFilterMask=B.prototype.Es=function(){return ad(this.zs)};B.prototype.set_m_collisionFilterMask=B.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ed(c,a)};\nObject.defineProperty(B.prototype,\"m_collisionFilterMask\",{get:B.prototype.Es,set:B.prototype.Gs});B.prototype.get_m_closestHitFraction=B.prototype.Hs=function(){return Zc(this.zs)};B.prototype.set_m_closestHitFraction=B.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cd(c,a)};Object.defineProperty(B.prototype,\"m_closestHitFraction\",{get:B.prototype.Hs,set:B.prototype.Js});B.prototype.__destroy__=function(){Yc(this.zs)};\nfunction ov(){throw\"cannot construct a ContactResultCallback, no constructor in IDL\";}ov.prototype=Object.create(k.prototype);ov.prototype.constructor=ov;ov.prototype.As=ov;ov.Bs={};g.ContactResultCallback=ov;\nov.prototype.addSingleResult=function(a,c,d,e,f,n,r){var N=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);return Rc(N,a,c,d,e,f,n,r)};ov.prototype.__destroy__=function(){Qc(this.zs)};function C(){throw\"cannot construct a RayResultCallback, no constructor in IDL\";}C.prototype=Object.create(k.prototype);\nC.prototype.constructor=C;C.prototype.As=C;C.Bs={};g.RayResultCallback=C;C.prototype.hasHit=function(){return!!Ce(this.zs)};C.prototype.get_m_collisionFilterGroup=C.prototype.Ds=function(){return ze(this.zs)};C.prototype.set_m_collisionFilterGroup=C.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ee(c,a)};Object.defineProperty(C.prototype,\"m_collisionFilterGroup\",{get:C.prototype.Ds,set:C.prototype.Fs});C.prototype.get_m_collisionFilterMask=C.prototype.Es=function(){return Ae(this.zs)};\nC.prototype.set_m_collisionFilterMask=C.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fe(c,a)};Object.defineProperty(C.prototype,\"m_collisionFilterMask\",{get:C.prototype.Es,set:C.prototype.Gs});C.prototype.get_m_closestHitFraction=C.prototype.Hs=function(){return ye(this.zs)};C.prototype.set_m_closestHitFraction=C.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);De(c,a)};Object.defineProperty(C.prototype,\"m_closestHitFraction\",{get:C.prototype.Hs,set:C.prototype.Js});\nC.prototype.get_m_collisionObject=C.prototype.Ms=function(){return m(Be(this.zs),t)};C.prototype.set_m_collisionObject=C.prototype.Rs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ge(c,a)};Object.defineProperty(C.prototype,\"m_collisionObject\",{get:C.prototype.Ms,set:C.prototype.Rs});C.prototype.__destroy__=function(){xe(this.zs)};function pv(){throw\"cannot construct a btMatrix3x3, no constructor in IDL\";}pv.prototype=Object.create(k.prototype);pv.prototype.constructor=pv;\npv.prototype.As=pv;pv.Bs={};g.btMatrix3x3=pv;pv.prototype.setEulerZYX=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);So(e,a,c,d)};pv.prototype.getRotation=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Qo(c,a)};pv.prototype.getRow=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Ro(c,a),q)};pv.prototype.__destroy__=function(){Po(this.zs)};\nfunction qv(){throw\"cannot construct a btScalarArray, no constructor in IDL\";}qv.prototype=Object.create(k.prototype);qv.prototype.constructor=qv;qv.prototype.As=qv;qv.Bs={};g.btScalarArray=qv;qv.prototype.size=qv.prototype.size=function(){return Is(this.zs)};qv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Hs(c,a)};qv.prototype.__destroy__=function(){Gs(this.zs)};function x(){throw\"cannot construct a btDispatcherInfo, no constructor in IDL\";}x.prototype=Object.create(k.prototype);\nx.prototype.constructor=x;x.prototype.As=x;x.Bs={};g.btDispatcherInfo=x;x.prototype.get_m_timeStep=x.prototype.tu=function(){return Pk(this.zs)};x.prototype.set_m_timeStep=x.prototype.Jv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$k(c,a)};Object.defineProperty(x.prototype,\"m_timeStep\",{get:x.prototype.tu,set:x.prototype.Jv});x.prototype.get_m_stepCount=x.prototype.qu=function(){return Nk(this.zs)};\nx.prototype.set_m_stepCount=x.prototype.Gv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Yk(c,a)};Object.defineProperty(x.prototype,\"m_stepCount\",{get:x.prototype.qu,set:x.prototype.Gv});x.prototype.get_m_dispatchFunc=x.prototype.Ct=function(){return Kk(this.zs)};x.prototype.set_m_dispatchFunc=x.prototype.Vu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vk(c,a)};Object.defineProperty(x.prototype,\"m_dispatchFunc\",{get:x.prototype.Ct,set:x.prototype.Vu});\nx.prototype.get_m_timeOfImpact=x.prototype.su=function(){return Ok(this.zs)};x.prototype.set_m_timeOfImpact=x.prototype.Iv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zk(c,a)};Object.defineProperty(x.prototype,\"m_timeOfImpact\",{get:x.prototype.su,set:x.prototype.Iv});x.prototype.get_m_useContinuous=x.prototype.wu=function(){return!!Qk(this.zs)};x.prototype.set_m_useContinuous=x.prototype.Lv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);al(c,a)};\nObject.defineProperty(x.prototype,\"m_useContinuous\",{get:x.prototype.wu,set:x.prototype.Lv});x.prototype.get_m_enableSatConvex=x.prototype.Et=function(){return!!Mk(this.zs)};x.prototype.set_m_enableSatConvex=x.prototype.Xu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xk(c,a)};Object.defineProperty(x.prototype,\"m_enableSatConvex\",{get:x.prototype.Et,set:x.prototype.Xu});x.prototype.get_m_enableSPU=x.prototype.Dt=function(){return!!Lk(this.zs)};\nx.prototype.set_m_enableSPU=x.prototype.Wu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wk(c,a)};Object.defineProperty(x.prototype,\"m_enableSPU\",{get:x.prototype.Dt,set:x.prototype.Wu});x.prototype.get_m_useEpa=x.prototype.yu=function(){return!!Sk(this.zs)};x.prototype.set_m_useEpa=x.prototype.Nv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cl(c,a)};Object.defineProperty(x.prototype,\"m_useEpa\",{get:x.prototype.yu,set:x.prototype.Nv});\nx.prototype.get_m_allowedCcdPenetration=x.prototype.ot=function(){return Ik(this.zs)};x.prototype.set_m_allowedCcdPenetration=x.prototype.Hu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tk(c,a)};Object.defineProperty(x.prototype,\"m_allowedCcdPenetration\",{get:x.prototype.ot,set:x.prototype.Hu});x.prototype.get_m_useConvexConservativeDistanceUtil=x.prototype.xu=function(){return!!Rk(this.zs)};\nx.prototype.set_m_useConvexConservativeDistanceUtil=x.prototype.Mv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);bl(c,a)};Object.defineProperty(x.prototype,\"m_useConvexConservativeDistanceUtil\",{get:x.prototype.xu,set:x.prototype.Mv});x.prototype.get_m_convexConservativeDistanceThreshold=x.prototype.vt=function(){return Jk(this.zs)};x.prototype.set_m_convexConservativeDistanceThreshold=x.prototype.Ou=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uk(c,a)};\nObject.defineProperty(x.prototype,\"m_convexConservativeDistanceThreshold\",{get:x.prototype.vt,set:x.prototype.Ou});x.prototype.__destroy__=function(){Hk(this.zs)};function rv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===c?ej(a):fj(a,c);l(rv)[this.zs]=this}rv.prototype=Object.create(jv.prototype);rv.prototype.constructor=rv;rv.prototype.As=rv;rv.Bs={};g.btConvexTriangleMeshShape=rv;\nrv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jj(c,a)};rv.prototype.getLocalScaling=function(){return m(hj(this.zs),q)};rv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);gj(d,a,c)};rv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);kj(c,a)};rv.prototype.getMargin=function(){return ij(this.zs)};rv.prototype.__destroy__=function(){dj(this.zs)};\nfunction av(){throw\"cannot construct a btBroadphaseInterface, no constructor in IDL\";}av.prototype=Object.create(k.prototype);av.prototype.constructor=av;av.prototype.As=av;av.Bs={};g.btBroadphaseInterface=av;av.prototype.getOverlappingPairCache=function(){return m(pf(this.zs),$u)};av.prototype.__destroy__=function(){of(this.zs)};function sv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=void 0===a?Kj():Lj(a);l(sv)[this.zs]=this}sv.prototype=Object.create(k.prototype);sv.prototype.constructor=sv;\nsv.prototype.As=sv;sv.Bs={};g.btDefaultCollisionConfiguration=sv;sv.prototype.__destroy__=function(){Jj(this.zs)};function D(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===e?Sq(a,c,d):Tq(a,c,d,e);l(D)[this.zs]=this}D.prototype=Object.create(k.prototype);D.prototype.constructor=D;D.prototype.As=D;D.Bs={};g.btRigidBodyConstructionInfo=D;D.prototype.get_m_linearDamping=D.prototype.Qt=function(){return br(this.zs)};\nD.prototype.set_m_linearDamping=D.prototype.iv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nr(c,a)};Object.defineProperty(D.prototype,\"m_linearDamping\",{get:D.prototype.Qt,set:D.prototype.iv});D.prototype.get_m_angularDamping=D.prototype.qt=function(){return Zq(this.zs)};D.prototype.set_m_angularDamping=D.prototype.Ju=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);kr(c,a)};Object.defineProperty(D.prototype,\"m_angularDamping\",{get:D.prototype.qt,set:D.prototype.Ju});\nD.prototype.get_m_friction=D.prototype.Gt=function(){return ar(this.zs)};D.prototype.set_m_friction=D.prototype.Zu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mr(c,a)};Object.defineProperty(D.prototype,\"m_friction\",{get:D.prototype.Gt,set:D.prototype.Zu});D.prototype.get_m_rollingFriction=D.prototype.lu=function(){return er(this.zs)};D.prototype.set_m_rollingFriction=D.prototype.Bv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qr(c,a)};\nObject.defineProperty(D.prototype,\"m_rollingFriction\",{get:D.prototype.lu,set:D.prototype.Bv});D.prototype.get_m_restitution=D.prototype.ku=function(){return dr(this.zs)};D.prototype.set_m_restitution=D.prototype.Av=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pr(c,a)};Object.defineProperty(D.prototype,\"m_restitution\",{get:D.prototype.ku,set:D.prototype.Av});D.prototype.get_m_linearSleepingThreshold=D.prototype.Rt=function(){return cr(this.zs)};\nD.prototype.set_m_linearSleepingThreshold=D.prototype.jv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);or(c,a)};Object.defineProperty(D.prototype,\"m_linearSleepingThreshold\",{get:D.prototype.Rt,set:D.prototype.jv});D.prototype.get_m_angularSleepingThreshold=D.prototype.rt=function(){return $q(this.zs)};D.prototype.set_m_angularSleepingThreshold=D.prototype.Ku=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lr(c,a)};\nObject.defineProperty(D.prototype,\"m_angularSleepingThreshold\",{get:D.prototype.rt,set:D.prototype.Ku});D.prototype.get_m_additionalDamping=D.prototype.lt=function(){return!!Xq(this.zs)};D.prototype.set_m_additionalDamping=D.prototype.Eu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ir(c,a)};Object.defineProperty(D.prototype,\"m_additionalDamping\",{get:D.prototype.lt,set:D.prototype.Eu});D.prototype.get_m_additionalDampingFactor=D.prototype.mt=function(){return Wq(this.zs)};\nD.prototype.set_m_additionalDampingFactor=D.prototype.Fu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hr(c,a)};Object.defineProperty(D.prototype,\"m_additionalDampingFactor\",{get:D.prototype.mt,set:D.prototype.Fu});D.prototype.get_m_additionalLinearDampingThresholdSqr=D.prototype.nt=function(){return Yq(this.zs)};D.prototype.set_m_additionalLinearDampingThresholdSqr=D.prototype.Gu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jr(c,a)};\nObject.defineProperty(D.prototype,\"m_additionalLinearDampingThresholdSqr\",{get:D.prototype.nt,set:D.prototype.Gu});D.prototype.get_m_additionalAngularDampingThresholdSqr=D.prototype.kt=function(){return Vq(this.zs)};D.prototype.set_m_additionalAngularDampingThresholdSqr=D.prototype.Du=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gr(c,a)};Object.defineProperty(D.prototype,\"m_additionalAngularDampingThresholdSqr\",{get:D.prototype.kt,set:D.prototype.Du});\nD.prototype.get_m_additionalAngularDampingFactor=D.prototype.jt=function(){return Uq(this.zs)};D.prototype.set_m_additionalAngularDampingFactor=D.prototype.Cu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);fr(c,a)};Object.defineProperty(D.prototype,\"m_additionalAngularDampingFactor\",{get:D.prototype.jt,set:D.prototype.Cu});D.prototype.__destroy__=function(){Rq(this.zs)};function tv(){throw\"cannot construct a btCollisionConfiguration, no constructor in IDL\";}tv.prototype=Object.create(k.prototype);\ntv.prototype.constructor=tv;tv.prototype.As=tv;tv.Bs={};g.btCollisionConfiguration=tv;tv.prototype.__destroy__=function(){eg(this.zs)};function kv(){this.zs=Np();l(kv)[this.zs]=this}kv.prototype=Object.create(k.prototype);kv.prototype.constructor=kv;kv.prototype.As=kv;kv.Bs={};g.btPersistentManifold=kv;kv.prototype.getBody0=function(){return m(Op(this.zs),t)};kv.prototype.getBody1=function(){return m(Pp(this.zs),t)};kv.prototype.getNumContacts=function(){return Rp(this.zs)};\nkv.prototype.getContactPoint=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Qp(c,a),E)};kv.prototype.__destroy__=function(){Mp(this.zs)};function uv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=void 0===a?qh():rh(a);l(uv)[this.zs]=this}uv.prototype=Object.create(p.prototype);uv.prototype.constructor=uv;uv.prototype.As=uv;uv.Bs={};g.btCompoundShape=uv;\nuv.prototype.addChildShape=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ph(d,a,c)};uv.prototype.removeChildShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yh(c,a)};uv.prototype.removeChildShapeByIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xh(c,a)};uv.prototype.getNumChildShapes=function(){return wh(this.zs)};uv.prototype.getChildShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(th(c,a),p)};\nuv.prototype.updateChildTransform=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===d?Bh(e,a,c):Ch(e,a,c,d)};uv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ah(c,a)};uv.prototype.getMargin=function(){return vh(this.zs)};uv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zh(c,a)};uv.prototype.getLocalScaling=function(){return m(uh(this.zs),q)};\nuv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);sh(d,a,c)};uv.prototype.__destroy__=function(){oh(this.zs)};function F(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=bc(a,c);l(F)[this.zs]=this}F.prototype=Object.create(B.prototype);F.prototype.constructor=F;F.prototype.As=F;F.Bs={};g.ClosestConvexResultCallback=F;F.prototype.hasHit=function(){return!!lc(this.zs)};\nF.prototype.get_m_convexFromWorld=F.prototype.wt=function(){return m(hc(this.zs),q)};F.prototype.set_m_convexFromWorld=F.prototype.Pu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pc(c,a)};Object.defineProperty(F.prototype,\"m_convexFromWorld\",{get:F.prototype.wt,set:F.prototype.Pu});F.prototype.get_m_convexToWorld=F.prototype.xt=function(){return m(ic(this.zs),q)};F.prototype.set_m_convexToWorld=F.prototype.Qu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qc(c,a)};\nObject.defineProperty(F.prototype,\"m_convexToWorld\",{get:F.prototype.xt,set:F.prototype.Qu});F.prototype.get_m_hitNormalWorld=F.prototype.Ns=function(){return m(jc(this.zs),q)};F.prototype.set_m_hitNormalWorld=F.prototype.Ss=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rc(c,a)};Object.defineProperty(F.prototype,\"m_hitNormalWorld\",{get:F.prototype.Ns,set:F.prototype.Ss});F.prototype.get_m_hitPointWorld=F.prototype.Os=function(){return m(kc(this.zs),q)};\nF.prototype.set_m_hitPointWorld=F.prototype.Ts=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);sc(c,a)};Object.defineProperty(F.prototype,\"m_hitPointWorld\",{get:F.prototype.Os,set:F.prototype.Ts});F.prototype.get_m_collisionFilterGroup=F.prototype.Ds=function(){return ec(this.zs)};F.prototype.set_m_collisionFilterGroup=F.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nc(c,a)};Object.defineProperty(F.prototype,\"m_collisionFilterGroup\",{get:F.prototype.Ds,set:F.prototype.Fs});\nF.prototype.get_m_collisionFilterMask=F.prototype.Es=function(){return fc(this.zs)};F.prototype.set_m_collisionFilterMask=F.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);oc(c,a)};Object.defineProperty(F.prototype,\"m_collisionFilterMask\",{get:F.prototype.Es,set:F.prototype.Gs});F.prototype.get_m_closestHitFraction=F.prototype.Hs=function(){return dc(this.zs)};\nF.prototype.set_m_closestHitFraction=F.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mc(c,a)};Object.defineProperty(F.prototype,\"m_closestHitFraction\",{get:F.prototype.Hs,set:F.prototype.Js});F.prototype.__destroy__=function(){cc(this.zs)};function G(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Eb(a,c);l(G)[this.zs]=this}G.prototype=Object.create(C.prototype);G.prototype.constructor=G;G.prototype.As=G;G.Bs={};g.AllHitsRayResultCallback=G;\nG.prototype.hasHit=function(){return!!Rb(this.zs)};G.prototype.get_m_collisionObjects=G.prototype.tt=function(){return m(Lb(this.zs),vv)};G.prototype.set_m_collisionObjects=G.prototype.Mu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wb(c,a)};Object.defineProperty(G.prototype,\"m_collisionObjects\",{get:G.prototype.tt,set:G.prototype.Mu});G.prototype.get_m_rayFromWorld=G.prototype.bt=function(){return m(Pb(this.zs),q)};\nG.prototype.set_m_rayFromWorld=G.prototype.et=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$b(c,a)};Object.defineProperty(G.prototype,\"m_rayFromWorld\",{get:G.prototype.bt,set:G.prototype.et});G.prototype.get_m_rayToWorld=G.prototype.ct=function(){return m(Qb(this.zs),q)};G.prototype.set_m_rayToWorld=G.prototype.ft=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ac(c,a)};Object.defineProperty(G.prototype,\"m_rayToWorld\",{get:G.prototype.ct,set:G.prototype.ft});\nG.prototype.get_m_hitNormalWorld=G.prototype.Ns=function(){return m(Nb(this.zs),wv)};G.prototype.set_m_hitNormalWorld=G.prototype.Ss=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Yb(c,a)};Object.defineProperty(G.prototype,\"m_hitNormalWorld\",{get:G.prototype.Ns,set:G.prototype.Ss});G.prototype.get_m_hitPointWorld=G.prototype.Os=function(){return m(Ob(this.zs),wv)};G.prototype.set_m_hitPointWorld=G.prototype.Ts=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zb(c,a)};\nObject.defineProperty(G.prototype,\"m_hitPointWorld\",{get:G.prototype.Os,set:G.prototype.Ts});G.prototype.get_m_hitFractions=G.prototype.Lt=function(){return m(Mb(this.zs),qv)};G.prototype.set_m_hitFractions=G.prototype.dv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xb(c,a)};Object.defineProperty(G.prototype,\"m_hitFractions\",{get:G.prototype.Lt,set:G.prototype.dv});G.prototype.get_m_collisionFilterGroup=G.prototype.Ds=function(){return Hb(this.zs)};\nG.prototype.set_m_collisionFilterGroup=G.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tb(c,a)};Object.defineProperty(G.prototype,\"m_collisionFilterGroup\",{get:G.prototype.Ds,set:G.prototype.Fs});G.prototype.get_m_collisionFilterMask=G.prototype.Es=function(){return Ib(this.zs)};G.prototype.set_m_collisionFilterMask=G.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ub(c,a)};\nObject.defineProperty(G.prototype,\"m_collisionFilterMask\",{get:G.prototype.Es,set:G.prototype.Gs});G.prototype.get_m_closestHitFraction=G.prototype.Hs=function(){return Gb(this.zs)};G.prototype.set_m_closestHitFraction=G.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Sb(c,a)};Object.defineProperty(G.prototype,\"m_closestHitFraction\",{get:G.prototype.Hs,set:G.prototype.Js});G.prototype.get_m_collisionObject=G.prototype.Ms=function(){return m(Kb(this.zs),t)};\nG.prototype.set_m_collisionObject=G.prototype.Rs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vb(c,a)};Object.defineProperty(G.prototype,\"m_collisionObject\",{get:G.prototype.Ms,set:G.prototype.Rs});G.prototype.__destroy__=function(){Fb(this.zs)};function xv(){this.zs=Ne();l(xv)[this.zs]=this}xv.prototype=Object.create(k.prototype);xv.prototype.constructor=xv;xv.prototype.As=xv;xv.Bs={};g.VHACD=xv;\nxv.prototype.Compute=function(a,c,d,e,f,n,r){var N=this.zs;b.Is();if(\"object\"==typeof a&&\"object\"===typeof a){var ba=b.Vs(a,Ga);b.copy(a,Ga,ba);a=ba}c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);\"object\"==typeof e&&\"object\"===typeof e&&(ba=b.Vs(e,h),b.copy(e,h,ba),e=ba);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);return!!Je(N,a,c,d,e,f,n,r)};xv.prototype.GetNConvexHulls=function(){return Le(this.zs)};\nxv.prototype.GetConvexHull=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ke(d,a,c)};xv.prototype.Cancel=function(){He(this.zs)};xv.prototype.Clean=function(){Ie(this.zs)};xv.prototype.Release=function(){Me(this.zs)};xv.prototype.__destroy__=function(){Oe(this.zs)};function yv(){this.zs=Dl();l(yv)[this.zs]=this}yv.prototype=Object.create(cv.prototype);yv.prototype.constructor=yv;yv.prototype.As=yv;yv.Bs={};g.btEmptyShape=yv;\nyv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gl(c,a)};yv.prototype.getLocalScaling=function(){return m(Fl(this.zs),q)};yv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);El(d,a,c)};yv.prototype.__destroy__=function(){Cl(this.zs)};function H(){this.zs=pi();l(H)[this.zs]=this}H.prototype=Object.create(k.prototype);H.prototype.constructor=H;H.prototype.As=H;H.Bs={};\ng.btConstraintSetting=H;H.prototype.get_m_tau=H.prototype.ru=function(){return si(this.zs)};H.prototype.set_m_tau=H.prototype.Hv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vi(c,a)};Object.defineProperty(H.prototype,\"m_tau\",{get:H.prototype.ru,set:H.prototype.Hv});H.prototype.get_m_damping=H.prototype.At=function(){return qi(this.zs)};H.prototype.set_m_damping=H.prototype.Tu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ti(c,a)};\nObject.defineProperty(H.prototype,\"m_damping\",{get:H.prototype.At,set:H.prototype.Tu});H.prototype.get_m_impulseClamp=H.prototype.Ot=function(){return ri(this.zs)};H.prototype.set_m_impulseClamp=H.prototype.gv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ui(c,a)};Object.defineProperty(H.prototype,\"m_impulseClamp\",{get:H.prototype.Ot,set:H.prototype.gv});H.prototype.__destroy__=function(){oi(this.zs)};function I(){throw\"cannot construct a LocalShapeInfo, no constructor in IDL\";}\nI.prototype=Object.create(k.prototype);I.prototype.constructor=I;I.prototype.As=I;I.Bs={};g.LocalShapeInfo=I;I.prototype.get_m_shapePart=I.prototype.nu=function(){return Qd(this.zs)};I.prototype.set_m_shapePart=I.prototype.Dv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Sd(c,a)};Object.defineProperty(I.prototype,\"m_shapePart\",{get:I.prototype.nu,set:I.prototype.Dv});I.prototype.get_m_triangleIndex=I.prototype.uu=function(){return Rd(this.zs)};\nI.prototype.set_m_triangleIndex=I.prototype.Kv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Td(c,a)};Object.defineProperty(I.prototype,\"m_triangleIndex\",{get:I.prototype.uu,set:I.prototype.Kv});I.prototype.__destroy__=function(){Pd(this.zs)};function J(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=Dr(a);l(J)[this.zs]=this}J.prototype=Object.create(t.prototype);J.prototype.constructor=J;J.prototype.As=J;J.Bs={};g.btRigidBody=J;\nJ.prototype.getCenterOfMassTransform=function(){return m(Lr(this.zs),u)};J.prototype.setCenterOfMassTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ks(c,a)};J.prototype.setSleepingThresholds=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);As(d,a,c)};J.prototype.getLinearDamping=function(){return Rr(this.zs)};J.prototype.getAngularDamping=function(){return Gr(this.zs)};\nJ.prototype.setDamping=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ps(d,a,c)};J.prototype.setMassProps=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);vs(d,a,c)};J.prototype.getLinearFactor=function(){return m(Sr(this.zs),q)};J.prototype.setLinearFactor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ts(c,a)};\nJ.prototype.applyTorque=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cr(c,a)};J.prototype.applyLocalTorque=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ar(c,a)};J.prototype.applyForce=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);xr(d,a,c)};J.prototype.applyCentralForce=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ur(c,a)};\nJ.prototype.applyCentralLocalForce=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);wr(c,a)};J.prototype.applyTorqueImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Br(c,a)};J.prototype.applyImpulse=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);zr(d,a,c)};J.prototype.applyCentralImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vr(c,a)};J.prototype.updateInertiaTensor=function(){Fs(this.zs)};\nJ.prototype.getLinearVelocity=function(){return m(Tr(this.zs),q)};J.prototype.getAngularVelocity=function(){return m(Ir(this.zs),q)};J.prototype.setLinearVelocity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);us(c,a)};J.prototype.setAngularVelocity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gs(c,a)};J.prototype.getMotionState=function(){return m(Ur(this.zs),nv)};J.prototype.setMotionState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xs(c,a)};\nJ.prototype.getAngularFactor=function(){return m(Hr(this.zs),q)};J.prototype.setAngularFactor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);es(c,a)};J.prototype.upcast=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Es(c,a),J)};J.prototype.getAabb=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Fr(d,a,c)};J.prototype.applyGravity=function(){yr(this.zs)};J.prototype.getGravity=function(){return m(Qr(this.zs),q)};\nJ.prototype.setGravity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ss(c,a)};J.prototype.getBroadphaseProxy=function(){return m(Kr(this.zs),v)};J.prototype.getFlags=function(){return Or(this.zs)};J.prototype.setFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qs(c,a)};J.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);hs(d,a,c)};\nJ.prototype.getCollisionShape=function(){return m(Nr(this.zs),p)};J.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ns(c,a)};J.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ds(c,a)};J.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Er(c,a)};J.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?sr(c):tr(c,a)};\nJ.prototype.isActive=function(){return!!$r(this.zs)};J.prototype.isKinematicObject=function(){return!!as(this.zs)};J.prototype.isStaticObject=function(){return!!bs(this.zs)};J.prototype.isStaticOrKinematicObject=function(){return!!cs(this.zs)};J.prototype.getRestitution=function(){return Vr(this.zs)};J.prototype.getFriction=function(){return Pr(this.zs)};J.prototype.getRollingFriction=function(){return Wr(this.zs)};\nJ.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ys(c,a)};J.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rs(c,a)};J.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zs(c,a)};J.prototype.getWorldTransform=function(){return m(Zr(this.zs),u)};J.prototype.getCollisionFlags=function(){return Mr(this.zs)};\nJ.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ls(c,a)};J.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ds(c,a)};J.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ms(c,a)};J.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);is(c,a)};J.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);js(c,a)};\nJ.prototype.getUserIndex=function(){return Xr(this.zs)};J.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bs(c,a)};J.prototype.getUserPointer=function(){return m(Yr(this.zs),Xu)};J.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cs(c,a)};J.prototype.getBroadphaseHandle=function(){return m(Jr(this.zs),v)};J.prototype.__destroy__=function(){rr(this.zs)};\nfunction zv(){throw\"cannot construct a btIndexedMeshArray, no constructor in IDL\";}zv.prototype=Object.create(k.prototype);zv.prototype.constructor=zv;zv.prototype.As=zv;zv.Bs={};g.btIndexedMeshArray=zv;zv.prototype.size=zv.prototype.size=function(){return Un(this.zs)};zv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Tn(c,a),Av)};zv.prototype.__destroy__=function(){Sn(this.zs)};function Bv(){this.zs=Hj();l(Bv)[this.zs]=this}Bv.prototype=Object.create(k.prototype);\nBv.prototype.constructor=Bv;Bv.prototype.As=Bv;Bv.Bs={};g.btDbvtBroadphase=Bv;Bv.prototype.getOverlappingPairCache=function(){return m(Ij(this.zs),$u)};Bv.prototype.__destroy__=function(){Gj(this.zs)};\nfunction Cv(a,c,d,e,f,n,r,N,ba){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);N&&\"object\"===typeof N&&(N=N.zs);ba&&\"object\"===typeof ba&&(ba=ba.zs);this.zs=mn(a,c,d,e,f,n,r,N,ba);l(Cv)[this.zs]=this}Cv.prototype=Object.create(cv.prototype);Cv.prototype.constructor=Cv;Cv.prototype.As=Cv;Cv.Bs={};\ng.btHeightfieldTerrainShape=Cv;Cv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rn(c,a)};Cv.prototype.getMargin=function(){return pn(this.zs)};Cv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qn(c,a)};Cv.prototype.getLocalScaling=function(){return m(on(this.zs),q)};Cv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);nn(d,a,c)};\nCv.prototype.__destroy__=function(){ln(this.zs)};function K(){this.zs=Ud();l(K)[this.zs]=this}K.prototype=Object.create(k.prototype);K.prototype.constructor=K;K.prototype.As=K;K.Bs={};g.Parameters=K;K.prototype.get_m_concavity=K.prototype.ut=function(){return Yd(this.zs)};K.prototype.set_m_concavity=K.prototype.Nu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);le(c,a)};Object.defineProperty(K.prototype,\"m_concavity\",{get:K.prototype.ut,set:K.prototype.Nu});\nK.prototype.get_m_alpha=K.prototype.pt=function(){return Wd(this.zs)};K.prototype.set_m_alpha=K.prototype.Iu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);je(c,a)};Object.defineProperty(K.prototype,\"m_alpha\",{get:K.prototype.pt,set:K.prototype.Iu});K.prototype.get_m_beta=K.prototype.st=function(){return Xd(this.zs)};K.prototype.set_m_beta=K.prototype.Lu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ke(c,a)};Object.defineProperty(K.prototype,\"m_beta\",{get:K.prototype.st,set:K.prototype.Lu});\nK.prototype.get_m_gamma=K.prototype.Ht=function(){return be(this.zs)};K.prototype.set_m_gamma=K.prototype.$u=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pe(c,a)};Object.defineProperty(K.prototype,\"m_gamma\",{get:K.prototype.Ht,set:K.prototype.$u});K.prototype.get_m_minVolumePerCH=K.prototype.Wt=function(){return de(this.zs)};K.prototype.set_m_minVolumePerCH=K.prototype.ov=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);re(c,a)};\nObject.defineProperty(K.prototype,\"m_minVolumePerCH\",{get:K.prototype.Wt,set:K.prototype.ov});K.prototype.get_m_resolution=K.prototype.ju=function(){return ie(this.zs)};K.prototype.set_m_resolution=K.prototype.zv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);we(c,a)};Object.defineProperty(K.prototype,\"m_resolution\",{get:K.prototype.ju,set:K.prototype.zv});K.prototype.get_m_maxNumVerticesPerCH=K.prototype.Vt=function(){return ce(this.zs)};\nK.prototype.set_m_maxNumVerticesPerCH=K.prototype.nv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qe(c,a)};Object.defineProperty(K.prototype,\"m_maxNumVerticesPerCH\",{get:K.prototype.Vt,set:K.prototype.nv});K.prototype.get_m_depth=K.prototype.Bt=function(){return ae(this.zs)};K.prototype.set_m_depth=K.prototype.Uu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);oe(c,a)};Object.defineProperty(K.prototype,\"m_depth\",{get:K.prototype.Bt,set:K.prototype.Uu});\nK.prototype.get_m_planeDownsampling=K.prototype.fu=function(){return he(this.zs)};K.prototype.set_m_planeDownsampling=K.prototype.wv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ve(c,a)};Object.defineProperty(K.prototype,\"m_planeDownsampling\",{get:K.prototype.fu,set:K.prototype.wv});K.prototype.get_m_convexhullDownsampling=K.prototype.zt=function(){return $d(this.zs)};\nK.prototype.set_m_convexhullDownsampling=K.prototype.Su=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ne(c,a)};Object.defineProperty(K.prototype,\"m_convexhullDownsampling\",{get:K.prototype.zt,set:K.prototype.Su});K.prototype.get_m_pca=K.prototype.du=function(){return ge(this.zs)};K.prototype.set_m_pca=K.prototype.uv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ue(c,a)};Object.defineProperty(K.prototype,\"m_pca\",{get:K.prototype.du,set:K.prototype.uv});\nK.prototype.get_m_mode=K.prototype.Xt=function(){return ee(this.zs)};K.prototype.set_m_mode=K.prototype.pv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);se(c,a)};Object.defineProperty(K.prototype,\"m_mode\",{get:K.prototype.Xt,set:K.prototype.pv});K.prototype.get_m_convexhullApproximation=K.prototype.yt=function(){return Zd(this.zs)};K.prototype.set_m_convexhullApproximation=K.prototype.Ru=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);me(c,a)};\nObject.defineProperty(K.prototype,\"m_convexhullApproximation\",{get:K.prototype.yt,set:K.prototype.Ru});K.prototype.get_m_oclAcceleration=K.prototype.cu=function(){return fe(this.zs)};K.prototype.set_m_oclAcceleration=K.prototype.tv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);te(c,a)};Object.defineProperty(K.prototype,\"m_oclAcceleration\",{get:K.prototype.cu,set:K.prototype.tv});K.prototype.__destroy__=function(){Vd(this.zs)};\nfunction Dv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=gg(a);l(Dv)[this.zs]=this}Dv.prototype=Object.create(Zu.prototype);Dv.prototype.constructor=Dv;Dv.prototype.As=Dv;Dv.Bs={};g.btCollisionDispatcher=Dv;Dv.prototype.getNumManifolds=function(){return ig(this.zs)};Dv.prototype.getManifoldByIndexInternal=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(hg(c,a),kv)};Dv.prototype.__destroy__=function(){fg(this.zs)};\nfunction Ev(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===d?cf(a,c):void 0===e?df(a,c,d):void 0===f?ef(a,c,d,e):ff(a,c,d,e,f);l(Ev)[this.zs]=this}Ev.prototype=Object.create(k.prototype);Ev.prototype.constructor=Ev;Ev.prototype.As=Ev;Ev.Bs={};g.btAxisSweep3=Ev;Ev.prototype.__destroy__=function(){bf(this.zs)};\nfunction L(){this.zs=sd();l(L)[this.zs]=this}L.prototype=Object.create(k.prototype);L.prototype.constructor=L;L.prototype.As=L;L.Bs={};g.HACD=L;L.prototype.SetCompacityWeight=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);td(c,a)};L.prototype.SetVolumeWeight=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bd(c,a)};L.prototype.SetConcavity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ud(c,a)};\nL.prototype.SetNClusters=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vd(c,a)};L.prototype.SetNVerticesPerCH=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yd(c,a)};L.prototype.SetPoints=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zd(c,a)};L.prototype.SetNPoints=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);wd(c,a)};L.prototype.SetTriangles=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ad(c,a)};\nL.prototype.SetNTriangles=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xd(c,a)};L.prototype.Compute=function(){nd(this.zs)};L.prototype.GetNClusters=function(){return pd(this.zs)};L.prototype.GetNPointsCH=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return qd(c,a)};L.prototype.GetNTrianglesCH=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return rd(c,a)};\nL.prototype.GetCH=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);return od(e,a,c,d)};L.prototype.__destroy__=function(){Cd(this.zs)};function Xu(){throw\"cannot construct a VoidPtr, no constructor in IDL\";}Xu.prototype=Object.create(k.prototype);Xu.prototype.constructor=Xu;Xu.prototype.As=Xu;Xu.Bs={};g.VoidPtr=Xu;Xu.prototype.__destroy__=function(){Ze(this.zs)};\nfunction M(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===d?Xh(a,c):void 0===e?_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(a,c,d):Yh(a,c,d,e);l(M)[this.zs]=this}M.prototype=Object.create(Yu.prototype);M.prototype.constructor=M;M.prototype.As=M;M.Bs={};g.btConeTwistConstraint=M;\nM.prototype.setLimit=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);fi(d,a,c)};M.prototype.setAngularOnly=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ci(c,a)};M.prototype.setDamping=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ei(c,a)};M.prototype.enableMotor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$h(c,a)};M.prototype.setMaxMotorImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hi(c,a)};\nM.prototype.setMaxMotorImpulseNormalized=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gi(c,a)};M.prototype.setMotorTarget=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ji(c,a)};M.prototype.setMotorTargetInConstraintSpace=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ii(c,a)};M.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zh(c,a)};M.prototype.getBreakingImpulseThreshold=function(){return ai(this.zs)};\nM.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);di(c,a)};M.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return bi(d,a,c)};M.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ki(e,a,c,d)};M.prototype.__destroy__=function(){Wh(this.zs)};\nfunction Fv(a,c,d,e,f,n,r){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);this.zs=void 0===d?tn(a,c):void 0===e?un(a,c,d):void 0===f?vn(a,c,d,e):void 0===n?wn(a,c,d,e,f):void 0===r?xn(a,c,d,e,f,n):yn(a,c,d,e,f,n,r);l(Fv)[this.zs]=this}Fv.prototype=Object.create(Yu.prototype);Fv.prototype.constructor=Fv;\nFv.prototype.As=Fv;Fv.Bs={};g.btHingeConstraint=Fv;Fv.prototype.setLimit=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);void 0===f?Gn(n,a,c,d,e):Hn(n,a,c,d,e,f)};Fv.prototype.enableAngularMotor=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);zn(e,a,c,d)};\nFv.prototype.setAngularOnly=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);En(c,a)};Fv.prototype.enableMotor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bn(c,a)};Fv.prototype.setMaxMotorImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);In(c,a)};Fv.prototype.setMotorTarget=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Jn(d,a,c)};\nFv.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);An(c,a)};Fv.prototype.getBreakingImpulseThreshold=function(){return Cn(this.zs)};Fv.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fn(c,a)};Fv.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Dn(d,a,c)};\nFv.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Kn(e,a,c,d)};Fv.prototype.__destroy__=function(){sn(this.zs)};function Gv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Nh(a,c);l(Gv)[this.zs]=this}Gv.prototype=Object.create(fv.prototype);Gv.prototype.constructor=Gv;Gv.prototype.As=Gv;Gv.Bs={};g.btConeShapeZ=Gv;\nGv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Qh(c,a)};Gv.prototype.getLocalScaling=function(){return m(Ph(this.zs),q)};Gv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Oh(d,a,c)};Gv.prototype.__destroy__=function(){Mh(this.zs)};function Hv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Ih(a,c);l(Hv)[this.zs]=this}Hv.prototype=Object.create(fv.prototype);\nHv.prototype.constructor=Hv;Hv.prototype.As=Hv;Hv.Bs={};g.btConeShapeX=Hv;Hv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lh(c,a)};Hv.prototype.getLocalScaling=function(){return m(Kh(this.zs),q)};Hv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Jh(d,a,c)};Hv.prototype.__destroy__=function(){Hh(this.zs)};\nfunction Iv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?Jt():void 0===c?Kt(a):Lt(a,c);l(Iv)[this.zs]=this}Iv.prototype=Object.create(mv.prototype);Iv.prototype.constructor=Iv;Iv.prototype.As=Iv;Iv.Bs={};g.btTriangleMesh=Iv;Iv.prototype.addTriangle=function(a,c,d,e){var f=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);void 0===e?Ht(f,a,c,d):It(f,a,c,d,e)};\nIv.prototype.findOrAddVertex=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Mt(d,a,c)};Iv.prototype.addIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gt(c,a)};Iv.prototype.getIndexedMeshArray=function(){return m(Nt(this.zs),zv)};Iv.prototype.setScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ot(c,a)};Iv.prototype.__destroy__=function(){Ft(this.zs)};\nfunction Jv(a,c){b.Is();\"object\"==typeof a&&(a=Wu(a));c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?Hi():void 0===c?Ii(a):Ji(a,c);l(Jv)[this.zs]=this}Jv.prototype=Object.create(p.prototype);Jv.prototype.constructor=Jv;Jv.prototype.As=Jv;Jv.Bs={};g.btConvexHullShape=Jv;Jv.prototype.addPoint=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);void 0===c?Fi(d,a):Gi(d,a,c)};\nJv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Si(c,a)};Jv.prototype.getMargin=function(){return Ni(this.zs)};Jv.prototype.getNumVertices=function(){return Oi(this.zs)};Jv.prototype.initializePolyhedralFeatures=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return!!Pi(c,a)};Jv.prototype.recalcLocalAabb=function(){Qi(this.zs)};Jv.prototype.getConvexPolyhedron=function(){return m(Li(this.zs),O)};\nJv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ri(c,a)};Jv.prototype.getLocalScaling=function(){return m(Mi(this.zs),q)};Jv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ki(d,a,c)};Jv.prototype.__destroy__=function(){Ei(this.zs)};function Kv(){throw\"cannot construct a btCollisionObjectWrapper, no constructor in IDL\";}Kv.prototype=Object.create(k.prototype);\nKv.prototype.constructor=Kv;Kv.prototype.As=Kv;Kv.Bs={};g.btCollisionObjectWrapper=Kv;Kv.prototype.getWorldTransform=function(){return m(lg(this.zs),u)};Kv.prototype.getCollisionObject=function(){return m(jg(this.zs),t)};Kv.prototype.getCollisionShape=function(){return m(kg(this.zs),p)};function Lv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=Ms(a);l(Lv)[this.zs]=this}Lv.prototype=Object.create(k.prototype);Lv.prototype.constructor=Lv;Lv.prototype.As=Lv;Lv.Bs={};g.btShapeHull=Lv;\nLv.prototype.buildHull=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return!!Ns(c,a)};Lv.prototype.numVertices=function(){return Ps(this.zs)};Lv.prototype.getVertexPointer=function(){return m(Os(this.zs),q)};Lv.prototype.__destroy__=function(){Ls(this.zs)};function Mv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?Pj():void 0===c?Qj(a):Rj(a,c);l(Mv)[this.zs]=this}Mv.prototype=Object.create(nv.prototype);Mv.prototype.constructor=Mv;\nMv.prototype.As=Mv;Mv.Bs={};g.btDefaultMotionState=Mv;Mv.prototype.getWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Sj(c,a)};Mv.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uj(c,a)};Mv.prototype.get_m_graphicsWorldTrans=Mv.prototype.It=function(){return m(Tj(this.zs),u)};Mv.prototype.set_m_graphicsWorldTrans=Mv.prototype.av=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vj(c,a)};\nObject.defineProperty(Mv.prototype,\"m_graphicsWorldTrans\",{get:Mv.prototype.It,set:Mv.prototype.av});Mv.prototype.__destroy__=function(){Oj(this.zs)};\nfunction P(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===a?qu():void 0===c?_emscripten_bind_btVector4_btVector4_1(a):void 0===d?_emscripten_bind_btVector4_btVector4_2(a,c):void 0===e?_emscripten_bind_btVector4_btVector4_3(a,c,d):ru(a,c,d,e);l(P)[this.zs]=this}P.prototype=Object.create(q.prototype);P.prototype.constructor=P;P.prototype.As=P;P.Bs={};g.btVector4=P;\nP.prototype.w=P.prototype.ht=function(){return Eu(this.zs)};P.prototype.setValue=function(a,c,d,e){var f=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);Au(f,a,c,d,e)};P.prototype.length=P.prototype.length=function(){return uu(this.zs)};P.prototype.length2=function(){return tu(this.zs)};P.prototype.x=P.prototype.x=function(){return Fu(this.zs)};P.prototype.y=P.prototype.y=function(){return Gu(this.zs)};\nP.prototype.z=P.prototype.z=function(){return Hu(this.zs)};P.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bu(c,a)};P.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cu(c,a)};P.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Du(c,a)};P.prototype.normalize=P.prototype.normalize=function(){vu(this.zs)};\nP.prototype.rotate=P.prototype.rotate=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return m(zu(d,a,c),q)};P.prototype.dot=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return su(c,a)};P.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(xu(c,a),q)};P.prototype.op_add=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(wu(c,a),q)};\nP.prototype.op_sub=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(yu(c,a),q)};P.prototype.__destroy__=function(){pu(this.zs)};function Nv(){this.zs=Nj();l(Nv)[this.zs]=this}Nv.prototype=Object.create(k.prototype);Nv.prototype.constructor=Nv;Nv.prototype.As=Nv;Nv.Bs={};g.btDefaultCollisionConstructionInfo=Nv;Nv.prototype.__destroy__=function(){Mj(this.zs)};function wv(){throw\"cannot construct a btVector3Array, no constructor in IDL\";}wv.prototype=Object.create(k.prototype);\nwv.prototype.constructor=wv;wv.prototype.As=wv;wv.Bs={};g.btVector3Array=wv;wv.prototype.size=wv.prototype.size=function(){return Xt(this.zs)};wv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Wt(c,a),q)};wv.prototype.__destroy__=function(){Vt(this.zs)};function Ov(){throw\"cannot construct a btConstraintSolver, no constructor in IDL\";}Ov.prototype=Object.create(k.prototype);Ov.prototype.constructor=Ov;Ov.prototype.As=Ov;Ov.Bs={};g.btConstraintSolver=Ov;\nOv.prototype.__destroy__=function(){wi(this.zs)};function Pv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=mj(a);l(Pv)[this.zs]=this}Pv.prototype=Object.create(iv.prototype);Pv.prototype.constructor=Pv;Pv.prototype.As=Pv;Pv.Bs={};g.btCylinderShapeX=Pv;Pv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rj(c,a)};Pv.prototype.getMargin=function(){return pj(this.zs)};Pv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qj(c,a)};\nPv.prototype.getLocalScaling=function(){return m(oj(this.zs),q)};Pv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);nj(d,a,c)};Pv.prototype.__destroy__=function(){lj(this.zs)};function Qv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=tj(a);l(Qv)[this.zs]=this}Qv.prototype=Object.create(iv.prototype);Qv.prototype.constructor=Qv;Qv.prototype.As=Qv;Qv.Bs={};g.btCylinderShapeZ=Qv;\nQv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yj(c,a)};Qv.prototype.getMargin=function(){return wj(this.zs)};Qv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xj(c,a)};Qv.prototype.getLocalScaling=function(){return m(vj(this.zs),q)};Qv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);uj(d,a,c)};Qv.prototype.__destroy__=function(){sj(this.zs)};\nfunction O(){throw\"cannot construct a btConvexPolyhedron, no constructor in IDL\";}O.prototype=Object.create(k.prototype);O.prototype.constructor=O;O.prototype.As=O;O.Bs={};g.btConvexPolyhedron=O;O.prototype.get_m_vertices=O.prototype.Au=function(){return m(Vi(this.zs),wv)};O.prototype.set_m_vertices=O.prototype.Pv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xi(c,a)};Object.defineProperty(O.prototype,\"m_vertices\",{get:O.prototype.Au,set:O.prototype.Pv});\nO.prototype.get_m_faces=O.prototype.Ft=function(){return m(Ui(this.zs),Rv)};O.prototype.set_m_faces=O.prototype.Yu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wi(c,a)};Object.defineProperty(O.prototype,\"m_faces\",{get:O.prototype.Ft,set:O.prototype.Yu});O.prototype.__destroy__=function(){Ti(this.zs)};function Sv(){this.zs=Ks();l(Sv)[this.zs]=this}Sv.prototype=Object.create(k.prototype);Sv.prototype.constructor=Sv;Sv.prototype.As=Sv;Sv.Bs={};g.btSequentialImpulseConstraintSolver=Sv;\nSv.prototype.__destroy__=function(){Js(this.zs)};function Tv(a,c,d){b.Is();a&&\"object\"===typeof a&&(a=a.zs);\"object\"==typeof c&&(c=Wu(c));d&&\"object\"===typeof d&&(d=d.zs);this.zs=Xo(a,c,d);l(Tv)[this.zs]=this}Tv.prototype=Object.create(p.prototype);Tv.prototype.constructor=Tv;Tv.prototype.As=Tv;Tv.Bs={};g.btMultiSphereShape=Tv;Tv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$o(c,a)};Tv.prototype.getLocalScaling=function(){return m(Zo(this.zs),q)};\nTv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Yo(d,a,c)};Tv.prototype.__destroy__=function(){Wo(this.zs)};function Uv(){throw\"cannot construct a btIntArray, no constructor in IDL\";}Uv.prototype=Object.create(k.prototype);Uv.prototype.constructor=Uv;Uv.prototype.As=Uv;Uv.Bs={};g.btIntArray=Uv;Uv.prototype.size=Uv.prototype.size=function(){return $n(this.zs)};\nUv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Zn(c,a)};Uv.prototype.__destroy__=function(){Yn(this.zs)};function Q(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=fk(a,c,d,e);l(Q)[this.zs]=this}Q.prototype=Object.create(y.prototype);Q.prototype.constructor=Q;Q.prototype.As=Q;Q.Bs={};g.btDiscreteDynamicsWorld=Q;\nQ.prototype.setGravity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ck(c,a)};Q.prototype.getGravity=function(){return m(pk(this.zs),q)};Q.prototype.addRigidBody=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?dk(e,a):void 0===d?_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(e,a,c):ek(e,a,c,d)};\nQ.prototype.removeRigidBody=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);wk(c,a)};Q.prototype.addConstraint=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);void 0===c?bk(d,a):ck(d,a,c)};Q.prototype.removeConstraint=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vk(c,a)};\nQ.prototype.stepSimulation=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);return void 0===c?Dk(e,a):void 0===d?Ek(e,a,c):Fk(e,a,c,d)};Q.prototype.setContactAddedCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xk(c,a)};Q.prototype.setContactProcessedCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zk(c,a)};\nQ.prototype.setContactDestroyedCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yk(c,a)};Q.prototype.getDispatcher=function(){return m(ok(this.zs),Zu)};Q.prototype.rayTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);sk(e,a,c,d)};Q.prototype.getPairCache=function(){return m(qk(this.zs),$u)};Q.prototype.getDispatchInfo=function(){return m(nk(this.zs),x)};\nQ.prototype.addCollisionObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?Yj(e,a):void 0===d?Zj(e,a,c):ak(e,a,c,d)};Q.prototype.removeCollisionObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);uk(c,a)};Q.prototype.getBroadphase=function(){return m(lk(this.zs),av)};\nQ.prototype.convexSweepTest=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);ik(n,a,c,d,e,f)};Q.prototype.contactPairTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);gk(e,a,c,d)};\nQ.prototype.contactTest=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);hk(d,a,c)};Q.prototype.setForceUpdateAllAabbs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bk(c,a)};Q.prototype.updateSingleAabb=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gk(c,a)};Q.prototype.setDebugDrawer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ak(c,a)};Q.prototype.getDebugDrawer=function(){return m(mk(this.zs),bv)};\nQ.prototype.debugDrawWorld=function(){kk(this.zs)};Q.prototype.debugDrawObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);jk(e,a,c,d)};Q.prototype.addAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xj(c,a)};Q.prototype.removeAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);tk(c,a)};Q.prototype.getSolverInfo=function(){return m(rk(this.zs),z)};Q.prototype.__destroy__=function(){Wj(this.zs)};\nfunction Vv(){this.zs=kn();l(Vv)[this.zs]=this}Vv.prototype=Object.create(k.prototype);Vv.prototype.constructor=Vv;Vv.prototype.As=Vv;Vv.Bs={};g.btGhostPairCallback=Vv;Vv.prototype.__destroy__=function(){jn(this.zs)};function Wv(){throw\"cannot construct a btOverlappingPairCallback, no constructor in IDL\";}Wv.prototype=Object.create(k.prototype);Wv.prototype.constructor=Wv;Wv.prototype.As=Wv;Wv.Bs={};g.btOverlappingPairCallback=Wv;Wv.prototype.__destroy__=function(){ep(this.zs)};\nfunction R(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===e?bo(a,c,d):co(a,c,d,e);l(R)[this.zs]=this}R.prototype=Object.create(gv.prototype);R.prototype.constructor=R;R.prototype.As=R;R.Bs={};g.btKinematicCharacterController=R;R.prototype.setUpAxis=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ro(c,a)};\nR.prototype.setWalkDirection=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vo(c,a)};R.prototype.setVelocityForTimeInterval=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);uo(d,a,c)};R.prototype.warp=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xo(c,a)};R.prototype.preStep=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lo(c,a)};\nR.prototype.playerStep=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ko(d,a,c)};R.prototype.setFallSpeed=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mo(c,a)};R.prototype.setJumpSpeed=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);oo(c,a)};R.prototype.setMaxJumpHeight=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);po(c,a)};R.prototype.canJump=function(){return!!eo(this.zs)};R.prototype.jump=function(){io(this.zs)};\nR.prototype.setGravity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);no(c,a)};R.prototype.getGravity=function(){return go(this.zs)};R.prototype.setMaxSlope=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qo(c,a)};R.prototype.getMaxSlope=function(){return ho(this.zs)};R.prototype.getGhostObject=function(){return m(fo(this.zs),S)};R.prototype.setUseGhostSweepTest=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);to(c,a)};R.prototype.onGround=function(){return!!jo(this.zs)};\nR.prototype.setUpInterpolate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);so(c,a)};R.prototype.updateAction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);wo(d,a,c)};R.prototype.__destroy__=function(){ao(this.zs)};function Rv(){throw\"cannot construct a btFaceArray, no constructor in IDL\";}Rv.prototype=Object.create(k.prototype);Rv.prototype.constructor=Rv;Rv.prototype.As=Rv;Rv.Bs={};g.btFaceArray=Rv;Rv.prototype.size=Rv.prototype.size=function(){return Jl(this.zs)};\nRv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Il(c,a),T)};Rv.prototype.__destroy__=function(){Hl(this.zs)};function Xv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=jt(a,c);l(Xv)[this.zs]=this}Xv.prototype=Object.create(cv.prototype);Xv.prototype.constructor=Xv;Xv.prototype.As=Xv;Xv.Bs={};g.btStaticPlaneShape=Xv;Xv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mt(c,a)};\nXv.prototype.getLocalScaling=function(){return m(lt(this.zs),q)};Xv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);kt(d,a,c)};Xv.prototype.__destroy__=function(){it(this.zs)};function $u(){throw\"cannot construct a btOverlappingPairCache, no constructor in IDL\";}$u.prototype=Object.create(k.prototype);$u.prototype.constructor=$u;$u.prototype.As=$u;$u.Bs={};g.btOverlappingPairCache=$u;\n$u.prototype.setInternalGhostPairCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dp(c,a)};$u.prototype.removeOverlappingPairsContainingProxy=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);cp(d,a,c)};$u.prototype.getNumOverlappingPairs=function(){return bp(this.zs)};$u.prototype.__destroy__=function(){ap(this.zs)};function Av(){throw\"cannot construct a btIndexedMesh, no constructor in IDL\";}Av.prototype=Object.create(k.prototype);\nAv.prototype.constructor=Av;Av.prototype.As=Av;Av.Bs={};g.btIndexedMesh=Av;Av.prototype.get_m_numTriangles=Av.prototype.bu=function(){return Wn(this.zs)};Av.prototype.set_m_numTriangles=Av.prototype.sv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xn(c,a)};Object.defineProperty(Av.prototype,\"m_numTriangles\",{get:Av.prototype.bu,set:Av.prototype.sv});Av.prototype.__destroy__=function(){Vn(this.zs)};\nfunction Yv(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=Ue(a,c,d);l(Yv)[this.zs]=this}Yv.prototype=Object.create(k.prototype);Yv.prototype.constructor=Yv;Yv.prototype.As=Yv;Yv.Bs={};g.Vec3Real=Yv;Yv.prototype.X=function(){return Ve(this.zs)};Yv.prototype.Y=function(){return We(this.zs)};Yv.prototype.Z=function(){return Xe(this.zs)};Yv.prototype.__destroy__=function(){Ye(this.zs)};\nfunction Zv(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=Ql(a,c,d,e);l(Zv)[this.zs]=this}Zv.prototype=Object.create(Yu.prototype);Zv.prototype.constructor=Zv;Zv.prototype.As=Zv;Zv.Bs={};g.btFixedConstraint=Zv;Zv.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Rl(c,a)};Zv.prototype.getBreakingImpulseThreshold=function(){return Sl(this.zs)};\nZv.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ul(c,a)};Zv.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Tl(d,a,c)};Zv.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Vl(e,a,c,d)};Zv.prototype.__destroy__=function(){Pl(this.zs)};\nfunction u(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?qt():void 0===c?_emscripten_bind_btTransform_btTransform_1(a):rt(a,c);l(u)[this.zs]=this}u.prototype=Object.create(k.prototype);u.prototype.constructor=u;u.prototype.As=u;u.Bs={};g.btTransform=u;u.prototype.setIdentity=function(){yt(this.zs)};u.prototype.setOrigin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zt(c,a)};\nu.prototype.setRotation=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);At(c,a)};u.prototype.getOrigin=function(){return m(tt(this.zs),q)};u.prototype.getRotation=function(){return m(ut(this.zs),U)};u.prototype.getBasis=function(){return m(st(this.zs),pv)};u.prototype.setFromOpenGLMatrix=function(a){var c=this.zs;b.Is();\"object\"==typeof a&&(a=Wu(a));xt(c,a)};u.prototype.inverse=u.prototype.inverse=function(){return m(vt(this.zs),u)};\nu.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(wt(c,a),u)};u.prototype.__destroy__=function(){pt(this.zs)};function V(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=tc(a,c);l(V)[this.zs]=this}V.prototype=Object.create(C.prototype);V.prototype.constructor=V;V.prototype.As=V;V.Bs={};g.ClosestRayResultCallback=V;V.prototype.hasHit=function(){return!!Dc(this.zs)};\nV.prototype.get_m_rayFromWorld=V.prototype.bt=function(){return m(Bc(this.zs),q)};V.prototype.set_m_rayFromWorld=V.prototype.et=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lc(c,a)};Object.defineProperty(V.prototype,\"m_rayFromWorld\",{get:V.prototype.bt,set:V.prototype.et});V.prototype.get_m_rayToWorld=V.prototype.ct=function(){return m(Cc(this.zs),q)};V.prototype.set_m_rayToWorld=V.prototype.ft=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mc(c,a)};\nObject.defineProperty(V.prototype,\"m_rayToWorld\",{get:V.prototype.ct,set:V.prototype.ft});V.prototype.get_m_hitNormalWorld=V.prototype.Ns=function(){return m(zc(this.zs),q)};V.prototype.set_m_hitNormalWorld=V.prototype.Ss=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jc(c,a)};Object.defineProperty(V.prototype,\"m_hitNormalWorld\",{get:V.prototype.Ns,set:V.prototype.Ss});V.prototype.get_m_hitPointWorld=V.prototype.Os=function(){return m(Ac(this.zs),q)};\nV.prototype.set_m_hitPointWorld=V.prototype.Ts=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kc(c,a)};Object.defineProperty(V.prototype,\"m_hitPointWorld\",{get:V.prototype.Os,set:V.prototype.Ts});V.prototype.get_m_collisionFilterGroup=V.prototype.Ds=function(){return wc(this.zs)};V.prototype.set_m_collisionFilterGroup=V.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gc(c,a)};Object.defineProperty(V.prototype,\"m_collisionFilterGroup\",{get:V.prototype.Ds,set:V.prototype.Fs});\nV.prototype.get_m_collisionFilterMask=V.prototype.Es=function(){return xc(this.zs)};V.prototype.set_m_collisionFilterMask=V.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Hc(c,a)};Object.defineProperty(V.prototype,\"m_collisionFilterMask\",{get:V.prototype.Es,set:V.prototype.Gs});V.prototype.get_m_closestHitFraction=V.prototype.Hs=function(){return vc(this.zs)};\nV.prototype.set_m_closestHitFraction=V.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fc(c,a)};Object.defineProperty(V.prototype,\"m_closestHitFraction\",{get:V.prototype.Hs,set:V.prototype.Js});V.prototype.get_m_collisionObject=V.prototype.Ms=function(){return m(yc(this.zs),t)};V.prototype.set_m_collisionObject=V.prototype.Rs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ic(c,a)};Object.defineProperty(V.prototype,\"m_collisionObject\",{get:V.prototype.Ms,set:V.prototype.Rs});\nV.prototype.__destroy__=function(){uc(this.zs)};function $v(){this.zs=Nc();l($v)[this.zs]=this}$v.prototype=Object.create(ov.prototype);$v.prototype.constructor=$v;$v.prototype.As=$v;$v.Bs={};g.ConcreteContactResultCallback=$v;\n$v.prototype.addSingleResult=function(a,c,d,e,f,n,r){var N=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);return Pc(N,a,c,d,e,f,n,r)};$v.prototype.__destroy__=function(){Oc(this.zs)};\nfunction aw(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=void 0===d?wf(a,c):xf(a,c,d);l(aw)[this.zs]=this}aw.prototype=Object.create(ev.prototype);aw.prototype.constructor=aw;aw.prototype.As=aw;aw.Bs={};g.btBvhTriangleMeshShape=aw;aw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Af(c,a)};aw.prototype.getLocalScaling=function(){return m(zf(this.zs),q)};\naw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);yf(d,a,c)};aw.prototype.__destroy__=function(){vf(this.zs)};function bw(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=Pe(a,c,d);l(bw)[this.zs]=this}bw.prototype=Object.create(k.prototype);bw.prototype.constructor=bw;bw.prototype.As=bw;bw.Bs={};g.Vec3Long=bw;bw.prototype.X=function(){return Qe(this.zs)};\nbw.prototype.Y=function(){return Re(this.zs)};bw.prototype.Z=function(){return Se(this.zs)};bw.prototype.__destroy__=function(){Te(this.zs)};function vv(){throw\"cannot construct a btConstCollisionObjectArray, no constructor in IDL\";}vv.prototype=Object.create(k.prototype);vv.prototype.constructor=vv;vv.prototype.As=vv;vv.Bs={};g.btConstCollisionObjectArray=vv;vv.prototype.size=vv.prototype.size=function(){return ni(this.zs)};\nvv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(mi(c,a),t)};vv.prototype.__destroy__=function(){li(this.zs)};function cw(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===e?Rs(a,c,d):void 0===f?_emscripten_bind_btSliderConstraint_btSliderConstraint_4(a,c,d,e):Ss(a,c,d,e,f);l(cw)[this.zs]=this}cw.prototype=Object.create(Yu.prototype);\ncw.prototype.constructor=cw;cw.prototype.As=cw;cw.Bs={};g.btSliderConstraint=cw;cw.prototype.setLowerLinLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ys(c,a)};cw.prototype.setUpperLinLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);at(c,a)};cw.prototype.setLowerAngLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xs(c,a)};cw.prototype.setUpperAngLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$s(c,a)};\ncw.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ts(c,a)};cw.prototype.getBreakingImpulseThreshold=function(){return Us(this.zs)};cw.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ws(c,a)};cw.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Vs(d,a,c)};\ncw.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Zs(e,a,c,d)};cw.prototype.__destroy__=function(){Qs(this.zs)};function S(){this.zs=ip();l(S)[this.zs]=this}S.prototype=Object.create(A.prototype);S.prototype.constructor=S;S.prototype.As=S;S.Bs={};g.btPairCachingGhostObject=S;\nS.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ap(d,a,c)};S.prototype.getCollisionShape=function(){return m(mp(this.zs),p)};S.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fp(c,a)};S.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zp(c,a)};\nS.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jp(c,a)};S.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?gp(c):hp(c,a)};S.prototype.isActive=function(){return!!vp(this.zs)};S.prototype.isKinematicObject=function(){return!!wp(this.zs)};S.prototype.isStaticObject=function(){return!!xp(this.zs)};S.prototype.isStaticOrKinematicObject=function(){return!!yp(this.zs)};S.prototype.getRestitution=function(){return qp(this.zs)};\nS.prototype.getFriction=function(){return np(this.zs)};S.prototype.getRollingFriction=function(){return rp(this.zs)};S.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Hp(c,a)};S.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gp(c,a)};S.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ip(c,a)};S.prototype.getWorldTransform=function(){return m(up(this.zs),u)};S.prototype.getCollisionFlags=function(){return lp(this.zs)};\nS.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Dp(c,a)};S.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lp(c,a)};S.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ep(c,a)};S.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bp(c,a)};S.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cp(c,a)};\nS.prototype.getUserIndex=function(){return sp(this.zs)};S.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jp(c,a)};S.prototype.getUserPointer=function(){return m(tp(this.zs),Xu)};S.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kp(c,a)};S.prototype.getBroadphaseHandle=function(){return m(kp(this.zs),v)};S.prototype.getNumOverlappingObjects=function(){return op(this.zs)};\nS.prototype.getOverlappingObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(pp(c,a),t)};S.prototype.__destroy__=function(){fp(this.zs)};function E(){throw\"cannot construct a btManifoldPoint, no constructor in IDL\";}E.prototype=Object.create(k.prototype);E.prototype.constructor=E;E.prototype.As=E;E.Bs={};g.btManifoldPoint=E;E.prototype.getPositionWorldOnA=function(){return m(Bo(this.zs),q)};E.prototype.getPositionWorldOnB=function(){return m(Co(this.zs),q)};\nE.prototype.getAppliedImpulse=function(){return zo(this.zs)};E.prototype.getDistance=function(){return Ao(this.zs)};E.prototype.get_m_localPointA=E.prototype.St=function(){return m(Do(this.zs),q)};E.prototype.set_m_localPointA=E.prototype.kv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jo(c,a)};Object.defineProperty(E.prototype,\"m_localPointA\",{get:E.prototype.St,set:E.prototype.kv});E.prototype.get_m_localPointB=E.prototype.Tt=function(){return m(Eo(this.zs),q)};\nE.prototype.set_m_localPointB=E.prototype.lv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ko(c,a)};Object.defineProperty(E.prototype,\"m_localPointB\",{get:E.prototype.Tt,set:E.prototype.lv});E.prototype.get_m_positionWorldOnB=E.prototype.iu=function(){return m(Ho(this.zs),q)};E.prototype.set_m_positionWorldOnB=E.prototype.yv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);No(c,a)};Object.defineProperty(E.prototype,\"m_positionWorldOnB\",{get:E.prototype.iu,set:E.prototype.yv});\nE.prototype.get_m_positionWorldOnA=E.prototype.hu=function(){return m(Go(this.zs),q)};E.prototype.set_m_positionWorldOnA=E.prototype.xv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mo(c,a)};Object.defineProperty(E.prototype,\"m_positionWorldOnA\",{get:E.prototype.hu,set:E.prototype.xv});E.prototype.get_m_normalWorldOnB=E.prototype.$t=function(){return m(Fo(this.zs),q)};E.prototype.set_m_normalWorldOnB=E.prototype.qv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lo(c,a)};\nObject.defineProperty(E.prototype,\"m_normalWorldOnB\",{get:E.prototype.$t,set:E.prototype.qv});E.prototype.get_m_userPersistentData=E.prototype.zu=function(){return Io(this.zs)};E.prototype.set_m_userPersistentData=E.prototype.Ov=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Oo(c,a)};Object.defineProperty(E.prototype,\"m_userPersistentData\",{get:E.prototype.zu,set:E.prototype.Ov});E.prototype.__destroy__=function(){yo(this.zs)};\nfunction W(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===d?Tp(a,c):void 0===e?_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(a,c,d):Up(a,c,d,e);l(W)[this.zs]=this}W.prototype=Object.create(Yu.prototype);W.prototype.constructor=W;W.prototype.As=W;W.Bs={};g.btPoint2PointConstraint=W;W.prototype.setPivotA=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cq(c,a)};\nW.prototype.setPivotB=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dq(c,a)};W.prototype.getPivotInA=function(){return m(Yp(this.zs),q)};W.prototype.getPivotInB=function(){return m(Zp(this.zs),q)};W.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vp(c,a)};W.prototype.getBreakingImpulseThreshold=function(){return Wp(this.zs)};W.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);aq(c,a)};\nW.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Xp(d,a,c)};W.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);bq(e,a,c,d)};W.prototype.get_m_setting=W.prototype.mu=function(){return m($p(this.zs),H)};W.prototype.set_m_setting=W.prototype.Cv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);eq(c,a)};\nObject.defineProperty(W.prototype,\"m_setting\",{get:W.prototype.mu,set:W.prototype.Cv});W.prototype.__destroy__=function(){Sp(this.zs)};function v(){throw\"cannot construct a btBroadphaseProxy, no constructor in IDL\";}v.prototype=Object.create(k.prototype);v.prototype.constructor=v;v.prototype.As=v;v.Bs={};g.btBroadphaseProxy=v;v.prototype.get_m_collisionFilterGroup=v.prototype.Ds=function(){return rf(this.zs)};\nv.prototype.set_m_collisionFilterGroup=v.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);tf(c,a)};Object.defineProperty(v.prototype,\"m_collisionFilterGroup\",{get:v.prototype.Ds,set:v.prototype.Fs});v.prototype.get_m_collisionFilterMask=v.prototype.Es=function(){return sf(this.zs)};v.prototype.set_m_collisionFilterMask=v.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);uf(c,a)};\nObject.defineProperty(v.prototype,\"m_collisionFilterMask\",{get:v.prototype.Es,set:v.prototype.Gs});v.prototype.__destroy__=function(){qf(this.zs)};function dw(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=hf(a);l(dw)[this.zs]=this}dw.prototype=Object.create(p.prototype);dw.prototype.constructor=dw;dw.prototype.As=dw;dw.Bs={};g.btBoxShape=dw;dw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nf(c,a)};dw.prototype.getMargin=function(){return lf(this.zs)};\ndw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mf(c,a)};dw.prototype.getLocalScaling=function(){return m(kf(this.zs),q)};dw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);jf(d,a,c)};dw.prototype.__destroy__=function(){gf(this.zs)};function T(){throw\"cannot construct a btFace, no constructor in IDL\";}T.prototype=Object.create(k.prototype);T.prototype.constructor=T;\nT.prototype.As=T;T.Bs={};g.btFace=T;T.prototype.get_m_indices=T.prototype.Pt=function(){return m(Ll(this.zs),Uv)};T.prototype.set_m_indices=T.prototype.hv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Nl(c,a)};Object.defineProperty(T.prototype,\"m_indices\",{get:T.prototype.Pt,set:T.prototype.hv});T.prototype.get_m_plane=T.prototype.eu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Ml(c,a)};\nT.prototype.set_m_plane=T.prototype.vv=function(a,c){var d=this.zs;b.Is();a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ol(d,a,c)};Object.defineProperty(T.prototype,\"m_plane\",{get:T.prototype.eu,set:T.prototype.vv});T.prototype.__destroy__=function(){Kl(this.zs)};function ew(){this.zs=fd();l(ew)[this.zs]=this}ew.prototype=Object.create(bv.prototype);ew.prototype.constructor=ew;ew.prototype.As=ew;ew.Bs={};g.DebugDrawer=ew;\new.prototype.drawLine=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);jd(e,a,c,d)};ew.prototype.drawContactPoint=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);id(n,a,c,d,e,f)};\new.prototype.reportErrorWarning=function(a){var c=this.zs;b.Is();a=a&&\"object\"===typeof a?a.zs:Vu(a);ld(c,a)};ew.prototype.draw3dText=function(a,c){var d=this.zs;b.Is();a&&\"object\"===typeof a&&(a=a.zs);c=c&&\"object\"===typeof c?c.zs:Vu(c);hd(d,a,c)};ew.prototype.setDebugMode=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);md(c,a)};ew.prototype.getDebugMode=function(){return kd(this.zs)};ew.prototype.__destroy__=function(){gd(this.zs)};\nfunction fw(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Cf(a,c);l(fw)[this.zs]=this}fw.prototype=Object.create(dv.prototype);fw.prototype.constructor=fw;fw.prototype.As=fw;fw.Bs={};g.btCapsuleShapeX=fw;fw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kf(c,a)};fw.prototype.getMargin=function(){return Gf(this.zs)};fw.prototype.getUpAxis=function(){return If(this.zs)};fw.prototype.getRadius=function(){return Hf(this.zs)};\nfw.prototype.getHalfHeight=function(){return Ef(this.zs)};fw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jf(c,a)};fw.prototype.getLocalScaling=function(){return m(Ff(this.zs),q)};fw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Df(d,a,c)};fw.prototype.__destroy__=function(){Bf(this.zs)};\nfunction U(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=rq(a,c,d,e);l(U)[this.zs]=this}U.prototype=Object.create(hv.prototype);U.prototype.constructor=U;U.prototype.As=U;U.Bs={};g.btQuaternion=U;U.prototype.setValue=function(a,c,d,e){var f=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);Iq(f,a,c,d,e)};\nU.prototype.setEulerZYX=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Gq(e,a,c,d)};U.prototype.setRotation=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Hq(d,a,c)};U.prototype.normalize=U.prototype.normalize=function(){zq(this.zs)};U.prototype.length2=function(){return xq(this.zs)};U.prototype.length=U.prototype.length=function(){return yq(this.zs)};\nU.prototype.dot=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return sq(c,a)};U.prototype.normalized=function(){return m(Aq(this.zs),U)};U.prototype.getAxis=function(){return m(vq(this.zs),q)};U.prototype.inverse=U.prototype.inverse=function(){return m(wq(this.zs),U)};U.prototype.getAngle=function(){return uq(this.zs)};U.prototype.getAngleShortestPath=function(){return tq(this.zs)};\nU.prototype.angle=U.prototype.angle=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return qq(c,a)};U.prototype.angleShortestPath=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return pq(c,a)};U.prototype.op_add=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Bq(c,a),U)};U.prototype.op_sub=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Fq(c,a),U)};\nU.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Dq(c,a),U)};U.prototype.op_mulq=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Eq(c,a),U)};U.prototype.op_div=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Cq(c,a),U)};U.prototype.x=U.prototype.x=function(){return Oq(this.zs)};U.prototype.y=U.prototype.y=function(){return Pq(this.zs)};U.prototype.z=U.prototype.z=function(){return Qq(this.zs)};\nU.prototype.w=U.prototype.ht=function(){return Nq(this.zs)};U.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kq(c,a)};U.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lq(c,a)};U.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mq(c,a)};U.prototype.setW=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jq(c,a)};U.prototype.__destroy__=function(){oq(this.zs)};\nfunction gw(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Mf(a,c);l(gw)[this.zs]=this}gw.prototype=Object.create(dv.prototype);gw.prototype.constructor=gw;gw.prototype.As=gw;gw.Bs={};g.btCapsuleShapeZ=gw;gw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uf(c,a)};gw.prototype.getMargin=function(){return Qf(this.zs)};gw.prototype.getUpAxis=function(){return Sf(this.zs)};gw.prototype.getRadius=function(){return Rf(this.zs)};\ngw.prototype.getHalfHeight=function(){return Of(this.zs)};gw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tf(c,a)};gw.prototype.getLocalScaling=function(){return m(Pf(this.zs),q)};gw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Nf(d,a,c)};gw.prototype.__destroy__=function(){Lf(this.zs)};function z(){throw\"cannot construct a btContactSolverInfo, no constructor in IDL\";}\nz.prototype=Object.create(k.prototype);z.prototype.constructor=z;z.prototype.As=z;z.Bs={};g.btContactSolverInfo=z;z.prototype.get_m_splitImpulse=z.prototype.ou=function(){return!!Ai(this.zs)};z.prototype.set_m_splitImpulse=z.prototype.Ev=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Di(c,a)};Object.defineProperty(z.prototype,\"m_splitImpulse\",{get:z.prototype.ou,set:z.prototype.Ev});z.prototype.get_m_splitImpulsePenetrationThreshold=z.prototype.pu=function(){return zi(this.zs)};\nz.prototype.set_m_splitImpulsePenetrationThreshold=z.prototype.Fv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ci(c,a)};Object.defineProperty(z.prototype,\"m_splitImpulsePenetrationThreshold\",{get:z.prototype.pu,set:z.prototype.Fv});z.prototype.get_m_numIterations=z.prototype.au=function(){return yi(this.zs)};z.prototype.set_m_numIterations=z.prototype.rv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bi(c,a)};\nObject.defineProperty(z.prototype,\"m_numIterations\",{get:z.prototype.au,set:z.prototype.rv});z.prototype.__destroy__=function(){xi(this.zs)};function X(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===e?jm(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(a,c,d,e):km(a,c,d,e,f);l(X)[this.zs]=this}\nX.prototype=Object.create(lv.prototype);X.prototype.constructor=X;X.prototype.As=X;X.Bs={};g.btGeneric6DofSpringConstraint=X;X.prototype.enableSpring=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);mm(d,a,c)};X.prototype.setStiffness=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Bm(d,a,c)};\nX.prototype.setDamping=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);tm(d,a,c)};X.prototype.setEquilibriumPoint=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);void 0===a?um(d):void 0===c?wm(d,a):xm(d,a,c)};X.prototype.setLinearLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ym(c,a)};X.prototype.setLinearUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zm(c,a)};\nX.prototype.setAngularLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qm(c,a)};X.prototype.setAngularUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rm(c,a)};X.prototype.getFrameOffsetA=function(){return m(om(this.zs),u)};X.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lm(c,a)};X.prototype.getBreakingImpulseThreshold=function(){return nm(this.zs)};\nX.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);sm(c,a)};X.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return pm(d,a,c)};X.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Am(e,a,c,d)};X.prototype.__destroy__=function(){im(this.zs)};\nfunction hw(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=ct(a);l(hw)[this.zs]=this}hw.prototype=Object.create(p.prototype);hw.prototype.constructor=hw;hw.prototype.As=hw;hw.Bs={};g.btSphereShape=hw;hw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ht(c,a)};hw.prototype.getMargin=function(){return ft(this.zs)};hw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gt(c,a)};hw.prototype.getLocalScaling=function(){return m(et(this.zs),q)};\nhw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);dt(d,a,c)};hw.prototype.__destroy__=function(){bt(this.zs)};function Y(){this.zs=Sc();l(Y)[this.zs]=this}Y.prototype=Object.create(k.prototype);Y.prototype.constructor=Y;Y.prototype.As=Y;Y.Bs={};g.ConvexHull=Y;Y.prototype.get_m_points=Y.prototype.gu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Wc(c,a)};Object.defineProperty(Y.prototype,\"m_points\",{get:Y.prototype.gu});\nY.prototype.get_m_triangles=Y.prototype.vu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Xc(c,a)};Object.defineProperty(Y.prototype,\"m_triangles\",{get:Y.prototype.vu});Y.prototype.get_m_nPoints=Y.prototype.Yt=function(){return Uc(this.zs)};Object.defineProperty(Y.prototype,\"m_nPoints\",{get:Y.prototype.Yt});Y.prototype.get_m_nTriangles=Y.prototype.Zt=function(){return Vc(this.zs)};Object.defineProperty(Y.prototype,\"m_nTriangles\",{get:Y.prototype.Zt});Y.prototype.__destroy__=function(){Tc(this.zs)};\nfunction Z(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=Dd(a,c,d,e,f);l(Z)[this.zs]=this}Z.prototype=Object.create(k.prototype);Z.prototype.constructor=Z;Z.prototype.As=Z;Z.Bs={};g.LocalConvexResult=Z;Z.prototype.get_m_hitCollisionObject=Z.prototype.Jt=function(){return m(Fd(this.zs),t)};\nZ.prototype.set_m_hitCollisionObject=Z.prototype.bv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kd(c,a)};Object.defineProperty(Z.prototype,\"m_hitCollisionObject\",{get:Z.prototype.Jt,set:Z.prototype.bv});Z.prototype.get_m_localShapeInfo=Z.prototype.Ut=function(){return m(Jd(this.zs),I)};Z.prototype.set_m_localShapeInfo=Z.prototype.mv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Od(c,a)};Object.defineProperty(Z.prototype,\"m_localShapeInfo\",{get:Z.prototype.Ut,set:Z.prototype.mv});\nZ.prototype.get_m_hitNormalLocal=Z.prototype.Mt=function(){return m(Hd(this.zs),q)};Z.prototype.set_m_hitNormalLocal=Z.prototype.ev=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Md(c,a)};Object.defineProperty(Z.prototype,\"m_hitNormalLocal\",{get:Z.prototype.Mt,set:Z.prototype.ev});Z.prototype.get_m_hitPointLocal=Z.prototype.Nt=function(){return m(Id(this.zs),q)};Z.prototype.set_m_hitPointLocal=Z.prototype.fv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Nd(c,a)};\nObject.defineProperty(Z.prototype,\"m_hitPointLocal\",{get:Z.prototype.Nt,set:Z.prototype.fv});Z.prototype.get_m_hitFraction=Z.prototype.Kt=function(){return Gd(this.zs)};Z.prototype.set_m_hitFraction=Z.prototype.cv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ld(c,a)};Object.defineProperty(Z.prototype,\"m_hitFraction\",{get:Z.prototype.Kt,set:Z.prototype.cv});Z.prototype.__destroy__=function(){Ed(this.zs)};\n(function(){function a(){g.BT_CONSTRAINT_ERP=Pu();g.BT_CONSTRAINT_STOP_ERP=Ru();g.BT_CONSTRAINT_CFM=Ou();g.BT_CONSTRAINT_STOP_CFM=Qu();g.PHY_FLOAT=Ku();g.PHY_DOUBLE=Iu();g.PHY_INTEGER=Lu();g.PHY_SHORT=Mu();g.PHY_FIXEDPOINT88=Ju();g.PHY_UCHAR=Nu()}Pa?a():Na.unshift(a)})();this.Ammo=g;\n\n\n  return Ammo\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = Ammo;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return Ammo; });\n    else if (typeof exports === 'object')\n      exports[\"Ammo\"] = Ammo;\n    ","module.exports = __webpack_public_path__ + \"assets/wasm/ammo.wasm-8640fe8d5bf91d2e84ea56e0c1307ba9.wasm\";","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\tObject.assign = function ( target ) {\n\n\t\tif ( target === undefined || target === null ) {\n\n\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t}\n\n\t\tvar output = Object( target );\n\n\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\tvar source = arguments[ index ];\n\n\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn output;\n\n\t};\n\n}\n\nvar REVISION = '111';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar VSMShadowMap = 3;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipmapNearestFilter = 1004;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipmapLinearFilter = 1005;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipmapNearestFilter = 1007;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipmapLinearFilter = 1008;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\nvar ZeroStencilOp = 0;\nvar KeepStencilOp = 7680;\nvar ReplaceStencilOp = 7681;\nvar IncrementStencilOp = 7682;\nvar DecrementStencilOp = 7683;\nvar IncrementWrapStencilOp = 34055;\nvar DecrementWrapStencilOp = 34056;\nvar InvertStencilOp = 5386;\n\nvar NeverStencilFunc = 512;\nvar LessStencilFunc = 513;\nvar EqualStencilFunc = 514;\nvar LessEqualStencilFunc = 515;\nvar GreaterStencilFunc = 516;\nvar NotEqualStencilFunc = 517;\nvar GreaterEqualStencilFunc = 518;\nvar AlwaysStencilFunc = 519;\n\nvar StaticDrawUsage = 35044;\nvar DynamicDrawUsage = 35048;\nvar StreamDrawUsage = 35040;\nvar StaticReadUsage = 35045;\nvar DynamicReadUsage = 35049;\nvar StreamReadUsage = 35041;\nvar StaticCopyUsage = 35046;\nvar DynamicCopyUsage = 35050;\nvar StreamCopyUsage = 35042;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _lut = [];\n\nfor ( var i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\treturn uuid.toUpperCase();\n\n\t},\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _vector = new Vector3();\nvar _quaternion = new Quaternion();\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t},\n\n\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyNormalMatrix: function ( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( v ) {\n\n\t\t// v cannot be the zero v\n\n\t\tvar scalar = v.dot( this ) / v.lengthSq();\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector );\n\n\t},\n\n\treflect: function ( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t},\n\n\tangleTo: function ( v ) {\n\n\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) console.error( 'THREE.Vector3: angleTo() can\\'t handle zero length vectors.' );\n\n\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nvar _vector$1 = new Vector3();\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t_vector$1.x = attribute.getX( i );\n\t\t\t_vector$1.y = attribute.getY( i );\n\t\t\t_vector$1.z = attribute.getZ( i );\n\n\t\t\t_vector$1.applyMatrix3( this );\n\n\t\t\tattribute.setXYZ( i, _vector$1.x, _vector$1.y, _vector$1.z );\n\n\t\t}\n\n\t\treturn attribute;\n\n\t},\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.defineProperties( Vector4.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.z = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.w = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nvar _v1 = new Vector3();\nvar _m1 = new Matrix4();\nvar _zero = new Vector3( 0, 0, 0 );\nvar _one = new Vector3( 1, 1, 1 );\nvar _x = new Vector3();\nvar _y = new Vector3();\nvar _z = new Vector3();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function ( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t},\n\n\tlookAt: function ( eye, target, up ) {\n\n\t\tvar te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t_v1.x = attribute.getX( i );\n\t\t\t_v1.y = attribute.getY( i );\n\t\t\t_v1.z = attribute.getZ( i );\n\n\t\t\t_v1.applyMatrix4( this );\n\n\t\t\tattribute.setXYZ( i, _v1.x, _v1.y, _v1.z );\n\n\t\t}\n\n\t\treturn attribute;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tvar det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1.copy( this );\n\n\t\tvar invSX = 1 / sx;\n\t\tvar invSY = 1 / sy;\n\t\tvar invSZ = 1 / sz;\n\n\t\t_m1.elements[ 0 ] *= invSX;\n\t\t_m1.elements[ 1 ] *= invSX;\n\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t_m1.elements[ 4 ] *= invSY;\n\t\t_m1.elements[ 5 ] *= invSY;\n\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nvar _matrix = new Matrix4();\nvar _quaternion$1 = new Quaternion();\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t},\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function ( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$1.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t},\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\tenableAll: function () {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\tdisableAll: function () {\n\n\t\tthis.mask = 0;\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\nvar _object3DId = 0;\n\nvar _v1$1 = new Vector3();\nvar _q1 = new Quaternion();\nvar _m1$1 = new Matrix4();\nvar _target = new Vector3();\n\nvar _position = new Vector3();\nvar _scale = new Vector3();\nvar _quaternion$2 = new Quaternion();\n\nvar _xAxis = new Vector3( 1, 0, 0 );\nvar _yAxis = new Vector3( 0, 1, 0 );\nvar _zAxis = new Vector3( 0, 0, 1 );\n\nvar _addedEvent = { type: 'added' };\nvar _removedEvent = { type: 'removed' };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation._onChange( onRotationChange );\n\tquaternion._onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t},\n\n\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t},\n\n\ttranslateX: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t},\n\n\ttranslateY: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t},\n\n\ttranslateZ: function ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t},\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t},\n\n\tlookAt: function ( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tvar parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t}\n\n\t},\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tattach: function ( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix( _m1$1 );\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldScale: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\treturn target;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar _points = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\nvar _vector$2 = new Vector3();\n\nvar _box = new Box3();\n\n// triangle centered vertices\n\nvar _v0 = new Vector3();\nvar _v1$2 = new Vector3();\nvar _v2 = new Vector3();\n\n// triangle edge vectors\n\nvar _f0 = new Vector3();\nvar _f1 = new Vector3();\nvar _f2 = new Vector3();\n\nvar _center = new Vector3();\nvar _extents = new Vector3();\nvar _triangleNormal = new Vector3();\nvar _testAxis = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector$2.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function ( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.expandByPoint( _box.min );\n\t\t\tthis.expandByPoint( _box.max );\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$2 );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$2.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: function ( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0.subVectors( triangle.a, _center );\n\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tvar axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector$2.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tgetBoundingSphere: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$2 ).length() * 0.5;\n\n\t\treturn target;\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tvar i, j;\n\n\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tvar p0 = v0.dot( _testAxis );\n\t\tvar p1 = v1.dot( _testAxis );\n\t\tvar p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nvar _box$1 = new Box3();\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\tvar center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tvar maxRadiusSq = 0;\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\nvar _vector$3 = new Vector3();\nvar _segCenter = new Vector3();\nvar _segDir = new Vector3();\nvar _diff = new Vector3();\n\nvar _edge1 = new Vector3();\nvar _edge2 = new Vector3();\nvar _normal = new Vector3();\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function ( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function ( point ) {\n\n\t\tvar directionDistance = _vector$3.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$3.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$3.distanceToSquared( point );\n\n\t},\n\n\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tvar a01 = - this.direction.dot( _segDir );\n\t\tvar b0 = _diff.dot( this.direction );\n\t\tvar b1 = - _diff.dot( _segDir );\n\t\tvar c = _diff.lengthSq();\n\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\tvar s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t},\n\n\tintersectSphere: function ( sphere, target ) {\n\n\t\t_vector$3.subVectors( sphere.center, this.origin );\n\t\tvar tca = _vector$3.dot( this.direction );\n\t\tvar d2 = _vector$3.dot( _vector$3 ) - tca * tca;\n\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tvar t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tvar t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn this.intersectBox( box, _vector$3 ) !== null;\n\n\t},\n\n\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tvar DdN = this.direction.dot( _normal );\n\t\tvar sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t},\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector1 = new Vector3();\nvar _vector2 = new Vector3();\nvar _normalMatrix = new Matrix3();\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tisPlane: true,\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function ( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tvar direction = line.delta( _vector1 );\n\n\t\tvar denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t},\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _v0$1 = new Vector3();\nvar _v1$3 = new Vector3();\nvar _v2$1 = new Vector3();\nvar _v3 = new Vector3();\n\nvar _vab = new Vector3();\nvar _vac = new Vector3();\nvar _vbc = new Vector3();\nvar _vap = new Vector3();\nvar _vbp = new Vector3();\nvar _vcp = new Vector3();\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function ( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tvar targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t},\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$1.subVectors( point, a );\n\n\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tvar invDenom = 1 / denom;\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t},\n\n\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t},\n\n\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\treturn target;\n\n\t},\n\n\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t},\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tisFrontFacing: function ( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function ( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tvar a = this.a, b = this.b, c = this.c;\n\t\tvar v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tvar d1 = _vab.dot( _vap );\n\t\tvar d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tvar d3 = _vab.dot( _vbp );\n\t\tvar d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tvar vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tvar d5 = _vab.dot( _vcp );\n\t\tvar d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tvar vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tvar va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tvar denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t},\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nvar _hslA = { h: 0, s: 0, l: 0 };\nvar _hslB = { h: 0, s: 0, l: 0 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function ( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = _Math.euclideanModulo( h, 1 );\n\t\ts = _Math.clamp( s, 0, 1 );\n\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetColorName: function ( style ) {\n\n\t\t// color keywords\n\t\tvar hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function ( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToSRGB: function ( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t},\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function ( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tvar h = _Math.lerp( _hslA.h, _hslB.h, alpha );\n\t\tvar s = _Math.lerp( _hslA.s, _hslB.s, alpha );\n\t\tvar l = _Math.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\nColor.NAMES = _colorKeywords;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexTangents = source.vertexTangents;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis._array = array;\n\tthis._itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis._normalized = normalized === true;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this._array;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._array = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\titemSize: {\n\n\t\tget: function () {\n\n\t\t\treturn this._itemSize;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._itemSize = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tnormalized: {\n\n\t\tget: function () {\n\n\t\t\treturn this._normalized;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._normalized = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nvar _m1$2 = new Matrix4();\nvar _obj = new Object3D();\nvar _offset = new Vector3();\nvar _box$2 = new Box3();\nvar _boxMorphTargets = new Box3();\nvar _vector$4 = new Vector3();\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\tthis.morphTargetsRelative = false;\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tsetAttribute: function ( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tdeleteAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$2.makeRotationX( angle );\n\n\t\tthis.applyMatrix( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$2.makeRotationY( angle );\n\n\t\tthis.applyMatrix( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$2.makeRotationZ( angle );\n\n\t\tthis.applyMatrix( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$2.makeScale( x, y, z );\n\n\t\tthis.applyMatrix( _m1$2 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix( _obj.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar normals = this.attributes.normal;\n\n\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$4.x = normals.getX( i );\n\t\t\t_vector$4.y = normals.getY( i );\n\t\t\t_vector$4.z = normals.getZ( i );\n\n\t\t\t_vector$4.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t}\n\n\t},\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nvar _inverseMatrix = new Matrix4();\nvar _ray = new Ray();\nvar _sphere = new Sphere();\n\nvar _vA = new Vector3();\nvar _vB = new Vector3();\nvar _vC = new Vector3();\n\nvar _tempA = new Vector3();\nvar _tempB = new Vector3();\nvar _tempC = new Vector3();\n\nvar _morphA = new Vector3();\nvar _morphB = new Vector3();\nvar _morphC = new Vector3();\n\nvar _uvA = new Vector2();\nvar _uvB = new Vector2();\nvar _uvC = new Vector2();\n\nvar _intersectionPoint = new Vector3();\nvar _intersectionPointWorld = new Vector3();\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\t\tvar material = this.material;\n\t\tvar matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tvar intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar a, b, c;\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tvar uv = geometry.attributes.uv;\n\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\tvar groups = geometry.groups;\n\t\t\tvar drawRange = geometry.drawRange;\n\t\t\tvar i, j, il, jl;\n\t\t\tvar group, groupMaterial;\n\t\t\tvar start, end;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tif ( this.drawMode === TriangleStripDrawMode ) {\n\n\t\t\t\t\t\tvar order = 0;\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il - 2; i ++ ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1 + order;\n\t\t\t\t\t\t\tc = i + 2 - order;\n\n\t\t\t\t\t\t\torder = ( order + 1 ) % 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar fvA, fvB, fvC;\n\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar uvs;\n\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = faces[ f ];\n\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection.face = face;\n\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tvar intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tvar morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tvar influence = morphInfluences[ i ];\n\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA.add( _morphA );\n\t\t_vB.add( _morphB );\n\t\t_vC.add( _morphC );\n\n\t}\n\n\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tvar face = new Face3( a, b, c );\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar _geometryId = 0; // Geometry uses even numbers as Id\nvar _m1$3 = new Matrix4();\nvar _obj$1 = new Object3D();\nvar _offset$1 = new Vector3();\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function ( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1$3.makeRotationX( angle );\n\n\t\tthis.applyMatrix( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\trotateY: function ( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1$3.makeRotationY( angle );\n\n\t\tthis.applyMatrix( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\trotateZ: function ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1$3.makeRotationZ( angle );\n\n\t\tthis.applyMatrix( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1$3.makeScale( x, y, z );\n\n\t\tthis.applyMatrix( _m1$3 );\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function ( vector ) {\n\n\t\t_obj$1.lookAt( vector );\n\n\t\t_obj$1.updateMatrix();\n\n\t\tthis.applyMatrix( _obj$1.matrix );\n\n\t\treturn this;\n\n\t},\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tif ( attributes.position === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) this.faceVertexUvs[ i ] = [];\n\n\t\t\tfor ( var j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs2 = faceVertexUvs2[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nclass BoxGeometry extends Geometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n}\n\n// BoxBufferGeometry\n\nclass BoxBufferGeometry extends BufferGeometry {\n\n\tconstructor( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tvar scope = this;\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\t\tdepth = depth || 1;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar numberOfVertices = 0;\n\t\tvar groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tvar segmentWidth = width / gridX;\n\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\tvar widthHalf = width / 2;\n\t\t\tvar heightHalf = height / 2;\n\t\t\tvar depthHalf = depth / 2;\n\n\t\t\tvar gridX1 = gridX + 1;\n\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\tvar vertexCounter = 0;\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar ix, iy;\n\n\t\t\tvar vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tvar dst = [];\n\n\tfor ( var u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\tthis.uniformsGroups = [];\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\nWebGLRenderTargetCube.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\tthis.texture.type = texture.type;\n\tthis.texture.format = texture.format;\n\tthis.texture.encoding = texture.encoding;\n\n\tvar scene = new Scene();\n\n\tvar shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\"}\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\"}\"\n\n\t\t].join( '\\n' ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\"#define RECIPROCAL_PI 0.31830988618\",\n\t\t\t\"#define RECIPROCAL_PI2 0.15915494\",\n\n\t\t\t\"void main() {\",\n\n\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\"\tvec2 sampleUV;\",\n\n\t\t\t\"\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\",\n\n\t\t\t\"\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\n\n\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\"}\"\n\n\t\t].join( '\\n' ),\n\t};\n\n\tvar material = new ShaderMaterial( {\n\n\t\ttype: 'CubemapFromEquirect',\n\n\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: BackSide,\n\t\tblending: NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\tscene.add( mesh );\n\n\tvar camera = new CubeCamera( 1, 10, 1 );\n\n\tcamera.renderTarget = this;\n\tcamera.renderTarget.texture.name = 'CubeCameraTexture';\n\n\tcamera.update( renderer, scene );\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nvar _sphere$1 = new Sphere();\nvar _vector$5 = new Vector3();\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t},\n\n\tintersectsSprite: function ( sprite ) {\n\n\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = saturate( clearcoat );\\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_normalmap_pars_fragment = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpack2HalfToRGBA( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpack2HalfToRGBA( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_normalmap_pars_fragment: clearcoat_normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\ttransparency: { value: 0 },\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.usage;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments, flipY ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tflipY\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments, flipY = true ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tflipY: flipY\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push(\n\t\t\t\tflipY ?\n\t\t\t\t\t1 - ( iy / gridY ) :\n\t\t\t\t\tiy / gridY\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar vr = renderer.vr;\n\t\tvar session = vr.getSession && vr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Takahiro / https://github.com/takahirox\n */\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\n\tvar extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tvar bindingStates = {};\n\n\tvar defaultState = createBindingState( null );\n\tvar currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tvar state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry );\n\n\t\t} else {\n\n\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tvar wireframe = ( material.wireframe === true );\n\n\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tvar stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tvar state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tvar newAttributes = [];\n\t\tvar enabledAttributes = [];\n\t\tvar attributeDivisors = [];\n\n\t\tfor ( var i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {}\n\n\t\t};\n\n\t}\n\n\t// If we sacrifice some BufferGeometry/Attribute API flexibility\n\t// needsUpdate() and saveCache() can be much simpler. See #16287\n\n\tfunction needsUpdate( geometry ) {\n\n\t\tvar cachedAttributes = currentState.attributes;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) return true;\n\n\t\tfor ( var key in geometryAttributes ) {\n\n\t\t\tvar cachedAttribute = cachedAttributes[ key ];\n\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.version !== geometryAttribute.versionVAO ) return true;\n\n\t\t\tif ( cachedAttribute.data.buffer !== geometryAttribute.data ) return true;\n\n\t\t\tif ( geometryAttribute.data &&\n\t\t\t\tcachedAttribute.data.version !== geometryAttribute.data.versionVAO ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry ) {\n\n\t\tvar cache = {};\n\t\tvar attributes = geometry.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar data = {};\n\t\t\tdata.attribute = attribute;\n\t\t\tdata.version = attribute.versionVAO;\n\n\t\t\tdata.data = {};\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data.buffer = attribute.data;\n\t\t\t\tdata.data.version = attribute.data.versionVAO;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\n\t\tfor ( var i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\tvar attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( var i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tvar attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( var programId in programMap ) {\n\n\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tvar extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tvar geometries = new WeakMap();\n\tvar wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries.delete( geometry );\n\n\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries.set( geometry, buffergeometry );\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryPosition = geometry.attributes.position;\n\t\tvar version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tvar extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tvar workInfluences = [];\n\n\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tvar morphInfluencesSum = 0;\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = workInfluences[ i ];\n\t\t\tvar index = influence[ 0 ];\n\t\t\tvar value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n\tthis.needsUpdate = true;\n\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1Array; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6Array; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tvar status = gl.getShaderParameter( shader, 35713 );\n\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tvar source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tvar string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nvar loopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( loopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tvar string = '';\n\n\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\tif ( parameters.precision === \"highp\" ) {\n\n\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, extensions, cacheKey, material, shader, parameters, bindingStates ) {\n\n\tvar gl = renderer.getContext();\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tvar numMultiviewViews = parameters.numMultiviewViews;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( parameters.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( parameters.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( material.extensions ? material.extensions.shaderTextureLOD : false ) || parameters.envMap ) && ( parameters.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tconst v300es = \"#version 300 es\\n\";\n\t\t\tif ( isGLSL3ShaderMaterial ) {\n\n\t\t\t\tprefixVertex = v300es + prefixVertex;\n\t\t\t\tprefixFragment = v300es + prefixFragment;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// GLSL 3.0 conversion\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t\t// Multiview\n\n\t\tif ( numMultiviewViews > 0 ) {\n\n\t\t\tprefixVertex = prefixVertex.replace(\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t[\n\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t'#extension GL_OVR_multiview2 : require',\n\t\t\t\t\t'layout(num_views = ' + numMultiviewViews + ') in;',\n\t\t\t\t\t'#define VIEW_ID gl_ViewID_OVR'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t\tprefixVertex = prefixVertex.replace(\n\t\t\t\t[\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t'uniform mat3 normalMatrix;'\n\t\t\t\t].join( '\\n' ),\n\t\t\t\t[\n\t\t\t\t\t'uniform mat4 modelViewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'uniform mat4 projectionMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'uniform mat4 viewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'uniform mat3 normalMatrices[' + numMultiviewViews + '];',\n\n\t\t\t\t\t'#define modelViewMatrix modelViewMatrices[VIEW_ID]',\n\t\t\t\t\t'#define projectionMatrix projectionMatrices[VIEW_ID]',\n\t\t\t\t\t'#define viewMatrix viewMatrices[VIEW_ID]',\n\t\t\t\t\t'#define normalMatrix normalMatrices[VIEW_ID]'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t\tprefixFragment = prefixFragment.replace(\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t[\n\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t'#extension GL_OVR_multiview2 : require',\n\t\t\t\t\t'#define VIEW_ID gl_ViewID_OVR'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t\tprefixFragment = prefixFragment.replace(\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t[\n\t\t\t\t\t'uniform mat4 viewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t'#define viewMatrix viewMatrices[VIEW_ID]'\n\t\t\t\t].join( '\\n' )\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\tthis.numMultiviewViews = numMultiviewViews;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities, bindingStates ) {\n\n\tvar programs = [];\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\tvar precision = capabilities.precision;\n\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\tvar vertexTextures = capabilities.vertexTextures;\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\", \"numMultiviewViews\",\n\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\"sheen\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\tvar numMultiviewViews = currentRenderTarget && currentRenderTarget.isWebGLMultiviewRenderTarget ? currentRenderTarget.numViews : 0;\n\n\t\tvar parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\tnumMultiviewViews: numMultiviewViews,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCacheKey = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, cacheKey ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, cacheKey, material, shader, parameters, bindingStates );\n\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tlists.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists.get( scene );\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, new WeakMap() );\n\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras.get( camera );\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras.set( camera, list );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\n\t\tnumDirectionalShadows: - 1,\n\t\tnumPointShadows: - 1,\n\t\tnumSpotShadows: - 1\n\n\t};\n\n\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar numDirectionalShadows = 0;\n\t\tvar numPointShadows = 0;\n\t\tvar numSpotShadows = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tvar hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = new WeakMap();\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\trenderStates.delete( scene );\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpack2HalfToRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\tvar fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t\"position\",\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing' );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizonal pass\n\n\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tvar material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tvar material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tif ( geometry.isBufferGeometry === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry.isGeometry === true ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar uboBindings = new WeakMap();\n\tvar uboProgamMap = new WeakMap();\n\n\tvar enabledCapabilities = {};\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tvar factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tvar stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tvar mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tvar blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tvar mapping = uboProgamMap.get( program );\n\t\tvar blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\tvar maxTextures = capabilities.maxTextures;\n\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\tvar maxTextureSize = capabilities.maxTextureSize;\n\tvar maxSamples = capabilities.maxSamples;\n\n\tvar _videoTextures = new WeakMap();\n\tvar _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\n\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultiviewRenderTarget ) {\n\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglColorTexture );\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglDepthStencilTexture );\n\n\t\t\tinfo.memory.textures -= 2;\n\n\t\t\tfor ( var i = 0, il = renderTargetProperties.__webglViewFramebuffers.length; i < il; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglViewFramebuffers[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tvar cubeImage = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tvar mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tvar mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t} else {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tvar wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tvar filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( isWebGL2 === false ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t\t// if ( window.ImageBitmap && texture.image instanceof ImageBitmap ) {\n\n\t\t\t// \tconsole.info( \"upload texture\", \"ImageBitmap\", texture.id );\n\n\t\t\t// } else if ( texture.image instanceof HTMLImageElement ) {\n\n\t\t\t// \tconsole.info( \"upload texture\", \"HTMLImageElement\", texture.id, texture.image.src );\n\n\t\t\t// }\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar isMultiview = ( renderTarget.isWebGLMultiviewRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( isMultiview ) {\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar numViews = renderTarget.numViews;\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar ext = extensions.get( 'OVR_multiview2' );\n\n\t\t\t\tinfo.memory.textures += 2;\n\n\t\t\t\tvar colorTexture = _gl.createTexture();\n\t\t\t\t_gl.bindTexture( 35866, colorTexture );\n\t\t\t\t_gl.texParameteri( 35866, 10240, 9728 );\n\t\t\t\t_gl.texParameteri( 35866, 10241, 9728 );\n\t\t\t\t_gl.texImage3D( 35866, 0, 32856, width, height, numViews, 0, 6408, 5121, null );\n\t\t\t\text.framebufferTextureMultiviewOVR( 36160, 36064, colorTexture, 0, 0, numViews );\n\n\t\t\t\tvar depthStencilTexture = _gl.createTexture();\n\t\t\t\t_gl.bindTexture( 35866, depthStencilTexture );\n\t\t\t\t_gl.texParameteri( 35866, 10240, 9728 );\n\t\t\t\t_gl.texParameteri( 35866, 10241, 9728 );\n\t\t\t\t_gl.texImage3D( 35866, 0, 35056, width, height, numViews, 0, 34041, 34042, null );\n\t\t\t\text.framebufferTextureMultiviewOVR( 36160, 33306, depthStencilTexture, 0, 0, numViews );\n\n\t\t\t\tvar viewFramebuffers = new Array( numViews );\n\t\t\t\tfor ( var i = 0; i < numViews; ++ i ) {\n\n\t\t\t\t\tviewFramebuffers[ i ] = _gl.createFramebuffer();\n\t\t\t\t\t_gl.bindFramebuffer( 36160, viewFramebuffers[ i ] );\n\t\t\t\t\t_gl.framebufferTextureLayer( 36160, 36064, colorTexture, 0, i );\n\n\t\t\t\t}\n\n\t\t\t\trenderTargetProperties.__webglColorTexture = colorTexture;\n\t\t\t\trenderTargetProperties.__webglDepthStencilTexture = depthStencilTexture;\n\t\t\t\trenderTargetProperties.__webglViewFramebuffers = viewFramebuffers;\n\n\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\t\t\t\t_gl.bindTexture( 35866, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else if ( ! isMultiview ) {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tvar buffers = {};\n\tvar updateList = {};\n\n\tvar allocatedBindingPoints = [];\n\tvar maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tstate.uniformBlockBinding( uniformsGroup, program );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tvar buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tstate.updateUBOMapping( uniformsGroup, program );\n\n\t\t// update UBO once per frame\n\n\t\tvar frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tvar bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tvar buffer = gl.createBuffer();\n\t\tvar size = uniformsGroup.isRawUniformsGroup ? uniformsGroup.data.byteLength : uniformsGroup.__size;\n\t\tvar usage = uniformsGroup.dynamic ? 35048 : 35044;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( var i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tvar buffer = buffers[ uniformsGroup.id ];\n\t\tvar uniforms = uniformsGroup.uniforms;\n\t\tvar cache = uniformsGroup.__cache;\n\n\t\tif ( uniformsGroup.isRawUniformsGroup ) {\n\n\t\t\tif ( uniformsGroup.autoUpdate || uniformsGroup.needsUpdate ) {\n\n\t\t\t\tgl.bindBuffer( 35345, buffer );\n\n\t\t\t\tgl.bufferSubData( 35345, 0, uniformsGroup.data );\n\n\t\t\t\tgl.bindBuffer( 35345, null );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( var i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tvar uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tvar value = uniform.value;\n\t\t\t\tvar offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tvar value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tif ( uniformsGroup.isRawUniformsGroup ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar uniforms = uniformsGroup.uniforms;\n\n\t\tvar offset = 0; // global buffer offset in bytes\n\t\tvar chunkSize = 16; // size of a chunk in bytes\n\t\tvar chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( var i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tvar uniform = uniforms[ i ];\n\t\t\tvar info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tvar remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tvar value = uniform.value;\n\n\t\tvar info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tvar uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tvar index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( var id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tvar isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author fernandojsg / http://fernandojsg.com\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction WebGLMultiviewRenderTarget( width, height, numViews, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.depthBuffer = false;\n\tthis.stencilBuffer = false;\n\n\tthis.numViews = numViews;\n\n}\n\nWebGLMultiviewRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultiviewRenderTarget,\n\n\tisWebGLMultiviewRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.numViews = source.numViews;\n\n\t\treturn this;\n\n\t},\n\n\tsetNumViews: function ( numViews ) {\n\n\t\tif ( this.numViews !== numViews ) {\n\n\t\t\tthis.numViews = numViews;\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author fernandojsg / http://fernandojsg.com\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction WebGLMultiview( renderer, gl ) {\n\n\tvar DEFAULT_NUMVIEWS = 2;\n\n\tvar extensions = renderer.extensions;\n\tvar properties = renderer.properties;\n\n\tvar renderTarget, currentRenderTarget;\n\tvar mat3, mat4, cameraArray, renderSize;\n\n\tvar available;\n\tvar maxNumViews = 0;\n\n\t//\n\n\tfunction isAvailable() {\n\n\t\tif ( available === undefined ) {\n\n\t\t\tvar extension = extensions.get( 'OVR_multiview2' );\n\n\t\t\tavailable = extension !== null && gl.getContextAttributes().antialias === false;\n\n\t\t\tif ( available ) {\n\n\t\t\t\tmaxNumViews = gl.getParameter( extension.MAX_VIEWS_OVR );\n\t\t\t\trenderTarget = new WebGLMultiviewRenderTarget( 0, 0, DEFAULT_NUMVIEWS );\n\n\t\t\t\trenderSize = new Vector2();\n\t\t\t\tmat4 = [];\n\t\t\t\tmat3 = [];\n\t\t\t\tcameraArray = [];\n\n\t\t\t\tfor ( var i = 0; i < maxNumViews; i ++ ) {\n\n\t\t\t\t\tmat4[ i ] = new Matrix4();\n\t\t\t\t\tmat3[ i ] = new Matrix3();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn available;\n\n\t}\n\n\tfunction getCameraArray( camera ) {\n\n\t\tif ( camera.isArrayCamera ) return camera.cameras;\n\n\t\tcameraArray[ 0 ] = camera;\n\n\t\treturn cameraArray;\n\n\t}\n\n\tfunction updateCameraProjectionMatricesUniform( camera, uniforms ) {\n\n\t\tvar cameras = getCameraArray( camera );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tmat4[ i ].copy( cameras[ i ].projectionMatrix );\n\n\t\t}\n\n\t\tuniforms.setValue( gl, 'projectionMatrices', mat4 );\n\n\t}\n\n\tfunction updateCameraViewMatricesUniform( camera, uniforms ) {\n\n\t\tvar cameras = getCameraArray( camera );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tmat4[ i ].copy( cameras[ i ].matrixWorldInverse );\n\n\t\t}\n\n\t\tuniforms.setValue( gl, 'viewMatrices', mat4 );\n\n\t}\n\n\tfunction updateObjectMatricesUniforms( object, camera, uniforms ) {\n\n\t\tvar cameras = getCameraArray( camera );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tmat4[ i ].multiplyMatrices( cameras[ i ].matrixWorldInverse, object.matrixWorld );\n\t\t\tmat3[ i ].getNormalMatrix( mat4[ i ] );\n\n\t\t}\n\n\t\tuniforms.setValue( gl, 'modelViewMatrices', mat4 );\n\t\tuniforms.setValue( gl, 'normalMatrices', mat3 );\n\n\t}\n\n\tfunction isMultiviewCompatible( camera ) {\n\n\t\tif ( camera.isArrayCamera === undefined ) return true;\n\n\t\tvar cameras = camera.cameras;\n\n\t\tif ( cameras.length > maxNumViews ) return false;\n\n\t\tfor ( var i = 1, il = cameras.length; i < il; i ++ ) {\n\n\t\t\tif ( cameras[ 0 ].viewport.z !== cameras[ i ].viewport.z ||\n\t\t\t\tcameras[ 0 ].viewport.w !== cameras[ i ].viewport.w ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction resizeRenderTarget( camera ) {\n\n\t\tif ( currentRenderTarget ) {\n\n\t\t\trenderSize.set( currentRenderTarget.width, currentRenderTarget.height );\n\n\t\t} else {\n\n\t\t\trenderer.getDrawingBufferSize( renderSize );\n\n\t\t}\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tvar viewport = camera.cameras[ 0 ].viewport;\n\n\t\t\trenderTarget.setSize( viewport.z, viewport.w );\n\t\t\trenderTarget.setNumViews( camera.cameras.length );\n\n\t\t} else {\n\n\t\t\trenderTarget.setSize( renderSize.x, renderSize.y );\n\t\t\trenderTarget.setNumViews( DEFAULT_NUMVIEWS );\n\n\t\t}\n\n\t}\n\n\tfunction attachCamera( camera ) {\n\n\t\tif ( isMultiviewCompatible( camera ) === false ) return;\n\n\t\tcurrentRenderTarget = renderer.getRenderTarget();\n\t\tresizeRenderTarget( camera );\n\t\trenderer.setRenderTarget( renderTarget );\n\n\t}\n\n\tfunction detachCamera( camera ) {\n\n\t\tif ( renderTarget !== renderer.getRenderTarget() ) return;\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\tflush( camera );\n\n\t}\n\n\tfunction flush( camera ) {\n\n\t\tvar srcRenderTarget = renderTarget;\n\t\tvar numViews = srcRenderTarget.numViews;\n\n\t\tvar srcFramebuffers = properties.get( srcRenderTarget ).__webglViewFramebuffers;\n\n\t\tvar viewWidth = srcRenderTarget.width;\n\t\tvar viewHeight = srcRenderTarget.height;\n\n\t\tif ( camera.isArrayCamera ) {\n\n\t\t\tfor ( var i = 0; i < numViews; i ++ ) {\n\n\t\t\t\tvar viewport = camera.cameras[ i ].viewport;\n\n\t\t\t\tvar x1 = viewport.x;\n\t\t\t\tvar y1 = viewport.y;\n\t\t\t\tvar x2 = x1 + viewport.z;\n\t\t\t\tvar y2 = y1 + viewport.w;\n\n\t\t\t\tgl.bindFramebuffer( 36008, srcFramebuffers[ i ] );\n\t\t\t\tgl.blitFramebuffer( 0, 0, viewWidth, viewHeight, x1, y1, x2, y2, 16384, 9728 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.bindFramebuffer( 36008, srcFramebuffers[ 0 ] );\n\t\t\tgl.blitFramebuffer( 0, 0, viewWidth, viewHeight, 0, 0, renderSize.x, renderSize.y, 16384, 9728 );\n\n\t\t}\n\n\t}\n\n\tthis.isAvailable = isAvailable;\n\tthis.attachCamera = attachCamera;\n\tthis.detachCamera = detachCamera;\n\tthis.updateCameraProjectionMatricesUniform = updateCameraProjectionMatricesUniform;\n\tthis.updateCameraViewMatricesUniform = updateCameraViewMatricesUniform;\n\tthis.updateObjectMatricesUniforms = updateObjectMatricesUniforms;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar renderWidth, renderHeight;\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpaceType = 'local-floor';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.viewport = new Vector4();\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.viewport = new Vector4();\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\trenderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\trenderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\trenderer.getSize( currentSize );\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth, renderHeight, 1 );\n\n\t\t\tcameraL.viewport.set( 0, 0, renderWidth / 2, renderHeight );\n\t\t\tcameraR.viewport.set( renderWidth / 2, 0, renderWidth / 2, renderHeight );\n\n\t\t\tanimation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\tvar grips = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'HTC Vive Focus' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tvar hand = gamepad.hand;\n\n\t\t\t\tif ( id === 0 && ( hand === '' || hand === 'right' ) ) return gamepad;\n\t\t\t\tif ( id === 1 && ( hand === 'left' ) ) return gamepad;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t// Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t// Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] === undefined ) triggers[ i ] = false;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Grip\n\t\t\t\tbuttonId = 2;\n\n\t\t\t\tif ( grips[ i ] === undefined ) grips[ i ] = false;\n\n\t\t\t\t// Skip if the grip button doesn't exist on this controller\n\t\t\t\tif ( gamepad.buttons[ buttonId ] !== undefined ) {\n\n\t\t\t\t\tif ( grips[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\t\tgrips[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\t\tif ( grips[ i ] === true ) {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'squeezestart' } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'squeezeend' } );\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'squeeze' } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateViewportFromBounds( viewport, bounds ) {\n\n\t\tif ( bounds !== null && bounds.length === 4 ) {\n\n\t\t\tviewport.set( bounds[ 0 ] * renderWidth, bounds[ 1 ] * renderHeight, bounds[ 2 ] * renderWidth, bounds[ 3 ] * renderHeight );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tvar children = poseObject.children;\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tupdateViewportFromBounds( cameraL.viewport, layer.leftBounds );\n\t\t\tupdateViewportFromBounds( cameraR.viewport, layer.rightBounds );\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t\tif ( isPresenting() ) animation.start();\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n\t// DEPRECATED\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n}\n\nObject.assign( WebVRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer, gl ) {\n\n\tvar scope = this;\n\n\tvar session = null;\n\n\t// var framebufferScaleFactor = 1.0;\n\n\tvar referenceSpace = null;\n\tvar referenceSpaceType = 'local-floor';\n\n\tvar pose = null;\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar sortedInputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && referenceSpace !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\tvar poseMatrix = new THREE.Matrix4();\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tif ( sortedInputSources[ i ] === event.inputSource ) {\n\n\t\t\t\tcontrollers[ i ].dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( /* value */ ) {\n\n\t\t// framebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tsession.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl ) } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t\tupdateInputSources();\n\n\t\t}\n\n\t};\n\n\tfunction updateInputSources() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tsortedInputSources[ i ] = findInputSource( i );\n\n\t\t}\n\n\t}\n\n\tfunction findInputSource( id ) {\n\n\t\tvar inputSources = session.inputSources;\n\n\t\tfor ( var i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\tvar inputSource = inputSources[ i ];\n\t\t\tvar handedness = inputSource.handedness;\n\n\t\t\tif ( id === 0 && ( handedness === 'none' || handedness === 'right' ) ) return inputSource;\n\t\t\tif ( id === 1 && ( handedness === 'left' ) ) return inputSource;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar parent = camera.parent;\n\t\tvar cameras = cameraVR.cameras;\n\t\tvar object = poseTarget || camera;\n\n\t\tupdateCamera( cameraVR, parent );\n\n\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t}\n\n\t\t// update camera and its children\n\t\tobject.matrixWorld.copy( cameraVR.matrixWorld );\n\t\tif ( pose ) {\n\n\t\t\tposeMatrix.elements = pose.transform.matrix;\n\t\t\tposeMatrix.decompose( object.position, object.quaternion, object.scale );\n\t\t\tobject.matrixNeedsUpdate = true;\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t}\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getCameraPose = function ( ) {\n\n\t\treturn pose;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar views = pose.views;\n\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\t\t\t\tvar viewMatrix = view.transform.inverse.matrix;\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = sortedInputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new Matrix4();\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentActiveCubeFace = 0,\n\t\t_currentActiveMipmapLevel = 0,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\txrCompatible: true\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates, uniformsGroups;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils, bindingStates;\n\n\tvar videoTextures;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, bindingStates );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\tvideoTextures = [];\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( typeof navigator !== 'undefined' && 'xr' in navigator && navigator.xr ) ? new WebXRManager( _this, _gl ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// Multiview\n\n\tvar multiview = new WebGLMultiview( _this, _gl );\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index !== null && index.count === 0 ) return;\n\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t//\n\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tthis.compileAndUploadMaterials = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t}\n\n\t\t\tif ( object.castShadow ) {\n\n\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tstate.setMaterial( object.material[ i ] );\n\t\t\t\t\t\tsetProgram( camera, scene.fog, object.material[ i ], object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.setMaterial( object.material );\n\t\t\t\t\tsetProgram( camera, scene.fog, object.material, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\tthis.animation = animation;\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\t/*if ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}*/\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled && vr.isPresenting() ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tvideoTextures.length = 0;\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t// Pre-upload all video textures on Oculus Browser\n\t\tif ( parameters.preuploadVideos ) {\n\n\t\t\tfor ( var i = 0, l = videoTextures.length; i < l; i ++ ) {\n\n\t\t\t\ttextures.setTexture2D( videoTextures[ i ], 0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( vr.enabled && multiview.isAvailable() ) {\n\n\t\t\tmultiview.attachCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tif ( multiview.isAvailable() ) {\n\n\t\t\t\tmultiview.detachCamera( camera );\n\n\t\t\t}\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tif ( parameters.preuploadVideos && material.map && material.map.isVideoTexture ) {\n\n\t\t\t\t\t\t\tvideoTextures.push( material.map );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tif ( vr.enabled && multiview.isAvailable() ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsStateVersion = lights.state.version;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar programCacheKey = programCache.getProgramCacheKey( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tuniformsGroups: material.uniformsGroups,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing cache key again as onBeforeCompile may have changed the shaders\n\t\t\tprogramCacheKey = programCache.getProgramCacheKey( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, programCacheKey );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.version !== materialProperties.__version ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\tmultiview.updateCameraProjectionMatricesUniform( camera, p_uniforms );\n\n\t\t\t} else {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t}\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\t\tmultiview.updateCameraViewMatricesUniform( camera, p_uniforms );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\tmultiview.updateObjectMatricesUniforms( object, camera, p_uniforms );\n\n\t\t} else {\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\n\t\t}\n\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tvar groups = materialProperties.shader.uniformsGroups;\n\t\t\tvar webglProgram = materialProperties.program.program;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, webglProgram );\n\t\t\t\t\tuniformsGroups.bind( group, webglProgram );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transparency.value = material.transparency;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tif ( level === undefined ) level = 0;\n\n\t\tvar levelScale = Math.pow( 2, - level );\n\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis._array = array;\n\tthis._stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.usage = StaticDrawUsage;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this._array;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._array = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tstride: {\n\n\t\tget: function () {\n\n\t\t\treturn this._stride;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._stride = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetUsage: function ( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis._data = interleavedBuffer;\n\tthis._itemSize = itemSize;\n\tthis._offset = offset;\n\n\tthis._normalized = normalized === true;\n\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t},\n\n\tdata: {\n\n\t\tget: function () {\n\n\t\t\treturn this._data;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._data = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\titemSize: {\n\n\t\tget: function () {\n\n\t\t\treturn this._itemSize;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._itemSize = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\toffset: {\n\n\t\tget: function () {\n\n\t\t\treturn this._offset;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._offset = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tnormalized: {\n\n\t\tget: function () {\n\n\t\t\treturn this._normalized;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._normalized = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar _geometry;\n\nvar _intersectPoint = new Vector3();\nvar _worldScale = new Vector3();\nvar _mvPosition = new Vector3();\n\nvar _alignedPosition = new Vector2();\nvar _rotatedPosition = new Vector2();\nvar _viewWorldMatrix = new Matrix4();\n\nvar _vA$1 = new Vector3();\nvar _vB$1 = new Vector3();\nvar _vC$1 = new Vector3();\n\nvar _uvA$1 = new Vector2();\nvar _uvB$1 = new Vector2();\nvar _uvC$1 = new Vector2();\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( _geometry === undefined ) {\n\n\t\t_geometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = _geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tvar rotation = this.material.rotation;\n\t\tvar sin, cos;\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tvar center = this.center;\n\n\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA$1.set( 0, 0 );\n\t\t_uvB$1.set( 1, 0 );\n\t\t_uvC$1.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _v1$4 = new Vector3();\nvar _v2$2 = new Vector3();\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n\tthis.autoUpdate = true;\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tisLOD: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t},\n\n\tupdate: function ( camera ) {\n\n\t\tvar levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = _v1$4.distanceTo( _v2$2 );\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nvar _offsetMatrix = new Matrix4();\nvar _identityMatrix = new Matrix4();\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\tthis.frame = - 1;\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: function () {\n\n\t\tvar bones = this.bones;\n\t\tvar boneInverses = this.boneInverses;\n\t\tvar boneMatrices = this.boneMatrices;\n\t\tvar boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== undefined ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _instanceLocalMatrix = new Matrix4();\nvar _instanceWorldMatrix = new Matrix4();\n\nvar _instanceIntersects = [];\n\nvar _mesh = new Mesh();\n\nfunction InstancedMesh( geometry, material, count ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\n\tthis.count = count;\n\n}\n\nInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: InstancedMesh,\n\n\tisInstancedMesh: true,\n\n\tgetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar matrixWorld = this.matrixWorld;\n\t\tvar raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( var instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tif ( _instanceIntersects.length > 0 ) {\n\n\t\t\t\t_instanceIntersects[ 0 ].instanceId = instanceId;\n\t\t\t\t_instanceIntersects[ 0 ].object = this;\n\n\t\t\t\tintersects.push( _instanceIntersects[ 0 ] );\n\n\t\t\t\t_instanceIntersects.length = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tsetMatrixAt: function ( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _start = new Vector3();\nvar _end = new Vector3();\nvar _inverseMatrix$1 = new Matrix4();\nvar _ray$1 = new Ray();\nvar _sphere$2 = new Sphere();\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar precision = raycaster.linePrecision;\n\n\t\tvar geometry = this.geometry;\n\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t_sphere$2.radius += precision;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\tvar vStart = new Vector3();\n\t\tvar vEnd = new Vector3();\n\t\tvar interSegment = new Vector3();\n\t\tvar interRay = new Vector3();\n\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar nbVertices = vertices.length;\n\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _start$1 = new Vector3();\nvar _end$1 = new Vector3();\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: function () {\n\n\t\tvar geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\tvar lineDistances = [];\n\n\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t_start$1.copy( vertices[ i ] );\n\t\t\t\t_end$1.copy( vertices[ i + 1 ] );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar _inverseMatrix$2 = new Matrix4();\nvar _ray$2 = new Ray();\nvar _sphere$3 = new Sphere();\nvar _position$1 = new Vector3();\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.updateMorphTargets();\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: function ( raycaster, intersects ) {\n\n\t\tvar geometry = this.geometry;\n\t\tvar matrixWorld = this.matrixWorld;\n\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t_sphere$3.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar attributes = geometry.attributes;\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t_position$1.fromArray( positions, i * 3 );\n\n\t\t\t\t\ttestPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar vertices = geometry.vertices;\n\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\ttestPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tvar intersectPoint = new Vector3();\n\n\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tapplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction applyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.5)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tvar p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\tdo {\n\n\t\tvar a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tvar a = start;\n\tdo {\n\n\t\tvar b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [],\n\t\ti, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tvar p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t   ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t   ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\t   locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, p2 ) && equals( q1, q2 ) ) ||\n\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t   area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\t\t\tbevelOffset = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize + bevelOffset;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = 0;\n\n\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t}\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearcoat: <float>\n *  clearcoatRoughness: <float>\n *\n *  sheen: <Color>\n *\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearcoat = 0.0;\n\tthis.clearcoatRoughness = 0.0;\n\n\tthis.sheen = null; // null will disable sheen bsdf\n\n\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\tthis.clearcoatNormalMap = null;\n\n\tthis.transparency = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = {\n\n\t\t'STANDARD': '',\n\t\t'PHYSICAL': ''\n\n\t};\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearcoat = source.clearcoat;\n\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\n\tif ( source.sheen ) this.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\telse this.sheen = null;\n\n\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\tthis.transparency = source.transparency;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\tfps = fps || 30;\n\n\t\tvar clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tvar track = clip.tracks[ i ];\n\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tvar minStartTime = Infinity;\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\tvar handlers = [];\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\n\t\treturn this;\n\n\t};\n\n\tthis.addHandler = function ( regex, loader ) {\n\n\t\thandlers.push( regex, loader );\n\n\t\treturn this;\n\n\t};\n\n\tthis.removeHandler = function ( regex ) {\n\n\t\tvar index = handlers.indexOf( regex );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\thandlers.splice( index, 2 );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tthis.getHandler = function ( file ) {\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.crossOrigin = 'anonymous';\n\tthis.path = '';\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( Loader.prototype, {\n\n\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\tparse: function ( /* data */ ) {},\n\n\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FileLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AnimationLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CompressedTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: DataTextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: CubeTextureLoader,\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: TextureLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.mapPass = null;\n\tthis.matrix = new Matrix4();\n\n\tthis._frustum = new Frustum();\n\tthis._frameExtents = new Vector2( 1, 1 );\n\n\tthis._viewportCount = 1;\n\n\tthis._viewports = [\n\n\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t];\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\t_projScreenMatrix: new Matrix4(),\n\n\t_lightPositionWorld: new Vector3(),\n\n\t_lookTarget: new Vector3(),\n\n\tgetViewportCount: function () {\n\n\t\treturn this._viewportCount;\n\n\t},\n\n\tgetFrustum: function () {\n\n\t\treturn this._frustum;\n\n\t},\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar shadowCamera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t},\n\n\tgetViewport: function ( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t},\n\n\tgetFrameExtents: function () {\n\n\t\treturn this._frameExtents;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction PointLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\tthis._frameExtents = new Vector2( 4, 2 );\n\n\tthis._viewportCount = 6;\n\n\tthis._viewports = [\n\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t// following orientation:\n\t\t//\n\t\t//  xzXZ\n\t\t//   y Y\n\t\t//\n\t\t// X - Positive x direction\n\t\t// x - Negative x direction\n\t\t// Y - Positive y direction\n\t\t// y - Negative y direction\n\t\t// Z - Positive z direction\n\t\t// z - Negative z direction\n\n\t\t// positive X\n\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t// negative X\n\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t// positive Z\n\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t// negative Z\n\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t// positive Y\n\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t// negative Y\n\t\tnew Vector4( 1, 0, 1, 1 )\n\t];\n\n\tthis._cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tthis._cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n}\n\nPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: PointLightShadow,\n\n\tisPointLightShadow: true,\n\n\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\tif ( viewportIndex === undefined ) viewportIndex = 0;\n\n\t\tvar camera = this.camera,\n\t\t\tshadowMatrix = this.matrix,\n\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\tlookTarget = this._lookTarget,\n\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( lightPositionWorld );\n\n\t\tlookTarget.copy( camera.position );\n\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new PointLightShadow();\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow() {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow,\n\n\tisDirectionalLightShadow: true,\n\n\tupdateMatrices: function ( light ) {\n\n\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n\tthis.textures = {};\n\n}\n\nMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: MaterialLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\treturn material;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis._meshPerAttribute = meshPerAttribute || 1;\n\n\tthis.versionVAO = 0;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nObject.defineProperties( InstancedBufferAttribute.prototype, {\n\n\tmeshPerAttribute: {\n\n\t\tget: function () {\n\n\t\t\treturn this._meshPerAttribute;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._meshPerAttribute = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: BufferGeometryLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ObjectLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\t\t\t\tvar count = data.count;\n\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tLoader.call( this, manager );\n\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: FontLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tLoader.call( this, manager );\n\n}\n\nAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\tconstructor: AudioLoader,\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nfunction SphericalHarmonics3() {\n\n\tthis.coefficients = [];\n\n\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\tthis.coefficients.push( new Vector3() );\n\n\t}\n\n}\n\nObject.assign( SphericalHarmonics3.prototype, {\n\n\tisSphericalHarmonics3: true,\n\n\tset: function ( coefficients ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tzero: function () {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScale( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScale( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScale( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScale( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScale( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScale( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScale( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScale( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t},\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScale( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScale( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScale( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScale( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScale( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScale( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScale( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScale( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t},\n\n\tadd: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tscale: function ( s ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( sh, alpha ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcopy: function ( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n} );\n\nObject.assign( SphericalHarmonics3, {\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( skyColor );\n\tvar color2 = new Color().set( groundColor );\n\n\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tvar c0 = Math.sqrt( Math.PI );\n\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\nvar _eyeRight = new Matrix4();\nvar _eyeLeft = new Matrix4();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n\tthis._cache = {\n\t\tfocus: null,\n\t\tfov: null,\n\t\taspect: null,\n\t\tnear: null,\n\t\tfar: null,\n\t\tzoom: null,\n\t\teyeSep: null\n\t};\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: function ( camera ) {\n\n\t\tvar cache = this._cache;\n\n\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tvar ymax = ( cache.near * Math.tan( _Math.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tvar xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _position$2 = new Vector3();\nvar _quaternion$3 = new Quaternion();\nvar _scale$1 = new Vector3();\nvar _orientation = new Vector3();\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n\t// private\n\n\tthis._clock = new Clock();\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tvar listener = this.context.listener;\n\t\tvar up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.loopStart = 0;\n\tthis.loopEnd = 0;\n\tthis.offset = 0;\n\tthis.duration = undefined;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis._startedAt = 0;\n\tthis._pausedAt = 0;\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaStreamSource: function ( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function ( delay ) {\n\n\t\tif ( delay === undefined ) delay = 0;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tvar source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._pausedAt + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis._pausedAt = ( this.context.currentTime - this._startedAt ) * this.playbackRate;\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._pausedAt = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetLoopStart: function ( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoopEnd: function ( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _position$3 = new Vector3();\nvar _quaternion$4 = new Quaternion();\nvar _scale$2 = new Vector3();\nvar _orientation$1 = new Vector3();\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.panningModel = 'HRTF';\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\tvar panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nvar _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t},\n\n\tparseTrackName: function ( trackName ) {\n\n\t\tvar matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tvar results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t},\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime: function ( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( var i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar id = 0;\n\nfunction UniformsGroup() {\n\n\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\tthis.name = '';\n\n\tthis.dynamic = false;\n\tthis.uniforms = [];\n\n}\n\nUniformsGroup.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: UniformsGroup,\n\n\tisUniformsGroup: true,\n\n\tadd: function ( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( uniform ) {\n\n\t\tvar index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t},\n\n\tsetName: function ( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.dynamic = source.dynamic;\n\n\t\tvar uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( var i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author robertlong / https://github.com/robertlong\n */\n\nfunction RawUniformsGroup( data ) {\n\n\tUniformsGroup.call( this );\n\n\tthis.data = data;\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n}\n\nRawUniformsGroup.prototype = Object.assign( Object.create( UniformsGroup.prototype ), {\n\n\tconstructor: RawUniformsGroup,\n\n\tisRawUniformsGroup: true,\n\n\tadd: function ( _uniform ) {\n\n\t\tconsole.warn( 'THREE.RawUniformsGroup: .add() is unimplemented. Modify .data manually instead.' );\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( _uniform ) {\n\n\t\tconsole.warn( 'THREE.RawUniformsGroup: .add() is unimplemented. Modify .data manually instead.' );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tUniformsGroup.prototype.copy.call( this );\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.data = source.data.slice( 0 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis._meshPerAttribute = meshPerAttribute || 1;\n\n\tthis.versionVAO = 0;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nObject.defineProperties( InstancedInterleavedBuffer.prototype, {\n\n\tmeshPerAttribute: {\n\n\t\tget: function () {\n\n\t\t\treturn this._meshPerAttribute;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._meshPerAttribute = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\tthis.camera = null;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _vector$6 = new Vector2();\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\tvar halfSize = _vector$6.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\tvar clampedPoint = _vector$6.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t},\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nvar _startP = new Vector3();\nvar _startEnd = new Vector3();\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\tvar t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t},\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _v1$5 = new Vector3();\nvar _v2$3 = new Vector3();\nvar _normalMatrix$1 = new Matrix3();\nvar _keys = [ 'a', 'b', 'c' ];\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.setAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n\n\tthis.object.updateMatrixWorld( true );\n\n\t_normalMatrix$1.getNormalMatrix( this.object.matrixWorld );\n\n\tvar matrixWorld = this.object.matrixWorld;\n\n\tvar position = this.geometry.attributes.position;\n\n\t//\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tvar vertex = vertices[ face[ _keys[ j ] ] ];\n\n\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t_v1$5.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t_v2$3.copy( normal ).applyMatrix3( _normalMatrix$1 ).normalize().multiplyScalar( this.size ).add( _v1$5 );\n\n\t\t\t\tposition.setXYZ( idx, _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, _v2$3.x, _v2$3.y, _v2$3.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tvar objPos = objGeometry.attributes.position;\n\n\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\tvar idx = 0;\n\n\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t_v1$5.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t_v2$3.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t_v2$3.applyMatrix3( _normalMatrix$1 ).normalize().multiplyScalar( this.size ).add( _v1$5 );\n\n\t\t\tposition.setXYZ( idx, _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, _v2$3.x, _v2$3.y, _v2$3.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t}\n\n\tposition.needsUpdate = true;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _vector$7 = new Vector3();\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tthis.light.updateMatrixWorld();\n\n\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t_vector$7.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\tthis.cone.lookAt( _vector$7 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.cone.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.cone.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar _vector$8 = new Vector3();\nvar _boneMatrix = new Matrix4();\nvar _matrixWorldInv = new Matrix4();\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar bones = this.bones;\n\n\tvar geometry = this.geometry;\n\tvar position = geometry.getAttribute( 'position' );\n\n\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t_vector$8.setFromMatrixPosition( _boneMatrix );\n\t\t\tposition.setXYZ( j, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t_vector$8.setFromMatrixPosition( _boneMatrix );\n\t\t\tposition.setXYZ( j + 1, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\tj += 2;\n\n\t\t}\n\n\t}\n\n\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n *\n *  This helper must be added as a child of the light\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tthis.type = 'RectAreaLightHelper';\n\n\tthis.light = light;\n\n\tthis.color = color; // optional hardwired color for the helper\n\n\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tLine.call( this, geometry, material );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Line.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t// prevent hue shift\n\t\tvar c = this.material.color;\n\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t}\n\n};\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar _vector$9 = new Vector3();\nvar _color1 = new Color();\nvar _color2 = new Color();\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar mesh = this.children[ 0 ];\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t_color1.copy( this.light.color );\n\t\t_color2.copy( this.light.groundColor );\n\n\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t}\n\n\t\tcolors.needsUpdate = true;\n\n\t}\n\n\tmesh.lookAt( _vector$9.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction LightProbeHelper( lightProbe, size ) {\n\n\tthis.lightProbe = lightProbe;\n\n\tthis.size = size;\n\n\tvar defines = {};\n\tdefines[ 'GAMMA_OUTPUT' ] = \"\";\n\n\t// material\n\tvar material = new ShaderMaterial( {\n\n\t\tdefines: defines,\n\n\t\tuniforms: {\n\n\t\t\tsh: { value: this.lightProbe.sh.coefficients }, // by reference\n\n\t\t\tintensity: { value: this.lightProbe.intensity }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\n\n\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t'}',\n\n\t\t].join( '\\n' ),\n\n\t\tfragmentShader: [\n\n\t\t\t'#define RECIPROCAL_PI 0.318309886',\n\n\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\n\n\t\t\t'\t// matrix is assumed to be orthogonal',\n\n\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\n\n\t\t\t'}',\n\n\t\t\t'vec3 linearToOutput( in vec3 a ) {',\n\n\t\t\t'\t#ifdef GAMMA_OUTPUT',\n\n\t\t\t'\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\treturn a;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'}',\n\n\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\n\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\n\n\t\t\t'\t// normal is assumed to have unit length',\n\n\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\n\n\t\t\t'\t// band 0',\n\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\n\n\t\t\t'\t// band 1',\n\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\n\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\n\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\n\n\t\t\t'\t// band 2',\n\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\n\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\n\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\n\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\n\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\n\n\t\t\t'\treturn result;',\n\n\t\t\t'}',\n\n\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\n\n\t\t\t'uniform float intensity; // light probe intensity',\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec3 normal = normalize( vNormal );',\n\n\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\n\n\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\n\n\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\n\n\t\t\t'\toutgoingLight = linearToOutput( outgoingLight );',\n\n\t\t\t'\tgl_FragColor = vec4( outgoingLight, 1.0 );',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' )\n\n\t} );\n\n\tvar geometry = new SphereBufferGeometry( 1, 32, 16 );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.onBeforeRender();\n\n}\n\nLightProbeHelper.prototype = Object.create( Mesh.prototype );\nLightProbeHelper.prototype.constructor = LightProbeHelper;\n\nLightProbeHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nLightProbeHelper.prototype.onBeforeRender = function () {\n\n\tthis.position.copy( this.lightProbe.position );\n\n\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\n\n\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _v1$6 = new Vector3();\nvar _v2$4 = new Vector3();\nvar _normalMatrix$2 = new Matrix3();\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.setAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = function () {\n\n\tthis.object.updateMatrixWorld( true );\n\n\t_normalMatrix$2.getNormalMatrix( this.object.matrixWorld );\n\n\tvar matrixWorld = this.object.matrixWorld;\n\n\tvar position = this.geometry.attributes.position;\n\n\t//\n\n\tvar objGeometry = this.object.geometry;\n\n\tvar vertices = objGeometry.vertices;\n\n\tvar faces = objGeometry.faces;\n\n\tvar idx = 0;\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tvar normal = face.normal;\n\n\t\t_v1$6.copy( vertices[ face.a ] )\n\t\t\t.add( vertices[ face.b ] )\n\t\t\t.add( vertices[ face.c ] )\n\t\t\t.divideScalar( 3 )\n\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t_v2$4.copy( normal ).applyMatrix3( _normalMatrix$2 ).normalize().multiplyScalar( this.size ).add( _v1$6 );\n\n\t\tposition.setXYZ( idx, _v1$6.x, _v1$6.y, _v1$6.z );\n\n\t\tidx = idx + 1;\n\n\t\tposition.setXYZ( idx, _v2$4.x, _v2$4.y, _v2$4.z );\n\n\t\tidx = idx + 1;\n\n\t}\n\n\tposition.needsUpdate = true;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nvar _v1$7 = new Vector3();\nvar _v2$5 = new Vector3();\nvar _v3$1 = new Vector3();\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\t_v1$7.setFromMatrixPosition( this.light.matrixWorld );\n\t_v2$5.setFromMatrixPosition( this.light.target.matrixWorld );\n\t_v3$1.subVectors( _v2$5, _v1$7 );\n\n\tthis.lightPlane.lookAt( _v2$5 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.lightPlane.material.color.set( this.color );\n\t\tthis.targetLine.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t}\n\n\tthis.targetLine.lookAt( _v2$5 );\n\tthis.targetLine.scale.z = _v3$1.length();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nvar _vector$a = new Vector3();\nvar _camera = new Camera();\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry = this.geometry;\n\tvar pointMap = this.pointMap;\n\n\tvar w = 1, h = 1;\n\n\t// we need just camera projection matrix inverse\n\t// world matrix must be identity\n\n\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t// center / target\n\n\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t// near\n\n\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t// far\n\n\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t// up\n\n\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t// cross\n\n\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n};\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector$a.set( x, y, z ).unproject( camera );\n\n\tvar points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nvar _box$3 = new Box3();\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = function ( object ) {\n\n\tif ( object !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t}\n\n\tif ( this.object !== undefined ) {\n\n\t\t_box$3.setFromObject( this.object );\n\n\t}\n\n\tif ( _box$3.isEmpty() ) return;\n\n\tvar min = _box$3.min;\n\tvar max = _box$3.max;\n\n\t/*\n\t  5____4\n\t1/___0/|\n\t| 6__|_7\n\t2/___3/\n\n\t0: max.x, max.y, max.z\n\t1: min.x, max.y, max.z\n\t2: min.x, min.y, max.z\n\t3: max.x, min.y, max.z\n\t4: max.x, max.y, min.z\n\t5: min.x, max.y, min.z\n\t6: min.x, min.y, min.z\n\t7: max.x, min.y, min.z\n\t*/\n\n\tvar position = this.geometry.attributes.position;\n\tvar array = position.array;\n\n\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\tposition.needsUpdate = true;\n\n\tthis.geometry.computeBoundingSphere();\n\n\n};\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, color ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tcolor = color || 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar _axis = new Vector3();\nvar _lineGeometry, _coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( _lineGeometry === undefined ) {\n\n\t\t_lineGeometry = new BufferGeometry();\n\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t// dir is assumed to be normalized\n\n\tif ( dir.y > 0.99999 ) {\n\n\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t} else if ( dir.y < - 0.99999 ) {\n\n\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t} else {\n\n\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\tvar radians = Math.acos( dir.y );\n\n\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t}\n\n};\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.set( color );\n\tthis.cone.material.color.set( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\treturn this.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t},\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\tsetDynamic: function ( value ) {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\treturn this;\n\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t},\n\tsetArray: function ( /* array */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t}\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddAttribute: function ( name, attribute ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\treturn this.setAttribute( name, attribute );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t},\n\tremoveAttribute: function ( name ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\treturn this.deleteAttribute( name );\n\n\t}\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( value );\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\tsetDynamic: function ( value ) {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\treturn this;\n\n\t},\n\tsetArray: function ( /* array */ ) {\n\n\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t}\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t},\n\tgetActiveMipMapLevel: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\treturn this.getActiveMipmapLevel();\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\tactiveCubeFace: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t},\n\tactiveMipMapLevel: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Audio.prototype, {\n\n\tload: {\n\t\tvalue: function ( file ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\tvar scope = this;\n\t\t\tvar audioLoader = new AudioLoader();\n\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t} );\n\t\t\treturn this;\n\n\t\t}\n\t},\n\tstartTime: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t}\n\t}\n\n} );\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, ClosedSplineCurve3, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, BoxGeometry as CubeGeometry, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DirectionalLightShadow, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, Face3, Face4, FaceColors, FaceNormalsHelper, FileLoader, FlatShading, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontFaceDirectionCCW, FrontFaceDirectionCW, FrontSide, Frustum, GammaEncoding, Geometry, GeometryUtils, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, LightProbeHelper, LightShadow, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, _Math as Math, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PositionalAudioHelper, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RawShaderMaterial, RawUniformsGroup, Ray, Raycaster, RectAreaLight, RectAreaLightHelper, RedFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SphericalReflectionMapping, Spline, SplineCurve, SplineCurve3, SpotLight, SpotLightHelper, SpotLightShadow, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uncharted2ToneMapping, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VertexNormalsHelper, VideoTexture, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n","/* global Ammo */\n\nexport const DefaultBufferSize = 3 * 1000000;\n\nexport const AmmoDebugConstants = {\n  NoDebug: 0,\n  DrawWireframe: 1,\n  DrawAabb: 2,\n  DrawFeaturesText: 4,\n  DrawContactPoints: 8,\n  NoDeactivation: 16,\n  NoHelpText: 32,\n  DrawText: 64,\n  ProfileTimings: 128,\n  EnableSatComparison: 256,\n  DisableBulletLCP: 512,\n  EnableCCD: 1024,\n  DrawConstraints: 1 << 11, //2048\n  DrawConstraintLimits: 1 << 12, //4096\n  FastWireframe: 1 << 13, //8192\n  DrawNormals: 1 << 14, //16384\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\n};\n\nconst setXYZ = function(array, index, x, y, z) {\n  index *= 3;\n  array[index + 0] = x;\n  array[index + 1] = y;\n  array[index + 2] = z;\n};\n\n/**\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\n * @class AmmoDebugDrawer\n * @param {Uint32Array} indexArray\n * @param {Float32Array} verticessArray\n * @param {Float32Array} colorsArray\n * @param {Ammo.btCollisionWorld} world\n * @param {object} [options]\n */\nexport const AmmoDebugDrawer = function(indexArray, verticesArray, colorsArray, world, options) {\n  this.world = world;\n  options = options || {};\n\n  this.verticesArray = verticesArray;\n  this.colorsArray = colorsArray;\n  this.indexArray = indexArray;\n\n  this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe;\n\n  this.index = 0;\n  if (this.indexArray) {\n    Atomics.store(this.indexArray, 0, this.index);\n  }\n\n  this.enabled = false;\n\n  this.debugDrawer = new Ammo.DebugDrawer();\n  this.debugDrawer.drawLine = this.drawLine.bind(this);\n  this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this);\n  this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this);\n  this.debugDrawer.draw3dText = this.draw3dText.bind(this);\n  this.debugDrawer.setDebugMode = this.setDebugMode.bind(this);\n  this.debugDrawer.getDebugMode = this.getDebugMode.bind(this);\n  this.debugDrawer.enable = this.enable.bind(this);\n  this.debugDrawer.disable = this.disable.bind(this);\n  this.debugDrawer.update = this.update.bind(this);\n\n  this.world.setDebugDrawer(this.debugDrawer);\n};\n\nAmmoDebugDrawer.prototype = function() {\n  return this.debugDrawer;\n};\n\nAmmoDebugDrawer.prototype.enable = function() {\n  this.enabled = true;\n};\n\nAmmoDebugDrawer.prototype.disable = function() {\n  this.enabled = false;\n};\n\nAmmoDebugDrawer.prototype.update = function() {\n  if (!this.enabled) {\n    return;\n  }\n\n  if (this.indexArray) {\n    if (Atomics.load(this.indexArray, 0) === 0) {\n      this.index = 0;\n      this.world.debugDrawWorld();\n      Atomics.store(this.indexArray, 0, this.index);\n    }\n  } else {\n    this.index = 0;\n    this.world.debugDrawWorld();\n  }\n};\n\nAmmoDebugDrawer.prototype.drawLine = function(from, to, color) {\n  const heap = Ammo.HEAPF32;\n  const r = heap[(color + 0) / 4];\n  const g = heap[(color + 4) / 4];\n  const b = heap[(color + 8) / 4];\n\n  const fromX = heap[(from + 0) / 4];\n  const fromY = heap[(from + 4) / 4];\n  const fromZ = heap[(from + 8) / 4];\n  setXYZ(this.verticesArray, this.index, fromX, fromY, fromZ);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n\n  const toX = heap[(to + 0) / 4];\n  const toY = heap[(to + 4) / 4];\n  const toZ = heap[(to + 8) / 4];\n  setXYZ(this.verticesArray, this.index, toX, toY, toZ);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n};\n\n//TODO: figure out how to make lifeTime work\nAmmoDebugDrawer.prototype.drawContactPoint = function(pointOnB, normalOnB, distance, lifeTime, color) {\n  const heap = Ammo.HEAPF32;\n  const r = heap[(color + 0) / 4];\n  const g = heap[(color + 4) / 4];\n  const b = heap[(color + 8) / 4];\n\n  const x = heap[(pointOnB + 0) / 4];\n  const y = heap[(pointOnB + 4) / 4];\n  const z = heap[(pointOnB + 8) / 4];\n  setXYZ(this.verticesArray, this.index, x, y, z);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n\n  const dx = heap[(normalOnB + 0) / 4] * distance;\n  const dy = heap[(normalOnB + 4) / 4] * distance;\n  const dz = heap[(normalOnB + 8) / 4] * distance;\n  setXYZ(this.verticesArray, this.index, x + dx, y + dy, z + dz);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n};\n\nAmmoDebugDrawer.prototype.reportErrorWarning = function(warningString) {\n  if (Ammo.hasOwnProperty(\"UTF8ToString\")) {\n    console.warn(Ammo.UTF8ToString(warningString));\n  } else if (!this.warnedOnce) {\n    this.warnedOnce = true;\n    console.warn(\"Cannot print warningString, please export UTF8ToString from Ammo.js in make.py\");\n  }\n};\n\nAmmoDebugDrawer.prototype.draw3dText = function(location, textString) {\n  //TODO\n  console.warn(\"TODO: draw3dText\");\n};\n\nAmmoDebugDrawer.prototype.setDebugMode = function(debugMode) {\n  this.debugDrawMode = debugMode;\n};\n\nAmmoDebugDrawer.prototype.getDebugMode = function() {\n  return this.debugDrawMode;\n};\n","/* global Ammo */\n\nconst EPS = 10e-6;\n\nimport { AmmoDebugDrawer, AmmoDebugConstants } from \"ammo-debug-drawer\";\nimport CONSTANTS from \"../constants.js\";\nimport * as THREE from \"three\";\n\n/* @param {object} worldConfig */\nconst World = function(worldConfig) {\n  this.collisionConfiguration = null;\n  this.dispatcher = null;\n  this.broadphase = null;\n  this.solver = null;\n  this.physicsWorld = null;\n  this.debugDrawer = null;\n\n  this.object3Ds = new Map();\n  this.collisions = new Map();\n  this.collisionKeys = [];\n\n  this.epsilon = worldConfig.epsilon || EPS;\n  this.debugDrawMode = worldConfig.debugDrawMode || AmmoDebugConstants.NoDebug;\n  this.maxSubSteps = worldConfig.maxSubSteps || 4;\n  this.fixedTimeStep = worldConfig.fixedTimeStep || 1 / 60;\n  this.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n  this.dispatcher = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\n  this.broadphase = new Ammo.btDbvtBroadphase();\n  this.solver = new Ammo.btSequentialImpulseConstraintSolver();\n  this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\n    this.dispatcher,\n    this.broadphase,\n    this.solver,\n    this.collisionConfiguration\n  );\n  this.physicsWorld.setForceUpdateAllAabbs(false);\n  const gravity = new Ammo.btVector3(0, CONSTANTS.GRAVITY, 0);\n  if (worldConfig.hasOwnProperty(\"gravity\")) {\n    gravity.setValue(worldConfig.gravity.x, worldConfig.gravity.y, worldConfig.gravity.z);\n  }\n  this.physicsWorld.setGravity(gravity);\n  Ammo.destroy(gravity);\n  this.physicsWorld.getSolverInfo().set_m_numIterations(worldConfig.solverIterations || 10);\n};\n\nWorld.prototype.isDebugEnabled = function() {\n  return this.debugDrawMode !== AmmoDebugConstants.NoDebug;\n};\n\n/* @param {Ammo.btCollisionObject} body */\nWorld.prototype.addBody = function(body, object3D, group, mask) {\n  this.physicsWorld.addRigidBody(body, group, mask);\n  this.object3Ds.set(Ammo.getPointer(body), object3D);\n};\n\n/* @param {Ammo.btCollisionObject} body */\nWorld.prototype.removeBody = function(body) {\n  this.physicsWorld.removeRigidBody(body);\n  const bodyptr = Ammo.getPointer(body);\n  this.object3Ds.delete(bodyptr);\n  this.collisions.delete(bodyptr);\n  if (this.collisionKeys.indexOf(bodyptr) !== -1) {\n    this.collisionKeys.splice(this.collisionKeys.indexOf(bodyptr), 1);\n  }\n};\n\nWorld.prototype.updateBody = function(body) {\n  if (this.object3Ds.has(Ammo.getPointer(body))) {\n    this.physicsWorld.updateSingleAabb(body);\n  }\n};\n\n/* @param {number} deltaTime */\nWorld.prototype.step = function(deltaTime) {\n  this.physicsWorld.stepSimulation(deltaTime, this.maxSubSteps, this.fixedTimeStep);\n\n  for (let k = 0; k < this.collisionKeys.length; k++) {\n    this.collisions.get(this.collisionKeys[k]).length = 0;\n  }\n\n  const numManifolds = this.dispatcher.getNumManifolds();\n  for (let i = 0; i < numManifolds; i++) {\n    const persistentManifold = this.dispatcher.getManifoldByIndexInternal(i);\n    const numContacts = persistentManifold.getNumContacts();\n    const body0ptr = Ammo.getPointer(persistentManifold.getBody0());\n    const body1ptr = Ammo.getPointer(persistentManifold.getBody1());\n\n    for (let j = 0; j < numContacts; j++) {\n      const manifoldPoint = persistentManifold.getContactPoint(j);\n      const distance = manifoldPoint.getDistance();\n      if (distance <= this.epsilon) {\n        if (!this.collisions.has(body0ptr)) {\n          this.collisions.set(body0ptr, []);\n          this.collisionKeys.push(body0ptr);\n        }\n        if (this.collisions.get(body0ptr).indexOf(body1ptr) === -1) {\n          this.collisions.get(body0ptr).push(body1ptr);\n        }\n        break;\n      }\n    }\n  }\n\n  if (this.debugDrawer) {\n    this.debugDrawer.update();\n  }\n};\n\nWorld.prototype.destroy = function() {\n  Ammo.destroy(this.collisionConfiguration);\n  Ammo.destroy(this.dispatcher);\n  Ammo.destroy(this.broadphase);\n  Ammo.destroy(this.solver);\n  Ammo.destroy(this.physicsWorld);\n  Ammo.destroy(this.debugDrawer);\n};\n\n/**\n * @param {THREE.Scene} scene\n * @param {object} options\n */\nWorld.prototype.getDebugDrawer = function(debugIndexArray, debugMatricesArray, debugColorsArray, options) {\n  if (!this.debugDrawer) {\n    options = options || {};\n    options.debugDrawMode = options.debugDrawMode || this.debugDrawMode;\n    this.debugDrawer = new AmmoDebugDrawer(\n      debugIndexArray,\n      debugMatricesArray,\n      debugColorsArray,\n      this.physicsWorld,\n      options\n    );\n  }\n\n  return this.debugDrawer;\n};\n\nexport default World;\n","/* global Ammo */\nimport * as THREE from \"three\";\n\nimport CONSTANTS from \"../constants.js\";\nconst ACTIVATION_STATE = CONSTANTS.ACTIVATION_STATE,\n  COLLISION_FLAG = CONSTANTS.COLLISION_FLAG,\n  SHAPE = CONSTANTS.SHAPE,\n  TYPE = CONSTANTS.TYPE,\n  FIT = CONSTANTS.FIT;\n\nconst ACTIVATION_STATES = [\n  ACTIVATION_STATE.ACTIVE_TAG,\n  ACTIVATION_STATE.ISLAND_SLEEPING,\n  ACTIVATION_STATE.WANTS_DEACTIVATION,\n  ACTIVATION_STATE.DISABLE_DEACTIVATION,\n  ACTIVATION_STATE.DISABLE_SIMULATION\n];\n\nconst RIGID_BODY_FLAGS = {\n  NONE: 0,\n  DISABLE_WORLD_GRAVITY: 1\n};\n\nfunction almostEqualsVector3(epsilon, u, v) {\n  return Math.abs(u.x - v.x) < epsilon && Math.abs(u.y - v.y) < epsilon && Math.abs(u.z - v.z) < epsilon;\n}\n\nfunction almostEqualsBtVector3(epsilon, u, v) {\n  return Math.abs(u.x() - v.x()) < epsilon && Math.abs(u.y() - v.y()) < epsilon && Math.abs(u.z() - v.z()) < epsilon;\n}\n\nfunction almostEqualsQuaternion(epsilon, u, v) {\n  return (\n    (Math.abs(u.x - v.x) < epsilon &&\n      Math.abs(u.y - v.y) < epsilon &&\n      Math.abs(u.z - v.z) < epsilon &&\n      Math.abs(u.w - v.w) < epsilon) ||\n    (Math.abs(u.x + v.x) < epsilon &&\n      Math.abs(u.y + v.y) < epsilon &&\n      Math.abs(u.z + v.z) < epsilon &&\n      Math.abs(u.w + v.w) < epsilon)\n  );\n}\n\n/**\n * Initializes a body component, assigning it to the physics system and binding listeners for\n * parsing the elements geometry.\n */\nfunction Body(bodyConfig, matrix, world) {\n  this.loadedEvent = bodyConfig.loadedEvent ? bodyConfig.loadedEvent : \"\";\n  this.mass = bodyConfig.hasOwnProperty(\"mass\") ? bodyConfig.mass : 1;\n  const worldGravity = world.physicsWorld.getGravity();\n  this.gravity = new Ammo.btVector3(worldGravity.x(), worldGravity.y(), worldGravity.z());\n  if (bodyConfig.gravity) {\n    this.gravity.setValue(bodyConfig.gravity.x, bodyConfig.gravity.y, bodyConfig.gravity.z);\n  }\n  this.linearDamping = bodyConfig.hasOwnProperty(\"linearDamping\") ? bodyConfig.linearDamping : 0.01;\n  this.angularDamping = bodyConfig.hasOwnProperty(\"angularDamping\") ? bodyConfig.angularDamping : 0.01;\n  this.linearSleepingThreshold = bodyConfig.hasOwnProperty(\"linearSleepingThreshold\")\n    ? bodyConfig.linearSleepingThreshold\n    : 1.6;\n  this.angularSleepingThreshold = bodyConfig.hasOwnProperty(\"angularSleepingThreshold\")\n    ? bodyConfig.angularSleepingThreshold\n    : 2.5;\n  this.angularFactor = new THREE.Vector3(1, 1, 1);\n  if (bodyConfig.angularFactor) {\n    this.angularFactor.copy(bodyConfig.angularFactor);\n  }\n  this.activationState =\n    bodyConfig.activationState && ACTIVATION_STATES.indexOf(bodyConfig.activationState) !== -1\n      ? bodyConfig.activationState\n      : ACTIVATION_STATE.ACTIVE_TAG;\n  this.type = bodyConfig.type ? bodyConfig.type : TYPE.DYNAMIC;\n  this.emitCollisionEvents = bodyConfig.hasOwnProperty(\"emitCollisionEvents\") ? bodyConfig.emitCollisionEvents : false;\n  this.disableCollision = bodyConfig.hasOwnProperty(\"disableCollision\") ? bodyConfig.disableCollision : false;\n  this.collisionFilterGroup = bodyConfig.hasOwnProperty(\"collisionFilterGroup\") ? bodyConfig.collisionFilterGroup : 1; //32-bit mask\n  this.collisionFilterMask = bodyConfig.hasOwnProperty(\"collisionFilterMask\") ? bodyConfig.collisionFilterMask : 1; //32-bit mask\n  this.scaleAutoUpdate = bodyConfig.hasOwnProperty(\"scaleAutoUpdate\") ? bodyConfig.scaleAutoUpdate : true;\n\n  this.matrix = matrix;\n  this.world = world;\n  this.shapes = [];\n\n  this._initBody();\n}\n\n/**\n * Parses an element's geometry and component metadata to create an Ammo body instance for the component.\n */\nBody.prototype._initBody = (function() {\n  const pos = new THREE.Vector3();\n  const quat = new THREE.Quaternion();\n  const scale = new THREE.Vector3();\n  return function() {\n    this.localScaling = new Ammo.btVector3();\n\n    this.matrix.decompose(pos, quat, scale);\n\n    this.localScaling.setValue(scale.x, scale.y, scale.z);\n    this.prevScale = new THREE.Vector3(1, 1, 1);\n    this.prevNumChildShapes = 0;\n\n    this.msTransform = new Ammo.btTransform();\n    this.msTransform.setIdentity();\n    this.rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w);\n\n    this.msTransform.getOrigin().setValue(pos.x, pos.y, pos.z);\n    this.msTransform.setRotation(this.rotation);\n\n    this.motionState = new Ammo.btDefaultMotionState(this.msTransform);\n\n    this.localInertia = new Ammo.btVector3(0, 0, 0);\n\n    this.compoundShape = new Ammo.btCompoundShape(true);\n    this.compoundShape.setLocalScaling(this.localScaling);\n\n    this.rbInfo = new Ammo.btRigidBodyConstructionInfo(\n      this.mass,\n      this.motionState,\n      this.compoundShape,\n      this.localInertia\n    );\n    this.physicsBody = new Ammo.btRigidBody(this.rbInfo);\n    this.physicsBody.setActivationState(ACTIVATION_STATES.indexOf(this.activationState) + 1);\n    this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold, this.angularSleepingThreshold);\n\n    this.physicsBody.setDamping(this.linearDamping, this.angularDamping);\n\n    const angularFactor = new Ammo.btVector3(this.angularFactor.x, this.angularFactor.y, this.angularFactor.z);\n    this.physicsBody.setAngularFactor(angularFactor);\n    Ammo.destroy(angularFactor);\n\n    if (!almostEqualsBtVector3(0.001, this.gravity, this.world.physicsWorld.getGravity())) {\n      this.physicsBody.setGravity(this.gravity);\n      this.physicsBody.setFlags(RIGID_BODY_FLAGS.DISABLE_WORLD_GRAVITY);\n    }\n\n    this.updateCollisionFlags();\n\n    this.world.addBody(this.physicsBody, this.matrix, this.collisionFilterGroup, this.collisionFilterMask);\n\n    if (this.emitCollisionEvents) {\n      this.world.addEventListener(this.physicsBody);\n    }\n  };\n})();\n\n/**\n * Updates the body when shapes have changed. Should be called whenever shapes are added/removed or scale is changed.\n */\nBody.prototype.updateShapes = (function() {\n  const needsPolyhedralInitialization = [SHAPE.HULL, SHAPE.HACD, SHAPE.VHACD];\n  const pos = new THREE.Vector3();\n  const quat = new THREE.Quaternion();\n  const scale = new THREE.Vector3();\n  return function() {\n    let updated = false;\n    this.matrix.decompose(pos, quat, scale);\n    if (this.scaleAutoUpdate && this.prevScale && !almostEqualsVector3(0.001, scale, this.prevScale)) {\n      this.prevScale.copy(scale);\n      updated = true;\n\n      this.localScaling.setValue(this.prevScale.x, this.prevScale.y, this.prevScale.z);\n      this.compoundShape.setLocalScaling(this.localScaling);\n    }\n\n    if (this.shapesChanged) {\n      this.shapesChanged = false;\n      updated = true;\n      if (this.type === TYPE.DYNAMIC) {\n        this.updateMass();\n      }\n\n      this.world.updateBody(this.physicsBody);\n    }\n\n    //call initializePolyhedralFeatures for hull shapes if debug is turned on and/or scale changes\n    if (this.world.isDebugEnabled() && (updated || !this.polyHedralFeaturesInitialized)) {\n      for (let i = 0; i < this.shapes.length; i++) {\n        const collisionShape = this.shapes[i];\n        if (needsPolyhedralInitialization.indexOf(collisionShape.type) !== -1) {\n          collisionShape.initializePolyhedralFeatures(0);\n        }\n      }\n      this.polyHedralFeaturesInitialized = true;\n    }\n  };\n})();\n\n/**\n * Update the configuration of the body.\n */\nBody.prototype.update = function(bodyConfig) {\n  if (\n    (bodyConfig.type && bodyConfig.type !== this.type) ||\n    (bodyConfig.disableCollision && bodyConfig.disableCollision !== this.disableCollision)\n  ) {\n    if (bodyConfig.type) this.type = bodyConfig.type;\n    if (bodyConfig.disableCollision) this.disableCollision = bodyConfig.disableCollision;\n    this.updateCollisionFlags();\n  }\n\n  if (bodyConfig.activationState && bodyConfig.activationState !== this.activationState) {\n    this.activationState = bodyConfig.activationState;\n    this.physicsBody.forceActivationState(ACTIVATION_STATES.indexOf(this.activationState) + 1);\n    if (this.activationState === ACTIVATION_STATE.ACTIVE_TAG) {\n      this.physicsBody.activate(true);\n    }\n  }\n\n  if (\n    (bodyConfig.collisionFilterGroup && bodyConfig.collisionFilterGroup !== this.collisionFilterGroup) ||\n    (bodyConfig.collisionFilterMask && bodyConfig.collisionFilterMask !== this.collisionFilterMask)\n  ) {\n    if (bodyConfig.collisionFilterGroup) this.collisionFilterGroup = bodyConfig.collisionFilterGroup;\n    if (bodyConfig.collisionFilterMask) this.collisionFilterMask = bodyConfig.collisionFilterMask;\n    const broadphaseProxy = this.physicsBody.getBroadphaseProxy();\n    broadphaseProxy.set_m_collisionFilterGroup(this.collisionFilterGroup);\n    broadphaseProxy.set_m_collisionFilterMask(this.collisionFilterMask);\n    this.world.broadphase\n      .getOverlappingPairCache()\n      .removeOverlappingPairsContainingProxy(broadphaseProxy, this.world.dispatcher);\n  }\n\n  if (\n    (bodyConfig.linearDamping && bodyConfig.linearDamping != this.linearDamping) ||\n    (bodyConfig.angularDamping && bodyConfig.angularDamping != this.angularDamping)\n  ) {\n    if (bodyConfig.linearDamping) this.linearDamping = bodyConfig.linearDamping;\n    if (bodyConfig.angularDamping) this.angularDamping = bodyConfig.angularDamping;\n    this.physicsBody.setDamping(this.linearDamping, this.angularDamping);\n  }\n\n  if (bodyConfig.gravity) {\n    this.gravity.setValue(bodyConfig.gravity.x, bodyConfig.gravity.y, bodyConfig.gravity.z);\n    if (!almostEqualsBtVector3(0.001, this.gravity, this.physicsBody.getGravity())) {\n      if (!almostEqualsBtVector3(0.001, this.gravity, this.world.physicsWorld.getGravity())) {\n        this.physicsBody.setFlags(RIGID_BODY_FLAGS.DISABLE_WORLD_GRAVITY);\n      } else {\n        this.physicsBody.setFlags(RIGID_BODY_FLAGS.NONE);\n      }\n      this.physicsBody.setGravity(this.gravity);\n    }\n  }\n\n  if (\n    (bodyConfig.linearSleepingThreshold && bodyConfig.linearSleepingThreshold != this.linearSleepingThreshold) ||\n    (bodyConfig.angularSleepingThreshold && bodyConfig.angularSleepingThreshold != this.angularSleepingThreshold)\n  ) {\n    if (bodyConfig.linearSleepingThreshold) this.linearSleepingThreshold = bodyConfig.linearSleepingThreshold;\n    if (bodyConfig.angularSleepingThreshold) this.angularSleepingThreshold = bodyConfig.angularSleepingThreshold;\n    this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold, this.angularSleepingThreshold);\n  }\n\n  if (bodyConfig.angularFactor && !almostEqualsVector3(0.001, bodyConfig.angularFactor, this.angularFactor)) {\n    this.angularFactor.copy(bodyConfig.angularFactor);\n    const angularFactor = new Ammo.btVector3(this.angularFactor.x, this.angularFactor.y, this.angularFactor.z);\n    this.physicsBody.setAngularFactor(angularFactor);\n    Ammo.destroy(angularFactor);\n  }\n\n  //TODO: support dynamic update for other properties\n};\n\n/**\n * Removes the component and all physics and scene side effects.\n */\nBody.prototype.destroy = function() {\n  if (this.triMesh) Ammo.destroy(this.triMesh);\n  if (this.localScaling) Ammo.destroy(this.localScaling);\n\n  for (let i = 0; i < this.shapes.length; i++) {\n    this.compoundShape.removeChildShape([i]);\n  }\n  if (this.compoundShape) Ammo.destroy(this.compoundShape);\n\n  this.world.removeBody(this.physicsBody);\n  Ammo.destroy(this.physicsBody);\n  delete this.physicsBody;\n  Ammo.destroy(this.rbInfo);\n  Ammo.destroy(this.msTransform);\n  Ammo.destroy(this.motionState);\n  Ammo.destroy(this.localInertia);\n  Ammo.destroy(this.rotation);\n  Ammo.destroy(this.gravity);\n};\n\n/**\n * Updates the rigid body's position, velocity, and rotation, based on the scene.\n */\nBody.prototype.syncToPhysics = (function() {\n  const pos = new THREE.Vector3(),\n    quat = new THREE.Quaternion(),\n    scale = new THREE.Vector3(),\n    q = new THREE.Vector3(),\n    v = new THREE.Vector3();\n  return function(setCenterOfMassTransform) {\n    const body = this.physicsBody;\n    if (!body) return;\n\n    this.motionState.getWorldTransform(this.msTransform);\n\n    this.matrix.decompose(pos, quat, scale);\n\n    const position = this.msTransform.getOrigin();\n    v.set(position.x(), position.y(), position.z());\n\n    const quaternion = this.msTransform.getRotation();\n    q.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n\n    if (!almostEqualsVector3(0.001, pos, v) || !almostEqualsQuaternion(0.001, quat, q)) {\n      if (!this.physicsBody.isActive()) {\n        this.physicsBody.activate(true);\n      }\n      this.msTransform.getOrigin().setValue(pos.x, pos.y, pos.z);\n      this.rotation.setValue(quat.x, quat.y, quat.z, quat.w);\n      this.msTransform.setRotation(this.rotation);\n      this.motionState.setWorldTransform(this.msTransform);\n\n      if (this.type === TYPE.STATIC || setCenterOfMassTransform) {\n        this.physicsBody.setCenterOfMassTransform(this.msTransform);\n      }\n    }\n  };\n})();\n\n/**\n * Updates the scene object's position and rotation, based on the physics simulation.\n */\nBody.prototype.syncFromPhysics = (function() {\n  const pos = new THREE.Vector3(),\n    quat = new THREE.Quaternion(),\n    scale = new THREE.Vector3();\n  return function() {\n    this.motionState.getWorldTransform(this.msTransform);\n    const position = this.msTransform.getOrigin();\n    const quaternion = this.msTransform.getRotation();\n\n    const body = this.physicsBody;\n\n    if (!body) return;\n    this.matrix.decompose(pos, quat, scale);\n    pos.set(position.x(), position.y(), position.z());\n    quat.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n    this.matrix.compose(pos, quat, scale);\n  };\n})();\n\nBody.prototype.addShape = function(collisionShape) {\n  if (collisionShape.type === SHAPE.MESH && this.type !== TYPE.STATIC) {\n    console.warn(\"non-static mesh colliders not supported\");\n    return;\n  }\n\n  this.shapes.push(collisionShape);\n  this.compoundShape.addChildShape(collisionShape.localTransform, collisionShape);\n  this.shapesChanged = true;\n  this.updateShapes();\n};\n\nBody.prototype.removeShape = function(collisionShape) {\n  const index = this.shapes.indexOf(collisionShape);\n  if (this.compoundShape && index !== -1) {\n    this.compoundShape.removeChildShape(this.shapes[index]);\n    this.shapesChanged = true;\n    this.shapes.splice(index, 1);\n    this.updateShapes();\n  }\n};\n\nBody.prototype.updateMass = function() {\n  const mass = this.type === TYPE.STATIC ? 0 : this.mass;\n  this.compoundShape.calculateLocalInertia(mass, this.localInertia);\n  this.physicsBody.setMassProps(mass, this.localInertia);\n  this.physicsBody.updateInertiaTensor();\n};\n\nBody.prototype.updateCollisionFlags = function() {\n  let flags = this.disableCollision ? 4 : 0;\n  switch (this.type) {\n    case TYPE.STATIC:\n      flags |= COLLISION_FLAG.STATIC_OBJECT;\n      break;\n    case TYPE.KINEMATIC:\n      flags |= COLLISION_FLAG.KINEMATIC_OBJECT;\n      break;\n    default:\n      this.physicsBody.applyGravity();\n      break;\n  }\n  this.physicsBody.setCollisionFlags(flags);\n\n  this.updateMass();\n\n  // TODO: enable CCD if dynamic?\n  // this.physicsBody.setCcdMotionThreshold(0.001);\n  // this.physicsBody.setCcdSweptSphereRadius(0.001);\n\n  this.world.updateBody(this.physicsBody);\n};\n\nBody.prototype.getVelocity = function() {\n  return this.physicsBody.getLinearVelocity();\n};\n\nexport default Body;\n","/* global Ammo */\nimport CONSTANTS from \"../constants.js\";\nconst CONSTRAINT = CONSTANTS.CONSTRAINT;\nconst CONSTRAINTS = [\n  CONSTRAINT.LOCK,\n  CONSTRAINT.FIXED,\n  CONSTRAINT.SPRING,\n  CONSTRAINT.SLIDER,\n  CONSTRAINT.HINGE,\n  CONSTRAINT.CONE_TWIST,\n  CONSTRAINT.POINT_TO_POINT\n];\n\n/**\n * @return {Ammo.btTypedConstraint}\n */\nconst Constraint = function(constraintConfig, body, targetBody, world) {\n  this.physicsConstraint;\n\n  this.world = world;\n\n  const type =\n    constraintConfig.type && CONSTRAINTS.indexOf(constraintConfig.type) ? constraintConfig.type : CONSTRAINT.LOCK;\n\n  const bodyTransform = body.physicsBody\n    .getCenterOfMassTransform()\n    .inverse()\n    .op_mul(targetBody.physicsBody.getWorldTransform());\n  const targetTransform = new Ammo.btTransform();\n  targetTransform.setIdentity();\n\n  switch (type) {\n    case CONSTRAINT.LOCK: {\n      this.physicsConstraint = new Ammo.btGeneric6DofConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      const zero = new Ammo.btVector3(0, 0, 0);\n      //TODO: allow these to be configurable\n      this.physicsConstraint.setLinearLowerLimit(zero);\n      this.physicsConstraint.setLinearUpperLimit(zero);\n      this.physicsConstraint.setAngularLowerLimit(zero);\n      this.physicsConstraint.setAngularUpperLimit(zero);\n      Ammo.destroy(zero);\n      break;\n    }\n    //TODO: test and verify all other constraint types\n    case CONSTRAINT.FIXED: {\n      //btFixedConstraint does not seem to debug render\n      bodyTransform.setRotation(body.physicsBody.getWorldTransform().getRotation());\n      targetTransform.setRotation(targetBody.physicsBody.getWorldTransform().getRotation());\n      this.physicsConstraint = new Ammo.btFixedConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform\n      );\n      break;\n    }\n    case CONSTRAINT.SPRING: {\n      this.physicsConstraint = new Ammo.btGeneric6DofSpringConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      //TODO: enableSpring, setStiffness and setDamping\n      break;\n    }\n    case CONSTRAINT.SLIDER: {\n      //TODO: support setting linear and angular limits\n      this.physicsConstraint = new Ammo.btSliderConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      this.physicsConstraint.setLowerLinLimit(-1);\n      this.physicsConstraint.setUpperLinLimit(1);\n      // this.physicsConstraint.setLowerAngLimit();\n      // this.physicsConstraint.setUpperAngLimit();\n      break;\n    }\n    case CONSTRAINT.HINGE: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: hinge\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: hinge\");\n      }\n      if (!constraintConfig.axis) {\n        throw new Error(\"axis must be defined for type: hinge\");\n      }\n      if (!constraintConfig.targetAxis) {\n        throw new Error(\"targetAxis must be defined for type: hinge\");\n      }\n\n      const pivot = new Ammo.btVector3(constraintConfig.pivot.x, constraintConfig.pivot.y, constraintConfig.pivot.z);\n      const targetPivot = new Ammo.btVector3(\n        constraintConfig.targetPivot.x,\n        constraintConfig.targetPivot.y,\n        constraintConfig.targetPivot.z\n      );\n\n      const axis = new Ammo.btVector3(constraintConfig.axis.x, constraintConfig.axis.y, constraintConfig.axis.z);\n      const targetAxis = new Ammo.btVector3(\n        constraintConfig.targetAxis.x,\n        constraintConfig.targetAxis.y,\n        constraintConfig.targetAxis.z\n      );\n\n      this.physicsConstraint = new Ammo.btHingeConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        pivot,\n        targetPivot,\n        axis,\n        targetAxis,\n        true\n      );\n\n      Ammo.destroy(pivot);\n      Ammo.destroy(targetPivot);\n      Ammo.destroy(axis);\n      Ammo.destroy(targetAxis);\n      break;\n    }\n    case CONSTRAINT.CONE_TWIST: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: cone-twist\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: cone-twist\");\n      }\n\n      const pivotTransform = new Ammo.btTransform();\n      pivotTransform.setIdentity();\n      pivotTransform\n        .getOrigin()\n        .setValue(constraintConfig.targetPivot.x, constraintConfig.targetPivot.y, constraintConfig.targetPivot.z);\n      this.physicsConstraint = new Ammo.btConeTwistConstraint(body.physicsBody, pivotTransform);\n      Ammo.destroy(pivotTransform);\n      break;\n    }\n    case CONSTRAINT.POINT_TO_POINT: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: point-to-point\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: point-to-point\");\n      }\n\n      const pivot = new Ammo.btVector3(constraintConfig.pivot.x, constraintConfig.pivot.y, constraintConfig.pivot.z);\n      const targetPivot = new Ammo.btVector3(\n        constraintConfig.targetPivot.x,\n        constraintConfig.targetPivot.y,\n        constraintConfig.targetPivot.z\n      );\n\n      this.physicsConstraint = new Ammo.btPoint2PointConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        pivot,\n        targetPivot\n      );\n\n      Ammo.destroy(pivot);\n      Ammo.destroy(targetPivot);\n      break;\n    }\n  }\n\n  Ammo.destroy(targetTransform);\n\n  this.world.physicsWorld.addConstraint(this.physicsConstraint, false);\n};\n\nConstraint.prototype.destroy = function() {\n  if (!this.physicsConstraint) return;\n\n  this.world.physicsWorld.removeConstraint(this.physicsConstraint);\n  Ammo.destroy(this.physicsConstraint);\n  this.physicsConstraint = null;\n};\n\nexport default Constraint;\n","\"use strict\";\n/* global Ammo */\nimport * as THREE from \"three\";\n\nexport const TYPE = {\n  BOX: \"box\",\n  CYLINDER: \"cylinder\",\n  SPHERE: \"sphere\",\n  CAPSULE: \"capsule\",\n  CONE: \"cone\",\n  HULL: \"hull\",\n  HACD: \"hacd\", //Hierarchical Approximate Convex Decomposition\n  VHACD: \"vhacd\", //Volumetric Hierarchical Approximate Convex Decomposition\n  MESH: \"mesh\",\n  HEIGHTFIELD: \"heightfield\"\n};\n\nexport const FIT = {\n  ALL: \"all\", //A single shape is automatically sized to bound all meshes within the entity.\n  MANUAL: \"manual\" //A single shape is sized manually. Requires halfExtents or sphereRadius.\n};\n\nexport const HEIGHTFIELD_DATA_TYPE = {\n  short: \"short\",\n  float: \"float\"\n};\n\nexport const createCollisionShapes = function(vertices, matrices, indexes, matrixWorld, options = {}) {\n  switch (options.type) {\n    case TYPE.BOX:\n      return [createBoxShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.CYLINDER:\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.CAPSULE:\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.CONE:\n      return [createConeShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.SPHERE:\n      return [createSphereShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.HULL:\n      return [createHullShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.HACD:\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options);\n    case TYPE.VHACD:\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options);\n    case TYPE.MESH:\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)];\n    case TYPE.HEIGHTFIELD:\n      return [createHeightfieldTerrainShape(options)];\n    default:\n      console.warn(options.type + \" is not currently supported\");\n      return [];\n  }\n};\n\n//TODO: support gimpact (dynamic trimesh) and heightmap\n\nexport const createBoxShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.BOX;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z);\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents);\n  Ammo.destroy(btHalfExtents);\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createCylinderShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CYLINDER;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z);\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btCylinderShape(btHalfExtents);\n      case \"x\":\n        return new Ammo.btCylinderShapeX(btHalfExtents);\n      case \"z\":\n        return new Ammo.btCylinderShapeZ(btHalfExtents);\n    }\n    return null;\n  })();\n  Ammo.destroy(btHalfExtents);\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createCapsuleShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CAPSULE;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const { x, y, z } = options.halfExtents;\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2);\n      case \"x\":\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2);\n      case \"z\":\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2);\n    }\n    return null;\n  })();\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createConeShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CONE;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const { x, y, z } = options.halfExtents;\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btConeShape(Math.max(x, z), y * 2);\n      case \"x\":\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2);\n      case \"z\":\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2);\n    }\n    return null;\n  })();\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createSphereShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.SPHERE;\n  _setOptions(options);\n\n  let radius;\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\n    radius = options.sphereRadius;\n  } else {\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices));\n  }\n\n  const collisionShape = new Ammo.btSphereShape(radius);\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n\n  return collisionShape;\n};\n\nexport const createHullShape = (function() {\n  const vertex = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, matrixWorld, options = {}) {\n    options.type = TYPE.HULL;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: hull\");\n      return null;\n    }\n\n    const bounds = _computeBounds(vertices, matrices);\n\n    const btVertex = new Ammo.btVector3();\n    const originalHull = new Ammo.btConvexHullShape();\n    originalHull.setMargin(options.margin);\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    let vertexCount = 0;\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3;\n    }\n\n    const maxVertices = options.hullMaxVertices || 100000;\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\n    if (vertexCount > maxVertices) {\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`);\n    }\n    const p = Math.min(1, maxVertices / vertexCount);\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < components.length; j += 3) {\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3;\n        if (Math.random() <= p || isLastVertex) {\n          // always include the last vertex\n          vertex\n            .set(components[j], components[j + 1], components[j + 2])\n            .applyMatrix4(matrix)\n            .sub(center);\n          btVertex.setValue(vertex.x, vertex.y, vertex.z);\n          originalHull.addPoint(btVertex, isLastVertex); // recalc AABB only on last geometry\n        }\n      }\n    }\n\n    let collisionShape = originalHull;\n    if (originalHull.getNumVertices() >= 100) {\n      //Bullet documentation says don't use convexHulls with 100 verts or more\n      const shapeHull = new Ammo.btShapeHull(originalHull);\n      shapeHull.buildHull(options.margin);\n      Ammo.destroy(originalHull);\n      collisionShape = new Ammo.btConvexHullShape(\n        Ammo.getPointer(shapeHull.getVertexPointer()),\n        shapeHull.numVertices()\n      );\n      Ammo.destroy(shapeHull); // btConvexHullShape makes a copy\n    }\n\n    Ammo.destroy(btVertex);\n\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n    return collisionShape;\n  };\n})();\n\nexport const createHACDShapes = (function() {\n  const vector = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.HACD;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: hacd\");\n      return [];\n    }\n\n    if (!Ammo.hasOwnProperty(\"HACD\")) {\n      console.warn(\n        \"HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.\"\n      );\n      return [];\n    }\n\n    const bounds = _computeBounds(vertices, matrices);\n    const scale = _computeScale(matrixWorld, options);\n\n    let vertexCount = 0;\n    let triCount = 0;\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3;\n      if (indexes && indexes[i]) {\n        triCount += indexes[i].length / 3;\n      } else {\n        triCount += vertices[i].length / 9;\n      }\n    }\n\n    const hacd = new Ammo.HACD();\n    if (options.hasOwnProperty(\"compacityWeight\")) hacd.SetCompacityWeight(options.compacityWeight);\n    if (options.hasOwnProperty(\"volumeWeight\")) hacd.SetVolumeWeight(options.volumeWeight);\n    if (options.hasOwnProperty(\"nClusters\")) hacd.SetNClusters(options.nClusters);\n    if (options.hasOwnProperty(\"nVerticesPerCH\")) hacd.SetNVerticesPerCH(options.nVerticesPerCH);\n    if (options.hasOwnProperty(\"concavity\")) hacd.SetConcavity(options.concavity);\n\n    const points = Ammo._malloc(vertexCount * 3 * 8);\n    const triangles = Ammo._malloc(triCount * 3 * 4);\n    hacd.SetPoints(points);\n    hacd.SetTriangles(triangles);\n    hacd.SetNPoints(vertexCount);\n    hacd.SetNTriangles(triCount);\n\n    let pptr = points / 8,\n      tptr = triangles / 4;\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < components.length; j += 3) {\n        vector\n          .set(components[j + 0], components[j + 1], components[j + 2])\n          .applyMatrix4(matrix)\n          .sub(center);\n        Ammo.HEAPF64[pptr + 0] = vector.x;\n        Ammo.HEAPF64[pptr + 1] = vector.y;\n        Ammo.HEAPF64[pptr + 2] = vector.z;\n        pptr += 3;\n      }\n      if (indexes[i]) {\n        const indices = indexes[i];\n        for (let j = 0; j < indices.length; j++) {\n          Ammo.HEAP32[tptr] = indices[j];\n          tptr++;\n        }\n      } else {\n        for (let j = 0; j < components.length / 3; j++) {\n          Ammo.HEAP32[tptr] = j;\n          tptr++;\n        }\n      }\n    }\n\n    hacd.Compute();\n    Ammo._free(points);\n    Ammo._free(triangles);\n    const nClusters = hacd.GetNClusters();\n\n    const shapes = [];\n    for (let i = 0; i < nClusters; i++) {\n      const hull = new Ammo.btConvexHullShape();\n      hull.setMargin(options.margin);\n      const nPoints = hacd.GetNPointsCH(i);\n      const nTriangles = hacd.GetNTrianglesCH(i);\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8);\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4);\n      hacd.GetCH(i, hullPoints, hullTriangles);\n\n      const pptr = hullPoints / 8;\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3();\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0];\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1];\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2];\n        btVertex.setValue(px, py, pz);\n        hull.addPoint(btVertex, pi === nPoints - 1);\n        Ammo.destroy(btVertex);\n      }\n\n      _finishCollisionShape(hull, options, scale);\n      shapes.push(hull);\n    }\n\n    return shapes;\n  };\n})();\n\nexport const createVHACDShapes = (function() {\n  const vector = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.VHACD;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: vhacd\");\n      return [];\n    }\n\n    if (!Ammo.hasOwnProperty(\"VHACD\")) {\n      console.warn(\n        \"VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.\"\n      );\n      return [];\n    }\n\n    const bounds = _computeBounds(vertices, matrices);\n    const scale = _computeScale(matrixWorld, options);\n\n    let vertexCount = 0;\n    let triCount = 0;\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3;\n      if (indexes && indexes[i]) {\n        triCount += indexes[i].length / 3;\n      } else {\n        triCount += vertices[i].length / 9;\n      }\n    }\n\n    const vhacd = new Ammo.VHACD();\n    const params = new Ammo.Parameters();\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\n    if (options.hasOwnProperty(\"resolution\")) params.set_m_resolution(options.resolution);\n    if (options.hasOwnProperty(\"depth\")) params.set_m_depth(options.depth);\n    if (options.hasOwnProperty(\"concavity\")) params.set_m_concavity(options.concavity);\n    if (options.hasOwnProperty(\"planeDownsampling\")) params.set_m_planeDownsampling(options.planeDownsampling);\n    if (options.hasOwnProperty(\"convexhullDownsampling\"))\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling);\n    if (options.hasOwnProperty(\"alpha\")) params.set_m_alpha(options.alpha);\n    if (options.hasOwnProperty(\"beta\")) params.set_m_beta(options.beta);\n    if (options.hasOwnProperty(\"gamma\")) params.set_m_gamma(options.gamma);\n    if (options.hasOwnProperty(\"pca\")) params.set_m_pca(options.pca);\n    if (options.hasOwnProperty(\"mode\")) params.set_m_mode(options.mode);\n    if (options.hasOwnProperty(\"maxNumVerticesPerCH\")) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH);\n    if (options.hasOwnProperty(\"minVolumePerCH\")) params.set_m_minVolumePerCH(options.minVolumePerCH);\n    if (options.hasOwnProperty(\"convexhullApproximation\"))\n      params.set_m_convexhullApproximation(options.convexhullApproximation);\n    if (options.hasOwnProperty(\"oclAcceleration\")) params.set_m_oclAcceleration(options.oclAcceleration);\n\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3);\n    const triangles = Ammo._malloc(triCount * 3 * 4);\n\n    let pptr = points / 8,\n      tptr = triangles / 4;\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < components.length; j += 3) {\n        vector\n          .set(components[j + 0], components[j + 1], components[j + 2])\n          .applyMatrix4(matrix)\n          .sub(center);\n        Ammo.HEAPF64[pptr + 0] = vector.x;\n        Ammo.HEAPF64[pptr + 1] = vector.y;\n        Ammo.HEAPF64[pptr + 2] = vector.z;\n        pptr += 3;\n      }\n      if (indexes[i]) {\n        const indices = indexes[i];\n        for (let j = 0; j < indices.length; j++) {\n          Ammo.HEAP32[tptr] = indices[j];\n          tptr++;\n        }\n      } else {\n        for (let j = 0; j < components.length / 3; j++) {\n          Ammo.HEAP32[tptr] = j;\n          tptr++;\n        }\n      }\n    }\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params);\n    Ammo._free(points);\n    Ammo._free(triangles);\n    const nHulls = vhacd.GetNConvexHulls();\n\n    const shapes = [];\n    const ch = new Ammo.ConvexHull();\n    for (let i = 0; i < nHulls; i++) {\n      vhacd.GetConvexHull(i, ch);\n      const nPoints = ch.get_m_nPoints();\n      const hullPoints = ch.get_m_points();\n\n      const hull = new Ammo.btConvexHullShape();\n      hull.setMargin(options.margin);\n\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3();\n        const px = ch.get_m_points(pi * 3 + 0);\n        const py = ch.get_m_points(pi * 3 + 1);\n        const pz = ch.get_m_points(pi * 3 + 2);\n        btVertex.setValue(px, py, pz);\n        hull.addPoint(btVertex, pi === nPoints - 1);\n        Ammo.destroy(btVertex);\n      }\n\n      _finishCollisionShape(hull, options, scale);\n      shapes.push(hull);\n    }\n    Ammo.destroy(ch);\n    Ammo.destroy(vhacd);\n\n    return shapes;\n  };\n})();\n\nexport const createTriMeshShape = (function() {\n  const va = new THREE.Vector3();\n  const vb = new THREE.Vector3();\n  const vc = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.MESH;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: mesh\");\n      return null;\n    }\n\n    const scale = _computeScale(matrixWorld, options);\n\n    const bta = new Ammo.btVector3();\n    const btb = new Ammo.btVector3();\n    const btc = new Ammo.btVector3();\n    const triMesh = new Ammo.btTriangleMesh(true, false);\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      const index = indexes[i] ? indexes[i] : null;\n      matrix.fromArray(matrices[i]);\n      if (index) {\n        for (let j = 0; j < index.length; j += 3) {\n          const ai = index[j] * 3;\n          const bi = index[j + 1] * 3;\n          const ci = index[j + 2] * 3;\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix);\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix);\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix);\n          bta.setValue(va.x, va.y, va.z);\n          btb.setValue(vb.x, vb.y, vb.z);\n          btc.setValue(vc.x, vc.y, vc.z);\n          triMesh.addTriangle(bta, btb, btc, false);\n        }\n      } else {\n        for (let j = 0; j < components.length; j += 9) {\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix);\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix);\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix);\n          bta.setValue(va.x, va.y, va.z);\n          btb.setValue(vb.x, vb.y, vb.z);\n          btc.setValue(vc.x, vc.y, vc.z);\n          triMesh.addTriangle(bta, btb, btc, false);\n        }\n      }\n    }\n\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z);\n    triMesh.setScaling(localScale);\n    Ammo.destroy(localScale);\n\n    const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true);\n    collisionShape.resources = [triMesh];\n\n    Ammo.destroy(bta);\n    Ammo.destroy(btb);\n    Ammo.destroy(btc);\n\n    _finishCollisionShape(collisionShape, options);\n    return collisionShape;\n  };\n})();\n\nexport const createHeightfieldTerrainShape = function(options = {}) {\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    console.warn(\"cannot use fit: all with type: heightfield\");\n    return null;\n  }\n  const heightfieldDistance = options.heightfieldDistance || 1;\n  const heightfieldData = options.heightfieldData || [];\n  const heightScale = options.heightScale || 0;\n  const upAxis = options.hasOwnProperty(\"upAxis\") ? options.upAxis : 1; // x = 0; y = 1; z = 2\n  const hdt = (() => {\n    switch (options.heightDataType) {\n      case \"short\":\n        return Ammo.PHY_SHORT;\n      case \"float\":\n        return Ammo.PHY_FLOAT;\n      default:\n        return Ammo.PHY_FLOAT;\n    }\n  })();\n  const flipQuadEdges = options.hasOwnProperty(\"flipQuadEdges\") ? options.flipQuadEdges : true;\n\n  const heightStickLength = heightfieldData.length;\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0;\n\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4);\n  const ptr = data / 4;\n\n  let minHeight = Number.POSITIVE_INFINITY;\n  let maxHeight = Number.NEGATIVE_INFINITY;\n  let index = 0;\n  for (let l = 0; l < heightStickLength; l++) {\n    for (let w = 0; w < heightStickWidth; w++) {\n      const height = heightfieldData[l][w];\n      Ammo.HEAPF32[ptr + index] = height;\n      index++;\n      minHeight = Math.min(minHeight, height);\n      maxHeight = Math.max(maxHeight, height);\n    }\n  }\n\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\n    heightStickWidth,\n    heightStickLength,\n    data,\n    heightScale,\n    minHeight,\n    maxHeight,\n    upAxis,\n    hdt,\n    flipQuadEdges\n  );\n\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance);\n  collisionShape.setLocalScaling(scale);\n  Ammo.destroy(scale);\n\n  collisionShape.heightfieldData = data;\n\n  _finishCollisionShape(collisionShape, options);\n  return collisionShape;\n};\n\nfunction _setOptions(options) {\n  options.fit = options.hasOwnProperty(\"fit\") ? options.fit : FIT.ALL;\n  options.type = options.type || TYPE.HULL;\n  options.minHalfExtent = options.hasOwnProperty(\"minHalfExtent\") ? options.minHalfExtent : 0;\n  options.maxHalfExtent = options.hasOwnProperty(\"maxHalfExtent\") ? options.maxHalfExtent : Number.POSITIVE_INFINITY;\n  options.cylinderAxis = options.cylinderAxis || \"y\";\n  options.margin = options.hasOwnProperty(\"margin\") ? options.margin : 0.01;\n  options.includeInvisible = options.hasOwnProperty(\"includeInvisible\") ? options.includeInvisible : false;\n\n  if (!options.offset) {\n    options.offset = new THREE.Vector3();\n  }\n\n  if (!options.orientation) {\n    options.orientation = new THREE.Quaternion();\n  }\n}\n\nconst _finishCollisionShape = function(collisionShape, options, scale) {\n  collisionShape.type = options.type;\n  collisionShape.setMargin(options.margin);\n  collisionShape.destroy = () => {\n    for (let res of collisionShape.resources || []) {\n      Ammo.destroy(res);\n    }\n    if (collisionShape.heightfieldData) {\n      Ammo._free(collisionShape.heightfieldData);\n    }\n    Ammo.destroy(collisionShape);\n  };\n\n  const localTransform = new Ammo.btTransform();\n  const rotation = new Ammo.btQuaternion();\n  localTransform.setIdentity();\n\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z);\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w);\n\n  localTransform.setRotation(rotation);\n  Ammo.destroy(rotation);\n\n  if (scale) {\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z);\n    collisionShape.setLocalScaling(localScale);\n    Ammo.destroy(localScale);\n  }\n\n  collisionShape.localTransform = localTransform;\n};\n\nexport const iterateGeometries = (function() {\n  const inverse = new THREE.Matrix4();\n  return function(root, options, cb) {\n    inverse.getInverse(root.matrixWorld);\n    const scale = new THREE.Vector3();\n    scale.setFromMatrixScale(root.matrixWorld);\n    root.traverse(mesh => {\n      const transform = new THREE.Matrix4();\n      if (\n        mesh.isMesh &&\n        mesh.name !== \"Sky\" &&\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\n      ) {\n        if (mesh === root) {\n          transform.identity();\n        } else {\n          mesh.updateWorldMatrix(true);\n          transform.multiplyMatrices(inverse, mesh.matrixWorld);\n        }\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\n        // things by the identity matrix\n        cb(\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\n          transform.elements,\n          mesh.geometry.index ? mesh.geometry.index.array : null\n        );\n      }\n    });\n  };\n})();\n\nconst _computeScale = (function() {\n  const matrix = new THREE.Matrix4();\n  return function(matrixWorld, options = {}) {\n    const scale = new THREE.Vector3(1, 1, 1);\n    if (options.fit === FIT.ALL) {\n      matrix.fromArray(matrixWorld);\n      scale.setFromMatrixScale(matrix);\n    }\n    return scale;\n  };\n})();\n\nconst _computeRadius = (function() {\n  const center = new THREE.Vector3();\n  return function(vertices, matrices, bounds) {\n    let maxRadiusSq = 0;\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center);\n\n    _iterateVertices(vertices, matrices, v => {\n      const dx = cx - v.x;\n      const dy = cy - v.y;\n      const dz = cz - v.z;\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz);\n    });\n    return Math.sqrt(maxRadiusSq);\n  };\n})();\n\nconst _computeHalfExtents = function(bounds, minHalfExtent, maxHalfExtent) {\n  const halfExtents = new THREE.Vector3();\n  return halfExtents\n    .subVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .clampScalar(minHalfExtent, maxHalfExtent);\n};\n\nconst _computeLocalOffset = function(matrix, bounds, target) {\n  target\n    .addVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .applyMatrix4(matrix);\n  return target;\n};\n\n// returns the bounding box for the geometries underneath `root`.\nconst _computeBounds = function(vertices, matrices) {\n  const bounds = new THREE.Box3();\n  let minX = +Infinity;\n  let minY = +Infinity;\n  let minZ = +Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n  bounds.min.set(0, 0, 0);\n  bounds.max.set(0, 0, 0);\n\n  _iterateVertices(vertices, matrices, v => {\n    if (v.x < minX) minX = v.x;\n    if (v.y < minY) minY = v.y;\n    if (v.z < minZ) minZ = v.z;\n    if (v.x > maxX) maxX = v.x;\n    if (v.y > maxY) maxY = v.y;\n    if (v.z > maxZ) maxZ = v.z;\n  });\n\n  bounds.min.set(minX, minY, minZ);\n  bounds.max.set(maxX, maxY, maxZ);\n  return bounds;\n};\n\nconst _iterateVertices = (function() {\n  const vertex = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, cb) {\n    for (let i = 0; i < vertices.length; i++) {\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < vertices[i].length; j += 3) {\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix);\n        cb(vertex);\n      }\n    }\n  };\n})();\n","import CONSTANTS from \"../constants.js\";\nconst MESSAGE_TYPES = CONSTANTS.MESSAGE_TYPES;\nconst TYPE = CONSTANTS.TYPE;\nconst SHAPE = CONSTANTS.SHAPE;\nconst CONSTRAINT = CONSTANTS.CONSTRAINT;\nconst BUFFER_CONFIG = CONSTANTS.BUFFER_CONFIG;\nconst BUFFER_STATE = CONSTANTS.BUFFER_STATE;\nimport * as THREE from \"three\";\nimport World from \"./world\";\nimport Body from \"./body\";\nimport Constraint from \"./constraint\";\nimport { DefaultBufferSize } from \"ammo-debug-drawer\";\n\nimport { createCollisionShapes } from \"three-to-ammo\";\n\nimport Ammo from \"ammo.js/builds/ammo.wasm.js\";\nimport AmmoWasm from \"ammo.js/builds/ammo.wasm.wasm\";\n\nfunction initializeWasm(wasmUrl) {\n  return Ammo.bind(undefined, {\n    locateFile(path) {\n      if (path.endsWith(\".wasm\")) {\n        if (wasmUrl) {\n          return wasmUrl;\n        } else {\n          return new URL(AmmoWasm, location.origin).href;\n        }\n      }\n      return path;\n    }\n  });\n}\n\nconst uuids = [];\nconst bodies = {};\nconst shapes = {};\nconst constraints = {};\nconst matrices = {};\nconst indexes = {};\nconst ptrToIndex = {};\n\nconst messageQueue = [];\n\nlet stepDuration = 0;\n\nlet freeIndex = 0;\nconst freeIndexArray = new Int32Array(BUFFER_CONFIG.MAX_BODIES);\nfor (let i = 0; i < BUFFER_CONFIG.MAX_BODIES - 1; i++) {\n  freeIndexArray[i] = i + 1;\n}\nfreeIndexArray[BUFFER_CONFIG.MAX_BODIES - 1] = -1;\n\nlet world, headerIntArray, headerFloatArray, objectMatricesFloatArray, objectMatricesIntArray, lastTick, getPointer;\nlet usingSharedArrayBuffer = false;\n\nfunction isBufferConsumed() {\n  if (usingSharedArrayBuffer) {\n    return headerIntArray && Atomics.load(headerIntArray, 0) !== BUFFER_STATE.READY;\n  } else {\n    return objectMatricesFloatArray && objectMatricesFloatArray.buffer.byteLength !== 0;\n  }\n}\n\nfunction releaseBuffer() {\n  if (usingSharedArrayBuffer) {\n    headerFloatArray[1] = stepDuration;\n    Atomics.store(headerIntArray, 0, BUFFER_STATE.READY);\n  } else {\n    postMessage({ type: MESSAGE_TYPES.TRANSFER_DATA, objectMatricesFloatArray, stepDuration }, [\n      objectMatricesFloatArray.buffer\n    ]);\n  }\n}\n\nconst tick = () => {\n  if (isBufferConsumed()) {\n    const now = performance.now();\n    const dt = now - lastTick;\n    world.step(dt / 1000);\n    stepDuration = performance.now() - now;\n    lastTick = now;\n\n    while (messageQueue.length > 0) {\n      const message = messageQueue.shift();\n      switch (message.type) {\n        case MESSAGE_TYPES.ADD_BODY:\n          addBody(message);\n          break;\n        case MESSAGE_TYPES.UPDATE_BODY:\n          updateBody(message);\n          break;\n        case MESSAGE_TYPES.REMOVE_BODY:\n          removeBody(message);\n          break;\n        case MESSAGE_TYPES.ADD_SHAPES:\n          addShapes(message);\n          break;\n        case MESSAGE_TYPES.ADD_CONSTRAINT:\n          addConstraint(message);\n          break;\n        case MESSAGE_TYPES.RESET_DYNAMIC_BODY:\n          resetDynamicBody(message);\n          break;\n        case MESSAGE_TYPES.ACTIVATE_BODY:\n          activateBody(message);\n      }\n    }\n\n    /** Buffer Schema\n     * Every physics body has 26 * 4 bytes (64bit float/int) assigned in the buffer\n     * 0-15:  Matrix4 elements (floats)\n     * 16:    Linear Velocity (float)\n     * 17:    Angular Velocity (float)\n     * 18-25: first 8 Collisions (ints)\n     */\n\n    for (let i = 0; i < uuids.length; i++) {\n      const uuid = uuids[i];\n      const body = bodies[uuid];\n      const index = indexes[uuid];\n      const matrix = matrices[uuid];\n\n      matrix.fromArray(objectMatricesFloatArray, index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.MATRIX_OFFSET);\n      body.updateShapes();\n\n      if (body.type === TYPE.DYNAMIC) {\n        body.syncFromPhysics();\n      } else {\n        body.syncToPhysics(false);\n      }\n\n      objectMatricesFloatArray.set(matrix.elements, index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.MATRIX_OFFSET);\n\n      objectMatricesFloatArray[\n        index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.LINEAR_VELOCITY_OFFSET\n      ] = body.physicsBody.getLinearVelocity().length();\n      objectMatricesFloatArray[\n        index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.ANGULAR_VELOCITY_OFFSET\n      ] = body.physicsBody.getAngularVelocity().length();\n\n      const ptr = getPointer(body.physicsBody);\n      const collisions = world.collisions.get(ptr);\n      for (let j = 0; j < BUFFER_CONFIG.BODY_DATA_SIZE - BUFFER_CONFIG.COLLISIONS_OFFSET; j++) {\n        if (!collisions || j >= collisions.length) {\n          objectMatricesIntArray[index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.COLLISIONS_OFFSET + j] = -1;\n        } else {\n          const collidingPtr = collisions[j];\n          if (ptrToIndex[collidingPtr]) {\n            objectMatricesIntArray[index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.COLLISIONS_OFFSET + j] =\n              ptrToIndex[collidingPtr];\n          }\n        }\n      }\n    }\n\n    releaseBuffer();\n  }\n};\nconst initSharedArrayBuffer = sharedArrayBuffer => {\n  /** BUFFER HEADER\n   * When using SAB, the first 4 bytes (1 int) are reserved for signaling BUFFER_STATE\n   * This is used to determine which thread is currently allowed to modify the SAB.\n   * The second 4 bytes (1 float) is used for storing stepDuration for stats.\n   */\n  usingSharedArrayBuffer = true;\n  headerIntArray = new Int32Array(sharedArrayBuffer, 0, BUFFER_CONFIG.HEADER_LENGTH);\n  headerFloatArray = new Float32Array(sharedArrayBuffer, 0, BUFFER_CONFIG.HEADER_LENGTH);\n  objectMatricesFloatArray = new Float32Array(\n    sharedArrayBuffer,\n    BUFFER_CONFIG.HEADER_LENGTH * 4,\n    BUFFER_CONFIG.BODY_DATA_SIZE * BUFFER_CONFIG.MAX_BODIES\n  );\n  objectMatricesIntArray = new Int32Array(\n    sharedArrayBuffer,\n    BUFFER_CONFIG.HEADER_LENGTH * 4,\n    BUFFER_CONFIG.BODY_DATA_SIZE * BUFFER_CONFIG.MAX_BODIES\n  );\n};\n\nconst initTransferrables = arrayBuffer => {\n  objectMatricesFloatArray = new Float32Array(arrayBuffer);\n  objectMatricesIntArray = new Int32Array(arrayBuffer);\n};\n\nfunction initDebug(debugSharedArrayBuffer, world) {\n  const debugIndexArray = new Uint32Array(debugSharedArrayBuffer, 0, 1);\n  const debugVerticesArray = new Float32Array(debugSharedArrayBuffer, 4, DefaultBufferSize);\n  const debugColorsArray = new Float32Array(debugSharedArrayBuffer, 4 + DefaultBufferSize, DefaultBufferSize);\n  world.getDebugDrawer(debugIndexArray, debugVerticesArray, debugColorsArray);\n}\n\nfunction addBody({ uuid, matrix, options }) {\n  if (freeIndex !== -1) {\n    const nextFreeIndex = freeIndexArray[freeIndex];\n    freeIndexArray[freeIndex] = -1;\n\n    indexes[uuid] = freeIndex;\n    uuids.push(uuid);\n    const transform = new THREE.Matrix4();\n    transform.fromArray(matrix);\n    matrices[uuid] = transform;\n\n    objectMatricesFloatArray.set(transform.elements, freeIndex * BUFFER_CONFIG.BODY_DATA_SIZE);\n    bodies[uuid] = new Body(options || {}, transform, world);\n    const ptr = getPointer(bodies[uuid].physicsBody);\n    ptrToIndex[ptr] = freeIndex;\n\n    postMessage({ type: MESSAGE_TYPES.BODY_READY, uuid, index: freeIndex });\n    freeIndex = nextFreeIndex;\n  }\n}\n\nfunction updateBody({ uuid, options }) {\n  if (bodies[uuid]) {\n    bodies[uuid].update(options);\n    bodies[uuid].physicsBody.activate(true);\n  }\n}\n\nfunction removeBody({ uuid }) {\n  delete ptrToIndex[getPointer(bodies[uuid].physicsBody)];\n  bodies[uuid].destroy();\n  delete bodies[uuid];\n  delete matrices[uuid];\n  delete shapes[uuid];\n  const index = indexes[uuid];\n  freeIndexArray[index] = freeIndex;\n  freeIndex = index;\n  delete indexes[uuid];\n  uuids.splice(uuids.indexOf(uuid), 1);\n}\n\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nfunction addShapes({ bodyUuid, shapesUuid, vertices, matrices, indexes, matrixWorld, options }) {\n  if (!bodies[bodyUuid]) return;\n\n  if (!matrixWorld) {\n    matrixWorld = IDENTITY_MATRIX;\n  }\n\n  const physicsShapes = createCollisionShapes(vertices, matrices, indexes, matrixWorld, options || { type: SHAPE.BOX });\n  for (let i = 0; i < physicsShapes.length; i++) {\n    const shape = physicsShapes[i];\n    bodies[bodyUuid].addShape(shape);\n  }\n  shapes[shapesUuid] = physicsShapes;\n}\n\nfunction addConstraint({ constraintId, bodyUuid, targetUuid, options }) {\n  if (bodies[bodyUuid] && bodies[targetUuid]) {\n    options = options || {};\n    if (!options.hasOwnProperty(\"type\")) {\n      options.type = CONSTRAINT.LOCK;\n    }\n    const constraint = new Constraint(options, bodies[bodyUuid], bodies[targetUuid], world);\n    constraints[constraintId] = constraint;\n  }\n}\n\nfunction resetDynamicBody({ uuid }) {\n  if (bodies[uuid]) {\n    const body = bodies[uuid];\n    const index = indexes[uuid];\n    matrices[uuid].fromArray(objectMatricesFloatArray, index * BUFFER_CONFIG.BODY_DATA_SIZE);\n    body.syncToPhysics(true);\n    body.physicsBody.getLinearVelocity().setValue(0, 0, 0);\n    body.physicsBody.getAngularVelocity().setValue(0, 0, 0);\n  }\n}\n\nfunction activateBody({ uuid }) {\n  if (bodies[uuid]) {\n    bodies[uuid].physicsBody.activate();\n  }\n}\n\nonmessage = async event => {\n  if (event.data.type === MESSAGE_TYPES.INIT) {\n    const AmmoModule = initializeWasm(event.data.wasmUrl);\n\n    AmmoModule().then(Ammo => {\n      getPointer = Ammo.getPointer;\n\n      if (event.data.sharedArrayBuffer) {\n        initSharedArrayBuffer(event.data.sharedArrayBuffer);\n      } else if (event.data.arrayBuffer) {\n        initTransferrables(event.data.arrayBuffer);\n      } else {\n        console.error(\"A valid ArrayBuffer or SharedArrayBuffer is required.\");\n      }\n\n      world = new World(event.data.worldConfig || {});\n      lastTick = performance.now();\n      self.setInterval(tick, 0);\n      postMessage({ type: MESSAGE_TYPES.READY });\n    });\n  } else if (event.data.type === MESSAGE_TYPES.TRANSFER_DATA) {\n    objectMatricesFloatArray = event.data.objectMatricesFloatArray;\n    objectMatricesIntArray = new Int32Array(objectMatricesFloatArray.buffer);\n  } else if (world) {\n    switch (event.data.type) {\n      case MESSAGE_TYPES.ADD_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n\n      case MESSAGE_TYPES.UPDATE_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n\n      case MESSAGE_TYPES.REMOVE_BODY: {\n        const uuid = event.data.uuid;\n        if (uuids.indexOf(uuid) !== -1) {\n          messageQueue.push(event.data);\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.ADD_SHAPES: {\n        const bodyUuid = event.data.bodyUuid;\n        if (bodies[bodyUuid]) {\n          addShapes(event.data);\n        } else {\n          messageQueue.push(event.data);\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.REMOVE_SHAPES: {\n        const bodyUuid = event.data.bodyUuid;\n        const shapesUuid = event.data.shapesUuid;\n        if (bodies[bodyUuid] && shapes[shapesUuid]) {\n          for (let i = 0; i < shapes[shapesUuid].length; i++) {\n            const shape = shapes[shapesUuid][i];\n            bodies[bodyUuid].removeShape(shape);\n          }\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.ADD_CONSTRAINT: {\n        const bodyUuid = event.data.bodyUuid;\n        const targetUuid = event.data.targetUuid;\n        if (bodies[bodyUuid] && bodies[targetUuid]) {\n          addConstraint(event.data);\n        } else {\n          messageQueue.push(event.data);\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.REMOVE_CONSTRAINT: {\n        const constraintId = event.data.constraintId;\n        if (constraints[constraintId]) {\n          constraints[constraintId].destroy();\n          delete constraints[constraintId];\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.ENABLE_DEBUG: {\n        const enable = event.data.enable;\n        if (!world.debugDrawer) {\n          initDebug(event.data.debugSharedArrayBuffer, world);\n        }\n\n        if (world.debugDrawer) {\n          if (enable) {\n            world.debugDrawer.enable();\n          } else {\n            world.debugDrawer.disable();\n          }\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.RESET_DYNAMIC_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n\n      case MESSAGE_TYPES.ACTIVATE_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n    }\n  } else {\n    console.error(\"Error: World Not Initialized\", event.data);\n  }\n};\n"],"sourceRoot":""}